@include "tf.fgd"

//=========================== Puddy's Custom FGD ==============================
// TF2 supplementary game definition file (.fgd)  
// Customization by ISPuddy.
// Latest Version will be at TF2Maps.net
//=============================================================================

@AutoVisGroup = "Custom"
[
	"New Entities"
	[
		"item_currencypack_large"
		"item_currencypack_medium"
		"item_currencypack_small"
		"item_currencypack_custom"
		"item_healthammokit"
		"prop_sphere"
		"ghost"
		"tf_zombie"
		"filter_tf_condition"
		"merasmus"
		"headless_hatman"
		"eyeball_boss"
		"path_corner"
		"point_commentary_node"
		"tf_populator"
		"tf_logic_bonusround"
		"item_sodacan"
		"item_powerup_rune_temp"
		"item_powerup_rune"
		"tf_projectile_spellspawnzombie"
		"tf_projectile_spellfireball"
		"halloween_souls_pack"
		"entity_bird"
		"entity_carrier"
		"entity_rocket"
		"entity_saucer"
		"entity_sign"
		"bot_npc_archer"
		"bot_npc_decoy"
		"trigger_brush"
		"prop_physics_respawnable"
		"multisource"
		"trigger_brush"
		"archer_proxy"
		//"game_zone_player"
		"func_train"
		"env_viewpunch"
		"env_sporeexplosion"
		"env_muzzleflash"
		"env_entity_dissolver"
		"env_detail_controller"
		"env_movieexplosion"
		"env_rockettrail"
		"filter_activator_team"
	]
]

// ============================================================
// WORLDSPAWN

@SolidClass base(Targetname,worldbase,ResponseContext) = worldspawn : 
	"This is the world entity. Each map can only contain one, and it's automatically created for you."
[
	message(string) : "Map Description / Title"
	chaptertitle(string) : "Chapter Title Message" : "" : "Chapter Title that appears onscreen when this level starts."
	skyname(string) : "SkyBox Texture Name" : "sky_tf2_04" : "The skybox texture of the map."
	startdark(choices) : "Level Fade In" : 0 =
	[	
		0 : "No"
		1 : "Yes"
	]
	gametitle(choices) : "Display Game Title" : 0 : "Game Title that appears onscreen when this level starts." = 
	[	
		0 : "No"
		1 : "Yes"
	]
	detailvbsp(string) : "Detail .vbsp file" : "detail_2fort.vbsp" : "Detail .vbsp file to use for emitting detail props (found in directory <root>/modname)"
	//[	
	//	"detail.vbsp" : "detail.vbsp"
	//	"detail_2fort.vbsp"		: "detail_2fort.vbsp"
	//	"detail_doomsday.vbsp"	: "detail_doomsday.vbsp"
	//	"detail_dustbowl.vbsp"	: "detail_dustbowl.vbsp"
	//	"detail_granary.vbsp"	: "detail_granary.vbsp"
	//	"detail_island.vbsp"	: "detail_island.vbsp"
	//	"detail_lakeside.vbsp"	: "detail_lakeside.vbsp"
	//	"detail_sawmill.vbsp"	: "detail_sawmill.vbsp"
	//	"detail_trainyard.vbsp"	: "detail_trainyard.vbsp"
	//]
	detailmaterial(string) : "Detail material file" : "detail/detailsprites_2fort" : "Material for detail sprites to use for drawing detail props"
	//[	
	//	"detail/detailsprites" : "detailsprites"
	//	"detail/detailsprites_2fort" 			: "detailsprites_2fort"
	//	"detail/detailsprites_dustbowl" 		: "detailsprites_dustbowl"
	//	"detail/detailsprites_granary" 		: "detailsprites_granary"
	//	"detail/detailsprites_harvest" 		: "detailsprites_harvest"
	//	"detail/detailsprites_island" 		: "detailsprites_island"
	//	"detail/detailsprites_sawmill" 		: "detailsprites_sawmill"
	//	"detail/detailsprites_trainyard" 		: "detailsprites_trainyard"
	//	"detail/detailsprites_viaduct_event" 	: "detailsprites_viaduct_event"
	//]
	coldworld(choices) : "World is cold" : 0 =
	[	
		0 : "No"
		1 : "Yes"
	]
]

//
// Base Classes
//

@BaseClass = Targetname 
[ 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	effects(string) : "Effect flags" : "0" : "For configuring visual effects."
	//gravity(string) : "Gravity" : "1" : "1 = normal 0 = no gravity"
	
	// Inputs
	input Kill(void) : "Removes this entity from the world."
	input KillHierarchy(void) : "Removes this entity and all its children from the world."
	input AddOutput(string) : "Adds an entity I/O connection to this entity. Format: <output name> <targetname>:<inputname>:<parameter>:<delay>:<max times to fire (-1 == infinite)>. Very dangerous, use with care."
	input FireUser1(void) : "Causes this entity's OnUser1 output to be fired."
	input FireUser2(void) : "Causes this entity's OnUser2 output to be fired."
	input FireUser3(void) : "Causes this entity's OnUser3 output to be fired."
	input FireUser4(void) : "Causes this entity's OnUser4 output to be fired."

	// Outputs	
	output OnUser1(void) : "Fired in response to FireUser1 input."
	output OnUser2(void) : "Fired in response to FireUser2 input."
	output OnUser3(void) : "Fired in response to FireUser3 input."
	output OnUser4(void) : "Fired in response to FireUser4 input."
]

@BaseClass = PTeamNum
[
	TeamNum(choices) : "Team" : 0 : "Team" =
	[
		0 : "Any"
		2 : "RED"
		3 : "BLU/ROBOTS"
		5 : "Halloween Bosses"
		1 : "Spectator / Halloween Souls"
	]
	input SetTeam(integer) : "Changes the entity's team."
]

@BaseClass = PGameType
[
	GameType(choices) : "Game Type" : 0 : "Type of game this flag will be used for." =
	[
		0 : "Capture The Flag"
		1 : "Attack/Defend / Mann Vs. Machine"
		2 : "Territory Control"
		3 : "Invade"
		4 : "Special Delivery / King Of The Hell"
		5 : "Robot Destruction"
		6 : "Player Destruction"
	]
]

@BaseClass = PCondition
[
	condition(choices) : "Condition" : -1 : "The condition to use." =
	[
		-1 : "TF_COND_INVALID"
		0 : "Slowed,as in when revving Minigun or zooming in with Sniper Rifles"		// Sniper aiming, Heavy minigun.
		1 : "Sniper Rifle zoom/scope"
		2 : "Disguise smoke"
		3 : "Disguise donning"
		4 : "Cloak effect"		// Spy specific
		5 : "UberCharge"
		6 : "Teleporter dust"
		7 : "Intended to be taunting"
		8 : "UberCharge expiration effect"
		9 : "Intended to be flickering effect if Cloaked"
		10 : "Intended to be condition for Teleporting. Does nothing"
		11 : "Kritzkrieg, Revenge crits"	// DO NOT RE-USE THIS -- THIS IS FOR KRITZKRIEG AND REVENGE CRITS ONLY
		12 : "temporary damage buff. Does nothing"
		13 : "Dead Ringer Cloak buff, works with any Spy watch"
		14 : "Bonk! Atomic Punch effect"
		15 : "Stunned effect"		// Any type of stun. Check iStunFlags for more info.
		16 : "Buff Banner effect"
		17 : "AnyClass Chargin' Targe effect."
		18 : "Eyelander glowing eye"
		19 : "Crit-a-Cola/Buffalo Steak Sandvich/Cleaner's Carbine effect"
		20 : "Amputator Medicating Melody effect"
		21 : "Intended to be the effect associated with any kind of continuous healing?"
		22 : "Ignite reaction (sound and speech, but no fire)"
		23 : "Overhealing"
		24 : "Jarate effect"
		25 : "Bleeding effect"
		26 : "Battalion's Backup effect"	// 35% defense! No crit damage.
		27 : "Mad Milk effect"
		28 : "Quick-Fix visual effects + knock back/movement immunity"
		29 : "Concheror effect"
		30 : "Fan o War marked for death"
		31 : "All attacks are mini-crits[no glow]"
		32 : "Disciplinary Action effect"		// = 32
		33 : "Halloween Candy pumpkin Crit boost"
		34 : "Canteen crit boost"
		35 : "Demoman Charge Crit boost"
		36 : "Soda Popper Hype multiple jump"
		37 : "Arena First Blood Crit boost"	// arena mode first blood
		38 : "Winning Crit Boost"
		39 : "Intelligence Capture crit boost"
		40 : "Crit boost from crit-on-kill weapons"		// KGB etc.
		41 : "Cannot switch away from melee weapon"
		42 : " Mann vs. Machine bomb carrier defensive buff"	// 35% defense! Still damaged by crits.
		//43 : "Unused/Not working anymore"				// Bots only
		44 : "Mmmph crit boost"
		45 : "Mmmph activation defense buff"			// 75% defense! Still damaged by crits.
		46 : "Focus effect"		// Sniper Rage - Charge time speed up
		47 : "Causes the Enforcer to lose its 20% damage bonus"		// Applied for half-second post-disguise
		48 : "Gloves of Running Urgently Marked for Death"		// Sans sound
		49 : "Disguised as Dispenser"
		50 : "Get Sapped,Sapped Bots"						// Bots only
		51 : "Hidden UberCharge"
		52 : "Canteen UberCharge,UberCharge powerup"
		53 : "Bomb Bomb Head"
		54 : "Forced Thriller"
		55 : "Amputator Heal"
		56 : "Miscellaneous Crit boost"
		57 : "Miscellaneous UberCharge"
		58 : "Vaccinator Uber bullet resistance"
		59 : "Vaccinator Uber blast resistance"
		60 : "Vaccinator Uber fire resistance"
		61 : "Vaccinator passive bullet resistance"
		62 : "Vaccinator passive blast resistance"
		63 : "Vaccinator passive fire resistance"
		64 : "Stealth"		// Any class can have this
		65 : "Medigun Debuff"
		66 : "Player ignored by Enemy Bots,Sentry Guns"
		67 : "Bullet damage immunity"
		68 : "Blast damage immunity"
		69 : "Fire damage immunity"
		70 : "Survive all damage until 1 health"
		71 : "Bot Gate-Capture Stun" // Bots only
		72 : "Minify Boost"
		73 : "Uber Heal"
		74 : "Giant"
		75 : "Minify"
		76 : "Becomes a Ghost on Death"
		77 : "Becomes a Ghost"
		78 : "Unused Cleaner's Carbine Effects"
		79 : "Chance to dodge damage"
		80 : "Parachute"
		81 : "Air Strike Bonus"
		82 : "Bumper Car"
		83 : "Bumper Car Boosting"
		84 : "Balloon Head"
		85 : "Melee weapons only"
		86 : "Swim in Jarate"
		87 : "Player is locked in place"
		88 : "Gains cage surrounding player"
		90 : "Strength powerup"
		91 : "Haste powerup"
		92 : "Regeneration powerup"
		93 : "Resistance powerup"
		94 : "Vampire powerup"
		95 : "Reflect powerup"
		96 : "Precision powerup"
		97 : "Agility powerup"
		98 : "player fires the Grappling Hook"
		99 : "Grappling Hook pulling"
		100 : "Grappling Hook latches to a wall"
		101 : "Grappling Hook Bleeding"
		102 : "Dead Ringer giving Afterburn"
		103 : "Knockout powerup"
		104 : "Prevents pickup Uber,Crit powerup"
		105 : "Mannpower Crit powerup"
		106 : "Jack Intercepts"
		107 : "Swimming no effects"
		108 : "Purgatory"
		109 : "The King powerup"
		110 : "The Plague powerup"
		111 : "The Supernova powerup"
		112 : "Plagued by the Plague powerup"
		113 : "King powerup Area Buff"
		114 : "Glow outlines on teammate"
		115 : "Compression blast"
		116 : "TF_COND_COMPETITIVE_WINNER"
		117 : "TF_COND_COMPETITIVE_LOSER"
		118 : "The healing debuff added by the Flamethrower"
		119 : "Jack mark for death"
		120 : "TF_COND_GRAPPLED_TO_PLAYER"
		121 : "TF_COND_GRAPPLED_BY_PLAYER"
		122 : "TF_COND_PARACHUTE_DEPLOYED"
		123 : "Gas coating effect from the Gas Passer"
		124 : "Afterburn applied to Pyros by Dragon's Fury."
		125 : "TF_COND_ROCKETPACK"
		126 : "Decreases the player's friction"
		127 : "TF_COND_AIR_CURRENT"
	]

]

@BaseClass = PAttributes
[
	attribute_name(choices) : "Attribute" : 1 : "The Attribute name" =
	[
		"damage penalty" :		"??? damage penalty"
		"damage bonus" :		"+??? damage bonus"
		"clip size penalty" :	"??? clip size"
		"clip size bonus" :		"+??? clip size"
		"fire rate penalty" :	"??? slower firing speed"
		"fire rate bonus" :		"+??? faster firing speed"
		"heal rate penalty" :	"??? heal rate"
		"heal rate bonus" :		"+??? heal rate"
		"ubercharge rate penalty" :		"??? UberCharge rate"
		"ubercharge rate bonus" :		"+??? UberCharge rate"
		"overheal bonus" :				"+??? max overheal"
		"overheal decay penalty" :		"??? shorter overheal time"
		"overheal decay bonus" :		"+??? longer overheal time"
		"overheal decay disabled" :		"Overheal bonus doesn't decay"
		"crit mod disabled" :			"No random critical hits"
		"heal on hit for rapidfire" :	"On Hit: +??? health"
		"add uber charge on hit" :		"On Hit: ??? UberCharge added"
		"medigun charge is crit boost" :		"UberCharge grants 100% critical chance"
		"tmp dmgbuff on hit" :			"On Hit: +??? damage bonus"
		"crit vs burning players" :		"100% critical hit vs burning players"
		"dmg penalty vs nonburning" :	"??? damage vs non-burning players"
		"no crit vs nonburning" :		"No critical hits vs non-burning players"
		"mod flamethrower push" :		"No compression blast"
		"mod flamethrower back crit" :		"100% critical hits from behind"
		"hidden secondary max ammo penalty" :		"hidden secondary max ammo penalty"
		"max health additive bonus" :		"+??? max health on wearer"
		"alt-fire disabled" :		"Alt-Fire Disabled"
		"crit mod disabled hidden" :		"No random critical hits"
		"alt-fire is vampire" :		"Alt-Fire Is Vampire"
		"fists have radial buff" :		"On Kill: +50 health on nearby teammates"
		"critboost on kill" :		"On Kill: ??? seconds of 100% critical chance"
		"slow enemy on hit" :		"On Hit: ??? chance to slow target"
		"set cloak is feign death" :		"Cloak Type: Feign Death"
		"mult cloak meter consume rate" :		"+??? cloak drain rate"
		"mult cloak meter regen rate" :		"+??? cloak regen rate"
		"spread penalty" :		"??? less accurate"
		"hidden primary max ammo bonus" :		"hidden primary max ammo bonusn"
		"mod bat launches balls" :		"Alt-Fire: Launches a ball that stuns opponents"
		"dmg penalty vs nonstunned" :		"??? damage vs non-stunned players"
		"zoom speed mod disabled" :		"No move speed penalty from zoom"
		"sniper charge per sec" :		"+??? charge rate"
		"sniper no headshots" :		"No headshots"
		"scattergun no reload single" :		"scattergun no reload single"
		"scattergun has knockback" :		"Knockback on the target and shooter"
		"bullets per shot bonus" :		"+??? bullets per shot"
		"sniper zoom penalty" :		"??? zoom reduction"
		"sniper no charge" :		"No zoom or damage charge"
		"set cloak is movement based" :		"Cloak Type: Motion Sensitive"
		"no double jump" :		"Disables double jump"
		"absorb damage while cloaked" :		"Absorbs ??? damage while cloaked"
		"revolver use hit locations" :		"Crits on headshot"
		"backstab shield" :		"Blocks a single backstab attempt"
		"fire retardant" :		"Wearer cannot ignite"
		"move speed penalty" :		"??? slower move speed on wearer"
		"obsolete ammo penalty" :		"obsolete ammo penalty"
		"jarate description" :		"Coated enemies take mini-crits"
		"health regen" :		"+??? health regenerated per second on wearer"
		"self dmg push force increased" :		"+??? self damage force"
		"self dmg push force decreased" :		"??? self damage force"
		"dmg taken from fire reduced" :		"+??? fire damage resistance on wearer"
		"dmg taken from fire increased" :		"??? fire damage vulnerability on wearer"
		"dmg taken from crit reduced" :		"+??? critical hit damage resistance on wearer"
		"dmg taken from crit increased" :		"??? critical hit damage vulnerability on wearer"
		"dmg taken from blast reduced" :		"+??? explosive damage resistance on wearer"
		"dmg taken from blast increased" :		"??? explosive damage vulnerability on wearer"
		"dmg taken from bullets reduced" :		"+??? bullet damage resistance on wearer"
		"dmg taken from bullets increased" :		"??? bullet damage vulnerability on wearer"
		"increase player capture value" :		"+??? capture rate on wearer"
		"health from healers reduced" :		"??? health from healers on wearer"
		"health from healers increased" :		"+??? health from healers on wearer"
		"weapon burn dmg increased" :		"+??? afterburn damage bonus"
		"weapon burn dmg reduced" :		"??? afterburn damage penalty"
		"weapon burn time increased" :		"+??? afterburn duration"
		"weapon burn time reduced" :		"??? afterburn duration"
		"aiming movespeed increased" :		"+??? faster move speed while deployed"
		"maxammo primary increased" :		"+??? max primary ammo on wearer"
		"maxammo primary reduced" :		"??? max primary ammo on wearer"
		"maxammo secondary increased" :		"+??? max secondary ammo on wearer"
		"maxammo secondary reduced" :		"??? max secondary ammo on wearer"
		"maxammo metal increased" :		"+??? max metal on wearer"
		"maxammo metal reduced" :		"??? max metal on wearer"
		"cloak consume rate increased" :		"-??? cloak duration"
		"cloak consume rate decreased" :		"+??? cloak duration"
		"cloak regen rate increased" :		"+??? cloak regeneration rate"
		"cloak regen rate decreased" :		"??? cloak regeneration rate"
		"minigun spinup time increased" :		"??? slower spin up time"
		"minigun spinup time decreased" :		"??? faster spin up time"
		"max pipebombs increased" :		"+??? max pipebombs out"
		"max pipebombs decreased" :		"??? max pipebombs out"
		"SRifle Charge rate increased" :		"??? faster power charge"
		"SRifle Charge rate decreased" :		"??? slower power charge"
		"Construction rate increased" :		"??? faster construction rate"
		"Construction rate decreased" :		"??? slower construction rate"
		"Repair rate increased" :		"??? faster repair rate"
		"Repair rate decreased" :		"??? slower repair rate"
		"Reload time increased" :		"??? slower reload time"
		"Reload time decreased" :		"??? faster reload time"
		"selfdmg on hit for rapidfire" :		"On Hit: ??? health"
		"Blast radius increased" :		"+??? explosion radius"
		"Blast radius decreased" :		"??? explosion radius"
		"Projectile range increased" :		"+??? projectile range"
		"Projectile range decreased" :		"??? projectile range"
		"Projectile speed increased" :		"+??? projectile speed"
		"Projectile speed decreased" :		"??? projectile speed"
		"overheal penalty" :		"??? max overheal"
		"weapon spread bonus" :		"??? more accurate"
		"move speed bonus" :		"+??? faster move speed on wearer"
		"health from packs increased" :		"+??? health from packs on wearer"
		"health from packs decreased" :		"??? health from packs on wearer"
		"heal on hit for slowfire" :		"On Hit: +??? health"
		"selfdmg on hit for slowfire" :		"On Hit: ??? health"
		"ammo regen" :		"+??? ammo regenerated every 5 seconds on wearer"
		"metal regen" :		"+??? metal regenerated every 5 seconds on wearer"
		"mod mini-crit airborne" :		"Mini-crits targets launched airborne by explosions"
		"mod shovel damage boost" :		"Damage increases as the user becomes injured"
		"mod soldier buff type" :		"mod soldier buff type"
		"dmg falloff increased" :		"Attrib Damage Falloff Increased"
		"dmg falloff decreased" :		"??? splash damage fall off"
		"sticky detonate mode" :		"Detonates stickybombs near the crosshair and directly under your feet"
		"sticky arm time penalty" :		"??? sec slower bomb arm time"
		"stickies detonate stickies" :		"Able to destroy enemy stickybombs"
		"mod demo buff type" :		"mod demo buff type"
		"speed boost when active" :		"??? speed boost while active weapon"
		"mod wrench builds minisentry" :		"Replaces the Sentry with a fast building Mini-Sentry"
		"max health additive penalty" :		"??? max health on wearer"
		"sticky arm time bonus" :		"??? sec faster bomb arm time"
		"sticky air burst mode" :		"Launched bombs shatter on surfaces"
		"provide on active" :		"When weapon is active:"
		"health drain" :		"??? health drained per second on wearer"
		"medic regen bonus" :		"+??? natural regen rate"
		"medic regen penalty" :		"-??? natural regen rate"
		"community description" :		"Given to valuable Community Contributors"
		"soldier model index" :		"Medal no. ???"
		"attach particle effect" :		"Effect: ???"
		"rocket jump damage reduction" :		"??? blast damage from rocket jumps"
		"mod sentry killed revenge" :		"When your sentry is destroyed you"
		"dmg bonus vs buildings" :		"??? damage vs buildings"
		"dmg penalty vs players" :		"??? damage vs players"
		"lunchbox adds maxhealth bonus" :		"Adds +50 max health for 30 seconds"
		"hidden maxhealth non buffed" :		"+??? max health on wearer"
		"selfmade description" :		"I made this!"
		"set item tint RGB" :		"Item tint color code: ???"
		"custom employee number" :		"Hire Date: ???"
		"lunchbox adds minicrits" :		"Sets weapon mode #???"
		"taunt is highfive" :		"taunt is highfive"
		"damage applies to sappers" :		"Damage removes Sappers"
		"Wrench index" :		"Wrench no. ???"
		"building cost reduction" :		"??? metal reduction in building cost"
		"bleeding duration" :		"On Hit: Bleed for ??? seconds"
		"turn to gold" :		"Imbued with an ancient power"
		"DEPRECATED socketed item definition id DEPRECATED" :		"Socket"
		"custom texture lo" :		"custom texture lo"
		"cannot trade" :		"Not Tradable"
		"disguise on backstab" :		"Upon a successful backstab against a human target, you rapidly disguise as your victim"
		"cannot disguise" :		"Wearer cannot disguise"
		"silent killer" :		"Silent Killer: No attack noise from backstabs"
		"disguise speed penalty" :		"??? sec slower disguise speed"
		"add cloak on kill" :		"+??? cloak on kill"
		"cloak blink time penalty" :		"??? sec longer cloak blink time"
		"quiet unstealth" :		"Reduced decloak sound volume"
		"flame size penalty" :		"??? less flame spread area"
		"flame size bonus" :		"+??? more flame spread area"
		"flame life penalty" :		"??? less flame distance"
		"flame life bonus" :		"+??? more flame distance"
		"charged airblast" :		"Airblast can now be charged, which will push enemies further"
		"add cloak on hit" :		"+??? cloak on hit"
		"disguise damage reduction" :		"Disguise Damage Reduction"
		"disguise no burn" :		"Immune to fire damage while disguised"
		"dmg from sentry reduced" :		"+??? sentry damage resistance on wearer"
		"airblast cost increased" :		"+??? airblast cost"
		"airblast cost decreased" :		"??? airblast cost"
		"purchased" :		"Purchased: Not Tradable or Usable in Crafting"
		"flame ammopersec increased" :		"+??? flamethrower ammo consumed per second"
		"flame ammopersec decreased" :		"??? flamethrower ammo consumed per second"
		"jarate duration" :		"On Hit: Jarate applied to target for ??? seconds"
		"no death from headshots" :		"The wearer cannot be killed by headshots"
		"deploy time increased" :		"??? longer weapon switch"
		"deploy time decreased" :		"??? faster weapon switch"
		"minicrits become crits" :		"Crits whenever it would normally mini-crit"
		"heal on kill" :		"+??? health restored on kill"
		"no self blast dmg" :		"No self inflicted blast damage taken"
		"slow enemy on hit major" :		"On Hit: Slow target movement by 40% for ???s"
		"aiming movespeed decreased" :		"??? slower move speed while deployed"
		"duel loser account id" :		"Duel Loser Account ID"
		"event date" :				"Date Received: ???"
		"gifter account id" :		"Gift from: ???"
		"set supply crate series" :		"Crate Series #???"
		"preserve ubercharge" :		"On death up to ??? of your stored"
		"elevate quality" :			"elevate quality"
		"active health regen" :		"+??? health regenerated per second on wearer"
		"active health degen" :		"??? health drained per second on wearer"
		"referenced item id low" :		"referenced item id low"
		"referenced item id high" :		"eferenced item id high"
		"referenced item def" :		"Contains: ???"
		"always tradable" :		"Always Tradable"
		"noise maker" :		"Noise Maker"
		"halloween item" :		"This is a special Halloween ??? item"
		"collection bits" :		"collection bits"
		"fires healing bolts" :		"Fires special bolts that heal teammates and deal damage based on distance traveled"
		"enables aoe heal" :		"On Taunt: Applies a healing effect to all nearby teammates"
		"gesture speed increase" :		"+??? faster taunt speed on wearer"
		"charge time increased" :		"??? sec increase in charge duration"
		"drop health pack on kill" :		"On Kill: A small health pack is dropped"
		"hit self on miss" :		"On Miss: Hit yourself. Idiot."
		"dmg from ranged reduced" :		"??? damage from ranged sources while active"
		"dmg from melee increased" :		"+??? damage from melee sources while active"
		"blast dmg to self increased" :		"+??? damage to self"
		"Set DamageType Ignite" :		"On Hit: target is engulfed in flames"
		"minicrit vs burning player" :		"100% minicrits vs burning players"
		"paint effect" :		"paint effect"
		"tradable after date" :		"Tradable After: ???"
		"force level display" :		"Force level display"
		"random level curve replacement" :		"Random level curve replacement"
		"kill eater" :		"Kill Eater"
		"apply z velocity on damage" :		"apply z velocity on damage"
		"apply look velocity on damage" :		"apply look velocity on damage"
		"sanguisuge" :		"On Backstab: Absorbs the health from your victim."
		"mark for death" :		"On Hit: One target at a time is marked for death, causing all damage taken to be mini-crits"
		"decapitate type" :		"decapitate type"
		"restore health on kill" :		"On Kill: Restores you to ??? health"
		"mult decloak rate" :		"Decloak Rate"
		"mult sniper charge after bodyshot" :		"On Scoped Bodyshot: Rifle charge rate increased by ???"
		"mult sniper charge after miss" :		"On Scoped Miss: Rifle charge rate decreased by ???"
		"dmg bonus while half dead" :		"??? increase in damage when health <50% of max"
		"dmg penalty while half alive" :		"??? decrease in damage when health >50% of max"
		"honorbound" :		"Honorbound: Once drawn cannot be sheathed until it kills."
		"custom texture hi" :		"custom texture hi"
		"makers mark id" :		"Crafted by ???"
		"unique craft index" :		"unique craft index"
		"mod medic killed revenge" :		"When the medic healing you is killed you"
		"medigun charge is megaheal" :		"UberCharge increases healing by 300% and grants immunity to movement-impairing effects"
		"mod medic killed minicrit boost" :		"When the medic healing you is killed"
		"mod medic healed damage bonus" :		"While a medic is healing you,"
		"mod medic healed deploy time penalty" :		"While not being healed by a medic,"
		"mod shovel speed boost" :		"Move speed increases as the user becomes injured"
		"mod weapon blocks healing" :		"Blocks healing while in use"
		"mult sniper charge after headshot" :		"On Scoped Headshot: Rifle charge rate increased by ???"
		"minigun no spin sounds" :		"Silent Killer: No barrel spin sound"
		"ubercharge rate bonus for healer" :		"+??? UberCharge rate for the medic healing you"
		"reload time decreased while healed" :		"??? faster reload time while being healed"
		"reload time increased hidden" :		"??? slower reload time"
		"mod medic killed marked for death" :		"When the medic healing you is killed"
		"mod rage on hit penalty" :		"??? rage lost on hit"
		"mod rage on hit bonus" :		"??? rage gained on hit"
		"mod rage damage boost" :		"Gains a damage bonus as rage increases, up to ???"
		"mult charge turn control" :		"+??? increase in turning control while charging"
		"no charge impact range" :		"Can deal charge impact damage at any range"
		"charge impact damage increased" :		"+??? increase in charge impact damage"
		"charge recharge rate increased" :		"+??? increase in charge recharge rate"
		"air dash count" :		"Grants Triple Jump: The third jump deals 10 damage when used"
		"speed buff ally" :		"On Hit Ally: Boosts both players' speed for several seconds"
		"damage force reduction" :		"??? reduction in push force taken from damage"
		"mult cloak rate" :		"??? sec increase in time to cloak"
		"airblast functionality flags" :		"airblast functionality flags"
		"airblast pushback scale" :		"+??? airblast push force"
		"mult airblast refire time" :		"mult airblast refire time"
		"airblast vertical pushback scale" :		"irblast vertical pushback scale"
		"ammo becomes health" :		"All ammo collected becomes health"
		"boots falling stomp" :		"Deals 3x falling damage to the player you land on"
		"deflection size multiplier" :		"Deflection Size Multiplier"
		"set item tint RGB 2" :		"Item tint color code: ???"
		"saxxy award category" :		"Winner: ??? %s2"
		"melee bounds multiplier" :		"melee bounds multiplier"
		"melee range multiplier" :		"melee range multiplier"
		"mod mini-crit airborne deploy" :		"Mini-crits airborne targets for ??? seconds after being deployed"
		"projectile penetration" :		"Projectiles penetrate enemy players"
		"mod crit while airborne" :		"Deals crits while the wielder is rocket jumping"
		"mult sniper charge penalty DISPLAY ONLY" :		"Base charge rate decreased by ???"
		"mod see enemy health" :		"Allows you to see enemy health"
		"powerup max charges" :		"Holds a maximum of ??? charges"
		"powerup charges" :		"Currently holds ??? charges"
		"powerup duration" :		"Each charge lasts ??? seconds"
		"critboost" :		"Consumable: Become Crit Boosted for 5 seconds"
		"ubercharge" :		"Consumable: Become Ubercharged for 5 seconds"
		"cancel falling damage" :		"Wearer never takes falling damage"
		"bidirectional teleport" :		"Teleporters can be used in both directions"
		"multiple sentries" :		"MultipleSentries"
		"effect bar recharge rate increased" :		"+??? increase in recharge rate"
		"maxammo grenades1 increased" :		"+??? max misc ammo on wearer"
		"override projectile type" :		"override projectile type"
		"energy weapon no ammo" :		"Does not require ammo"
		"energy weapon charged shot" :		"Alt-Fire: A charged shot that mini-crits"
		"energy weapon penetration" :		"Projectile penetrates enemy targets"
		"energy weapon no hurt building" :		"Deals only 20% damage to buildings"
		"energy weapon no deflect" :		"Projectile cannot be deflected"
		"engy building health bonus" :		"+??? max building health"
		"engy sentry damage bonus" :		"+??? Sentry Gun damage bonus"
		"no crit boost" :		"Cannot be crit boosted"
		"centerfire projectile" :		"centerfire projectile"
		"kill eater score type" :		"kill eater score type"
		"kill eater score type 2" :		"kill eater score type 2"
		"kill eater 2" :		"kill eater 2"
		"has pipboy build interface" :		"has pipboy build interface"
		"sapper kills collect crits" :		"Gives one guaranteed critical hit for each"
		"sniper only fire zoomed" :		"Cannot fire unless zoomed"
		"mod ammo per shot" :		"Per Shot: -??? ammo"
		"add onhit addammo" :		"On Hit: damage dealt is returned as ammo"
		"electrical airblast DISPLAY ONLY" :		"On Fire: Generates an electrical field that destroys"
		"mod use metal ammo type" :		"Uses metal for ammo"
		"expiration date" :		"This item will expire on ???."
		"mod max primary clip override" :		"mod max primary clip override"
		"sniper full charge damage bonus" :		"On Full Charge: +??? damage per shot"
		"sniper fires tracer DISPLAY ONLY" :		"Fires tracer rounds"
		"sniper no headshot without full charge" :		"No headshots when not fully charged"
		"mod no reload DISPLAY ONLY" :		"No reload necessary"
		"sniper penetrate players when charged" :		"On Full Charge: Projectiles penetrate players"
		"crit kill will gib" :		"Killing an enemy with a critical hit will dismember your victim. Painfully."
		"recall" :		"Consumable: Instantly teleport to spawn"
		"unlimited quantity" :		"Unlimited use"
		"disable weapon hiding for animations" :		"disable weapon hiding for animations"
		"applies snare effect" :		"??? movement speed on targets"
		"uber duration bonus" :		"Uber duration increased ??? seconds"
		"refill_ammo" :		"Consumable: Instantly refill all weapon clips and ammo"
		"store sort override DEPRECATED" :		"ore sort override DEPRECATEE"
		"faster reload rate" :		"+??? faster reload time"
		"increase buff duration" :		"+??? buff duration"
		"robo sapper" :		"Increased robot Sapper radius and duration"
		"build rate bonus" :		"+??? faster build speed"
		"taunt is press and hold" :		"taunt is press and hold"
		"attack projectiles" :		"Bullets destroy rockets and grenades in-flight"
		"accuracy scales damage" :		"Accuracy scales damage"
		"currency bonus" :		"+??? bonus currency from packs"
		"increased jump height" :		"+??? greater jump height"
		"building instant upgrade" :		"Consumable: Instantly upgrade all buildings to max level"
		"disable fancy class select anim" :		"disable fancy class select anim"
		"airblast vulnerability multiplier" :		"AirBlast Vulnerability Multipier"
		"override footstep sound set" :		"override footstep sound set"
		"spawn with physics toy" :		"spawn with physics toy"
		"fish damage override" :		"fish damage override"
		"special dsp" :		"special dsp"
		"bombinomicon effect on death" :		"Explode spectacularly on death"
		"clip size bonus upgrade" :		"+??? clip size"
		"hide enemy health" :		"Unable to see enemy health"
		"subtract victim medigun charge on hit" :		"On Hit: Victim loses ??? Medigun charge"
		"subtract victim cloak on hit" :		"On Hit: Victim loses ??? cloak"
		"reveal cloaked victim on hit" :		"On Hit Spy: Reveal cloaked Spy"
		"reveal disguised victim on hit" :		"On Hit Spy: Reveal disguised Spy"
		"jarate backstabber" :		"When backstabbed: Jarate attacker"
		"engy sentry fire rate increased" :		"+??? sentry firing speed"
		"engy sentry radius increased" :		"+??? sentry range"
		"engy dispenser radius increased" :		"+??? dispenser range"
		"mod bat launches ornaments" :		"Alt-Fire: Launches a festive ornament that shatters causing bleed"
		"freeze backstab victim" :		"Backstab turns victim to ice"
		"fire rate penalty HIDDEN" :		"fire rate penalty HIDDEN"
		"energy weapon no drain" :		"energy weapon no drain"
		"ragdolls become ash" :		"agdolls become ash"
		"engy disposable sentries" :		"Build +??? additional disposable-sentry"
		"alt fire teleport to spawn" :		"On Alt-Fire: Teleport to spawn"
		"cannot pick up buildings" :		"Cannot carry buildings"
		"stun enemies wielding same weapon" :		"Stuns enemies who are also wielding this weapon"
		"airblast disabled" :		"No airblast"
		"increase buff duration HIDDEN" :		"increase buff duration HIDDEN"
		"crit forces victim to laugh" :		"Critical hit forces victim to laugh"
		"melts in fire" :		"Melts in fire, regenerates after ??? seconds"
		"damage all connected" :		"All players connected via Medigun beams are hit"
		"become fireproof on hit by fire" :		"On Hit by Fire: Become fireproof for ??? seconds"
		"crit from behind" :		"Always critical hit from behind"
		"crit does no damage" :		"Critical hits do no damage"
		"add jingle to footsteps" :		"Jingle all the way"
		"set icicle knife mode" :		"set icicle knife mode"
		"mod stun waist high airborne" :		"On Hit: If enemy's belt is at or above eye level,"
		"extinguish earns revenge crits" :		"Alt-Fire: Extinguish teammates to gain guaranteed critical hits"
		"burn damage earns rage" :		"All fire damage charges 'Mmmph', activate to refill health and crit for several seconds"
		"tickle enemies wielding same weapon" :		"On Hit: Force enemies to laugh who are also wearing this item"
		"attach particle effect static" :		"Effect: ???"
		"taunt success sound" :		"TauntSoundSuccess"
		"accepted wedding ring account id 1" :		"A perpetual bond of commitment between ???"
		"accepted wedding ring account id 2" :		"and ???, forever and ever and ever. XoXoX"
		"tool escrow until date" :		"Usable After: ???"
		"generate rage on damage" :		"+??? rage on damage"
		"aiming no flinch" :		"No flinching when aiming"
		"aiming knockback resistance" :		"Knockback reduced by ??? when aiming"
		"sniper aiming movespeed decreased" :		"??? slower move speed when aiming"
		"kill eater user 1" :		"Kill eater user 1"
		"kill eater user score type 1" :		"Kill eater user score type 1"
		"kill eater user 2" :		"Kill eater user 2"
		"kill eater user score type 2" :		"Kill eater user score type 2"
		"kill eater user 3" :		"Kill eater user 3"
		"kill eater user score type 3" :		"Kill eater user score type 3"
		"strange part new counter ID" :		"Strange part new counter ID"
		"mvm completed challenges bitmask" :		"Mvm completed challenges bitmask"
		"rage on kill" :		"Gain Focus on kills and assists"
		"kill eater kill type" :		"Kill eater kill type"
		"shot penetrate all players" :		"Shots go through multiple enemies"
		"headshot damage increase" :		"Headshots deal an extra +??? damage"
		"mystery solving time decrease" :		"Reduces mystery solving time by up to ???"
		"damage penalty on bodyshot" :		"??? damage on body shot"
		"sniper rage DISPLAY ONLY" :		"Focus activates on Fire when Focus meter is full"
		"fire rate bonus HIDDEN" :		"+??? Firing Speed HIDDEN"
		"explosive sniper shot" :		"Increased headshot explosion radius and damage to nearby enemies"
		"melee attack rate bonus" :		"+??? faster melee attack speed"
		"projectile penetration heavy" :		"Bullets penetrate +??? enemies"
		"rage on assists" :		"Rage Gain On Assists"
		"armor piercing" :		"Allow backstabs against Giant Robots at ??? damage"
		"cannot pick up intelligence" :		"Wearer cannot carry the intelligence briefcase"
		"chance of hunger decrease" :		"Reduces chance of hunger by up to ???"
		"cannot be backstabbed" :		"Cannot be backstabbed"
		"squad surplus claimer id DEPRECATED" :		"Squad surplus claimed by: ???"
		"share consumable with patient" :		"Using your Power Up Canteen will apply the same bonus effect to your heal target"
		"airblast vertical vulnerability multiplier" :		"AirBlast Vertical Vulnerability Multipier"
		"vision opt in flags" :		"Vision opt in flags"
		"crit vs disguised players" :		"100% critical hit vs disguised players"
		"crit vs non burning players" :		"100% critical hit vs non-burning players"
		"kill forces attacker to laugh" :		"On Kill: Burst into joyous laughter"
		"damage bonus while undisguised" :		"+??? damage bonus while undisguised"
		"projectile spread angle penalty" :		"+??? degrees random projectile deviation"
		"dmg taken increased" :		"??? damage vulnerability on wearer"
		"auto fires full clip" :		"Hold Fire to load up to three rockets"
		"self mark for death" :		"You are marked for death while active, and for short period after switching weapons"
		"counts as assister is some kind of pet this update is going to be awesome" :		"counts as assister is some kind of pet this update is going to be awesome"
		"mod flaregun fires pellets with knockback" :		"Flare knocks back target on hit"
		"can overload" :		"Overloading the chamber will cause a misfire"
		"hype on damage" :		"On Hit: Builds Boost"
		"hype resets on jump" :		"Boost resets on jump"
		"pyro year number" :		"Witnessed the ??? inferno"
		"no primary ammo from dispensers" :		"Cannot collect ammo from dispensers"
		"pyrovision only DISPLAY ONLY" :		"Only visible in Pyroland"
		"clip size penalty HIDDEN" :		"-??? clip size HIDDEN"
		"sapper damage bonus" :		"+??? sapper damage bonus"
		"sapper damage penalty" :		"??? sapper damage penalty"
		"sapper damage leaches health" :		"+??? health regenerated per second for each active sapper"
		"sapper health bonus" :		"??? sapper health bonus"
		"sapper health penalty" :		"??? sapper health penalty"
		"ring of fire while aiming" :		"Sustains a ring of flames while deployed"
		"uses ammo while aiming" :		"??? ammo consumed per second while deployed"
		"sapper degenerates buildings" :		"Reverses enemy building construction"
		"sapper damage penalty hidden" :		"sapper damage penalty hidden"
		"cleaver description" :		"Throw at your enemies to make them bleed!"
		"ragdolls plasma effect" :		"Ragdolls plasma effect"
		"crit vs stunned players" :		"100% critical hit vs stunned players"
		"crit vs wet players" :		"100% critical hit vs wet players"
		"override item level desc string" :		"override item level desc string"
		"clip size upgrade atomic" :		"+??? clip size"
		"major move speed bonus" :		"major move speed bonus"
		"major increased jump height" :		"major increased jump heightn"
		"head scale" :		"Disables double jump"
		"pyrovision opt in DISPLAY ONLY" :		"On Equip: Visit Pyroland"
		"halloweenvision opt in DISPLAY ONLY" :		"halloweenvision opt in DISPLAY ONLY"
		"halloweenvision filter DISPLAY ONLY" :		"halloweenvision filter DISPLAY ONLY"
		"player skin override" :		"player skin override"
		"never craftable" :		"never craftable"
		"zombiezombiezombiezombie" :		"zombiezombiezombiezombie"
		"merasmus hat level display ONLY" :		"Killed Merasmus at level ???"
		"strange restriction type 1" :		"strange restriction type 1"
		"strange restriction value 1" :		"strange restriction value 1"
		"strange restriction type 2" :		"strange restriction type 2"
		"strange restriction value 2" :		"strange restriction value 2"
		"strange restriction user type 1" :		"strange restriction user type 1"
		"strange restriction user value 1" :		"strange restriction user value 1"
		"strange restriction user type 2" :		"strange restriction user type 2"
		"strange restriction user value 2" :		"strange restriction user value 2"
		"strange restriction user type 3" :		"strange restriction user type 3"
		"strange restriction user value 3" :		"strange restriction user value 3"
		"engineer sentry build rate multiplier" :		"engineer sentry build rate multiplier"
		"engineer teleporter build rate multiplier" :		"engineer teleporter build rate multiplier"
		"grenade launcher mortar mode" :		"grenade launcher mortar mode"
		"grenade not explode on impact" :		"grenade not explode on impact"
		"strange score selector" :		"strange score selector"
		"engineer building teleporting pickup" :		"engineer building teleporting pickup"
		"grenade damage reduction on world contact" :		"grenade damage reduction on world contact"
		"engineer rage on dmg" :		"engineer rage on dmg"
		"mark for death on building pickup" :		"mark for death on building pickup"
		"medigun charge is resists" :		"medigun charge is resists"
		"arrow heals buildings" :		"+arrow heals buildings"
		"Projectile speed increased HIDDEN" :		"+Projectile speed increased HIDDEN"
		"damage bonus HIDDEN" :		"+damage bonus HIDDEN"
		"cannonball push back" :		"Cannonballs push players back on impact"
		"rage giving scale" :		"rage giving scale"
		"overheal fill rate reduced" :		"??? Overheal build rate"
		"canteen specialist" :		"Canteen Specialist"
		"overheal expert" :		"Overheal Expert"
		"mad milk syringes" :		"Mad Milk Syringes"
		"rocket specialist" :		"Rocket Specialist"
		"SET BONUS: move speed set bonus" :		"+???  faster move speed on wearer"
		"SET BONUS: health regen set bonus" :		"+??? health regenerated per second on wearer"
		"SET BONUS: dmg taken from crit reduced set bonus" :		"??? critical hit damage resistance on wearer"
		"SET BONUS: dmg taken from fire reduced set bonus" :		"??? fire damage resistance on wearer"
		"healing mastery" :		"Healing Mastery"
		"kill eater 3" :		"kill eater 3"
		"kill eater score type 3" :		"kill eater score type 3"
		"strange restriction type 3" :		"strange restriction type 3"
		"strange restriction value 3" :		"strange restriction value 3"
		"bot custom jump particle" :		"bot custom jump particle"
		"generate rage on heal" :		"Projectile Shield"
		"custom name attr" :		"custom name attr"
		"custom desc attr" :		"custom desc attr"
		"medigun bullet resist passive" :		"medigun bullet resist passive"
		"medigun blast resist passive" :		"medigun blast resist passive"
		"medigun fire resist passive" :		"medigun fire resist passive"
		"medigun bullet resist deployed" :		"medigun bullet resist deployed"
		"medigun blast resist deployed" :		"medigun blast resist deployed"
		"medigun fire resist deployed" :		"medigun fire resist deployed"
		"medigun crit bullet percent bar deplete" :		"medigun crit bullet percent bar deplete"
		"medigun crit blast percent bar deplete" :		"medigun crit blast percent bar deplete"
		"medigun crit fire percent bar deplete" :		"medigun crit fire percent bar deplete"
		"throwable fire speed" :		"throwable fire speed"
		"throwable damage" :		"throwable damages"
		"throwable healing" :		"throwable healing"
		"throwable particle trail only" :		"throwable particle trail only"
		"SET BONUS: dmg taken from bullets increased" :		"??? bullet damage vulnerability on wearer"
		"SET BONUS: max health additive bonus" :		"??? max health on wearer"
		"scattergun knockback mult" :		"scattergun knockback mult"
		"particle effect vertical offset" :		"Particle effect vertical offset"
		"particle effect use head origin" :		"Particle effect use head origin"
		"use large smoke explosion" :		"Use Large Smoke Explosion"
		"damage causes airblast" :		"Damage causes Airblast"
		"increased jump height from weapon" :		"??? greater jump height when active"
		"damage force increase" :		"??? increase in push force taken from damage"
		"healing received bonus" :		"+??? bonus healing from all sources"
		"afterburn immunity" :		"Immune to the effects of afterburn"
		"decoded by itemdefindex" :		"decoded by itemdefindex"
		"hype decays over time" :		"Hype Decays Over Time"
		"SET BONUS: custom taunt particle attr" :		"Extra effects when taunting"
		"airblast vulnerability multiplier hidden" :		"??? reduction in airblast vulnerability"
		"damage force increase hidden" :		"??? increase in push force taken from damage HIDDEN"
		"damage force increase text" :		"Increase in push force taken from damage and airblast"
		"SET BONUS: calling card on kill" :		"Leave a Calling Card on your victims"
		"righthand pose parameter" :		"Righthand pose parameter"
		"set throwable type" :		"Set Throwable Type"
		"add head on hit" :		"Add Head on Hit"
		"item style override" :		"item style override"
		"paint decal enum" :		"paint decal enum"
		"show paint description" :		"show paint description"
		"bot medic uber health threshold" :		"bot medic uber health threshold"
		"bot medic uber deploy delay duration" :		"bot medic uber deploy delay duration"
		"single wep deploy time decreased" :		"This weapon deploys ??? faster"
		"halloween reload time decreased" :		"halloween reload time decreased"
		"halloween fire rate bonus" :		"halloween fire rate bonus"
		"halloween increased jump height" :		"halloween increased jump height"
		"special taunt" :		"Special Taunt"
		"revive" :		"Revive Teammates"
		"taunt attack name" :		"taunt attack name"
		"taunt attack time" :		"taunt attack time"
		"taunt force move forward" :		"taunt force move forward"
		"taunt mimic" :		"taunt mimic"
		"taunt success sound" :		"taunt success sound"
		"taunt success sound offset" :		"taunt success sound offset"
		"taunt success sound loop" :		"taunt success sound loop"
		"taunt success sound loop offset" :		"taunt success sound loop offset"
		"increased air control" :		"??? increased air control"
		"rocket launch impulse" :		"rocket launch impulse"
		"minicritboost on kill" :		"On Kill: Gain Mini-crits for %s1 seconds"
		"no metal from dispensers while active" :		"No metal from dispensers when active"
		"projectile entity name" :		"projectile entity name"
		"is throwable primable" :		"is throwable primable"
		"throwable detonation time" :		"throwable detonation time"
		"throwable recharge time" :		"throwable recharge time"
		"closerange backattack minicrits" :		"Mini-crits targets when fired at their back from close range"
		"torso scale" :		"Torso Scale"
		"rocketjump attackrate bonus" :		"Increased attack speed and smaller blast radius while blast jumping"
		"is throwable chargeable" :		"is throwable chargeable"
		"back headshot" :		"Back Headshot"
		"rj air bombardment" :		"Fires 3 barrages while explosive jumping"
		"projectile particle name" :		"Projectile Particle name"
		"air jump on attack" :		"Air jump on attack"
		"sniper crit no scope" :		"Charge and fire shots independent of zoom"
		"sniper independent zoom DISPLAY ONLY" :		"Zoom does not affect charge"
		"axtinguisher properties" :		"100% critical hits burning players from behind\nMini-crits burning players from the front"
		"full charge turn control" :		"Full turning control while charging"
		"parachute attribute" :		"parachute attribute"
		"taunt force weapon slot" :		"taunt force weapon slot"
		"mini rockets" :		"Mini Rocket"
		"rocket jump damage reduction HIDDEN" :		"??? blast damage from rocket jumps HIDDEN"
		"clipsize increase on kill" :		"Clip size increased on kill"
		"breadgloves properties" :		"breadgloves properties"
		"taunt turn speed" :		"taunt turn speed"
		"sniper fires tracer HIDDEN" :		"Fires tracer rounds HIDDEN"
		"fire rate bonus with reduced health" :		"Fire rate increases as health decreases"
		"tag__summer2014" :		"Rewarded for participating in the 2014 Summer Adventure"
		"crate generation code" :		"crate generation code"
		"stickybomb fizzle time" :		"Stickybombs fizzle ??? seconds after landing"
		"stickybomb charge rate" :		"Max charge time decreased by ???"
		"grenade no bounce" :		"Grenades have very little bounce and roll"
		"class select override vcd" :		"class select override vcd"
		"custom projectile model" :		"Custom projectile model"
		"lose demo charge on damage when charging" :		"Taking damage while shield charging reduces remaining charging time"
		"grenade no spin" :		"grenade no spin"
		"grenade detonation damage penalty" :		"??? damage on grenades that explode on timer"
		"taunt turn acceleration time" :		"taunt turn acceleration time"
		"taunt move acceleration time" :		"taunt move acceleration time"
		"taunt move speed" :		"taunt move speed"
		"shuffle crate item def min" :		"shuffle crate item def min"
		"shuffle crate item def max" :		"shuffle crate item def max"
		"limited quantity item" :		"limited quantity item"
		"SET BONUS: alien isolation xeno bonus pos" :		"Increased Melee damage against Isolated Merc Set"
		"SET BONUS: alien isolation xeno bonus neg" :		"Increased Nostromo Napalmer damage taken from Isolated Merc Set"
		"SET BONUS: alien isolation merc bonus pos" :		"Increased Nostromo Napalmer damage against Isolationist Pack Set"
		"SET BONUS: alien isolation merc bonus neg" :		"Increased Melee damage taken from Isolationist Pack Set"
		"disable weapon switch" :		"Disable Weapon Switch"
		"hand scale" :		"Hand Scale"
		"display duck leaderboard" :		"display duck leaderboard"
		"duck rating" :		"Duck XP Level : ???"
		"duck badge level" :		"Duck Power : ??? / 5"
		"tag__eotlearlysupport" :		"Early Supporter of End of the Line Community Update"
		"unlimited quantity hidden" :		"Unlimited quantity hidden"
		"duckstreaks active" :		"Duckstreaks Active"
		"panic_attack" :		"Hold fire to load up to 4 shells"
		"panic_attack_negative" :		"Weapon spread increases as health decreases"
		"auto fires full clip penalty" :		"auto fires full clip penalty"
		"auto fires when full" :		"auto fires when full"
		"force weapon switch" :		"force weapon switch"
		"weapon_uses_stattrak_module" :		"weapon uses stattrak module"
		"is_operation_pass" :		"is operation pass"
		"weapon_stattrak_module_scale" :		"weapon stattrak module scale"
		"set_item_texture_wear" :		"set item texture wear"
		"cloak_consume_on_feign_death_activate" :		"??? cloak meter when Feign Death is activated"
		"stickybomb_charge_damage_increase" :		"Up to +??? damage based on charge"
		"NoCloakWhenCloaked" :		"No cloak meter from ammo boxes when invisible"
		"ReducedCloakFromAmmo" :		"??? cloak meter from ammo boxes"
		"elevate to unusual if applicable" :		"elevate to unusual if applicable"
		"weapon_allow_inspect" :		"weapon allow inspect"
		"metal_pickup_decreased" :		"??? less metal from pickups and dispensers"
		"lose hype on take damage" :		"Boost reduced when hit"
		"healing received penalty" :		"??? less healing from all sources"
		"crit_vs_burning_FLARES_DISPLAY_ONLY" :		"100% critical hit vs burning players"
		"speed_boost_on_kill" :		"Gain a speed boost on kill"
		"speed_boost_on_hit" :		"On Hit: Gain a speed boost"
		"spunup_damage_resistance" :		"%s1% damage resistance when below 50% health and spun up"
		"ubercharge overheal rate penalty" :		"%s1% ÜberCharge rate on Overhealed patients"
		"reduced_healing_from_medics" :		"??? less healing from Medic sources"
		"health on radius damage" :		"On Hit: Gain up to +??? health per attack"
		"style changes on strange level" :		"style changes on strange level"
		"cannot restore" :		"cannot restore"
		"hide crate series number" :		"hide crate series number"
		"has team color paintkit" :		"Team Colored Decorated Weapon"
		"cosmetic_allow_inspect" :		"cosmetic allow inspect"
		"hat only unusual effect" :		"hat only unusual effect"
		"items traded in for" :		"Items Traded in : ???"
		"texture_wear_default" :		"texture wear default"
		"taunt only unusual effect" :		"taunt only unusual effect"
		"deactive date" :		"deactive date"
		"is giger counter" :		"is giger counter"
		"hide_strange_prefix" :		"hide strange prefix"
		"always_transmit_so" :		"always transmit so"
		"allow_halloween_offering" :		"allow halloween offering"
		"cannot_transmute" :		"cannot transmute"
		"single wep holster time increased" :		"This weapon holsters ??? slower"
		"single wep deploy time increased" :		"This weapon deploys ??? slower"
		"charge time decreased" :		"??? sec decrease in charge duration"
		"dmg penalty vs buildings" :		"??? damage penalty vs buildings"
		"charge impact damage decreased" :		"??? decrease in charge impact damage"
		"non economy" :		"Not Tradable, Marketable, Usable in Crafting, or Gift Wrappable"
		"charge meter on hit" :		"Melee hits refill %s1% of your charge meter"
		"minicrit_boost_when_charged" :		"Secondary fire when charged grants mini-crits for %s1 seconds"
		"minicrit_boost_charge_rate" :		"Dealing damage fills charge meter"
		"is_a_sword" :		"This Weapon has a large melee range and\ndeploys and holsters slower"
		"ammo gives charge" :		"Ammo boxes collected also refill your charge meter"
		"extinguish restores health" :		"Extinguishing teammates restores ??? health"
		"extinguish reduces cooldown" :		"Extinguishing teammates reduces cooldown by ???"
		"cannot giftwrap" :		"cannot giftwrap"
		"tool needs giftwrap" :		"tool needs giftwrap"
		"fuse bonus" :		"+??? fuse time on grenades"
		"move speed bonus shield required" :		"+??? faster move speed on wearer (shield required)"
		"damage bonus vs sentry target" :		"??? increased damage to your sentry's target"
		"mod teleporter cost" :		"??? metal cost when constructing or upgrading teleporters"
		"damage blast push" :		"damage blast push"
		"move speed bonus resource level" :		"move speed bonus resource level"
		"hype on damage" :		"On Hit: Builds Hype"
		"dmg taken from fire reduced on active" :		"+??? fire damage resistance while deployed"
		"damage bonus vs burning" :		"??? damage bonus vs burning players"
		"min_viewmodel_offset" :		"min viewmodel offset"
		"dmg pierces resists absorbs" :		"Attacks pierce damage resistance effects and bonuses"
		"energy buff dmg taken multiplier" :		"energy buff dmg taken multiplier"
		"lose revenge crits on death DISPLAY ONLY" :		"Revenge crits are lost on death"
		"patient overheal penalty" :		"-??? maximum overheal on wearer"
		"item_meter_charge_rate" :		"item_meter_charge_rate"
		"mult_spread_scale_first_shot" :		"mult_spread_scale_first_shot"
		"unusualifier_attribute_template_name" :		"unusualifier attribute template name"
		"tool_target_item_icon_offset" :		"tool target item icon offset"
		"add_head_on_kill" :		"Collect the organs of your victims"
		"mult_spread_scales_consecutive" :		"Successive shots become less accurate"
		"fixed_shot_pattern" :		"Fires a wide, fixed shot pattern"
		"mod_cloak_no_regen_from_items" :		"mod cloak no regen from items"
		"ubercharge_preserved_on_spawn_max" :		"Collect the organs of people you hit"
		"mod_air_control_blast_jump" :		"??? increased air control when blast jumping"
		"spunup_push_force_immunity" :		"Immune to push force from damage and airblast when spun up"
		"mod_mark_attacker_for_death" :		"mod mark attacker for death"
		"use_model_cache_icon" :		"use model cache icon"
		"mod_disguise_consumes_cloak" :		"Normal disguises require (and consume) a full cloak meter"
		"inspect_viewmodel_offset" :		"inspect_viewmodel_offset"
		"is_passive_weapon" :		"is passive weapon"
		"no_jump" :		"No Jump"
		"no_duck" :		"No Duck"
		"no_attack" :		"No Attack"
		"airblast_destroy_projectile" :		"airblast destroy projectile"
		"airblast_pushback_disabled" :		"airblast pushback disabled"
		"airblast_pushback_no_stun" :		"airblast_pushback no stun"
		"airblast_pushback_no_viewpunch" :		"airblast pushback no viewpunch"
		"airblast_deflect_projectiles_disabled" :		"airblast deflect rojectiles disabled"
		"airblast_put_out_teammate_disabled" :		"airblast put out teammate disabled"
		"afterburn duration penalty" :		"afterburn duration penalty"
		"afterburn duration bonus" :		"afterburn duration bonus"
		"aoe_deflection" :		"aoe deflection"
		"mult_end_flame_size" :		"mult end flame size"
		"airblast_give_teammate_speed_boost" :		"airblast give teammate speed_boost"
		"airblast_turn_projectile_to_ammo" :		"airblast turn projectile to ammo"
		"paintkit_proto_def_index" :		"paintkit proto def index"
		"taunt_attr_player_invis_percent" :		"taunt_attr_player_invis_percent"
		"redirected_flame_size_mult" :		"redirected_flame_size_mult"
		"flame_reflect_on_collision" :		"flame_reflect_on_collision"
		"flame_spread_degree" :		"flame_spread_degree"
		"holster_anim_time" :		"holster_anim_time"
		"flame_gravity" :		"flame_gravity"
		"flame_ignore_player_velocity" :		"flame_ignore_player_velocity"
		"flame_drag" :		"flame_drag"
		"flame_speed" :		"flame_speed"
		"grenades1resupply_denied" :		"grenades1_resupply_denied"
		"grenades2_resupply_denied" :		"grenades2_resupply_denied"
		"grenades3_resupply_denied" :		"grenades3_resupply_denied"
		"item_meter_resupply_denied" :		"Spawning and resupply do not affect the Gas meter"
		"mult_player_movespeed_active" :		"+??? faster move speed on wearer"
		"mult_dmgtaken_active" :		"??? damage vulnerability on wearer"
		"mult_patient_overheal_penalty_active" :		"-??? maximum overheal on wearer"
		"mult_health_fromhealers_penalty_active" :		"-??? health from healers on wearer"
		"mod_maxhealth_drain_rate" :		"Maximum health is drained while item is active"
		"item_meter_charge_type" :		"item_meter_charge_type"
		"max_flame_reflection_count" :		"max_flame_reflection_count"
		"flame_reflection_add_life_time" :		"flame_reflection_add_life_time"
		"reflected_flame_dmg_reduction" :		"reflected_flame_dmg_reduction"
		"flame_lifetime" :		"flame_lifetime"
		"flame_random_life_time_offset" :		"flame_random_life_time_offset"
		"flame_up_speed" :		"flame_up_speed"
		"custom_paintkit_seed_lo" :		"custom_paintkit_seed_lo"
		"custom_paintkit_seed_hi" :		"custom_paintkit_seed_hi"
		"crit_dmg_falloff" :		"Critical damage is affected by range"
		"crits_become_minicrits" :		"Crits whenever it would normally minicrits"
		"falling_impact_radius_pushback" :		"Push enemies back when you land (force and radius based on velocity)"
		"falling_impact_radius_stun" :		"Stun enemies when you land"
		"thermal_thruster_air_launch" :		"Able to re-launch while already in-flight"
		"thermal_thruster" :		"thermal_thruster"
		"mult_item_meter_charge_rate" :		"??? faster recharge rate"
		"explode_on_ignite" :		"Explode On Ignite"
		"lunchbox healing decreased" :		"-??? healing effect"
		"speed_boost_on_hit_enemy" :		"Gain a speed boost when you hit an enemy player"
		"item_meter_starts_empty_DISPLAY_ONLY" :		"Gas meter starts empty"
		"item_meter_charge_type_3_DISPLAY_ONLY" :		"Gas meter builds with damage done and/or time"
		"repair health to metal ratio DISPLAY ONLY" :		"???-to-1 health-to-metal ratio when repairing buildings"

		"CARD: damage bonus" :		"??? damage bonus"
		"CARD: dmg taken from bullets reduced" :		"??? bullet damage resistance on wearer"
		"CARD: move speed bonus" :		"??? faster move speed on wearer"
		"CARD: health regen" :		"??? health regenerated per second on wearer"
		"SPELL: set item tint RGB" :		"???"
		"SPELL: set Halloween footstep type" :		"???"
		"SPELL: Halloween voice modulation" :		"Voices From Below"
		"SPELL: Halloween pumpkin explosions" :		"Pumpkin Bombs"
		"SPELL: Halloween green flames" :		"Halloween Fire"
		"SPELL: Halloween death ghosts" :		"Exorcism"
		"Attack not cancel charge" :		"Attack not cancel charge"
		"start drop date" :		"start drop date"
		"end drop date" :		"nd drop date"
		"tool target item" :		"tool target item"
		"killstreak effect" :		"Killstreaker: ???"
		"killstreak idleeffect" :		"Sheen: ???"
		"spellbook page attr id" :		"spellbook page attr id"
		"Halloween Spellbook Page: Tumidum" :		"Pages of Tumidum: ???"
		"Halloween Spellbook Page: Gratanter" :		"Pages of Gratanter: ???"
		"Halloween Spellbook Page: Audere" :		"Pages of Audere: ???"
		"Halloween Spellbook Page: Congeriae" :		"Pages of Congeriae: ???"
		"Halloween Spellbook Page: Veteris" :		"Pages of Veteris: ???"
		"additional halloween response criteria name" :		"additional halloween response criteria name"
		"loot rarity" :		"loot rarity"
		"quality text override" :		"quality text override"
		"item name text override" :		"item name text override"
		"killstreak tier" :		"Killstreaks Active"
		"wide item level" :		"wide item level"
		"is australium item" :		"is australium item"
		"is marketable" :		"is marketable"
		"allowed in medieval mode" :		"allowed in medieval mode"
		"crit on hard hit" :		"crit on hard hit"
		"kill refills meter" :		"Melee kills refill ??? of your charge meter"
		"taunt attach particle index" :		"★ Unusual Effect: ???"
		"upgrade rate decrease" :		"??? slower upgrade rate"
		"voice pitch scale" :		"??? voice pitch scale"
		"gunslinger punch combo" :		"+??? gunslinger damage bonus"
		"quest earned standard points" :		"quest earned standard points"
		"quest earned bonus points" :		"quest earned bonus points"
		"item drop wave" :		"item drop wave"
	]

]

@BaseClass = PBaseVelocity
[ 
	basevelocity(angle) : "Entity Base's Velocity" : "0 0 0" : "This Entity will get push to the direction when spawned."
]

@BaseClass = PAVEVelocity
[ 
	avelocity(angle) : "Entity Base's Angle" : "0 0 0" : ""
]

@BaseClass = PWaterLevel
[ 
	waterlevel(choices) : "Water Level" : 0 =
	[
		0 : "Not in Water"
		1 : "Feet"
		2 : "Waist"
		3 : "Eyes"
	]
]

@BaseClass base(Targetname) = EnvGlobal : 
	"An entity to control a global game state, with an optional associated counter, that persists across level transitions."
[
	initialstate(choices) : "Initial State" : 0 =
	[
		0 : "Off"
		1 : "On"
		2 : "Dead"
	]

	counter(integer) : "Counter" : 0 : "An integer counter value associated with this global."

	spawnflags(flags) =
	[
		1 : "Set Initial State" : 0
	]

	// Inputs
	input TurnOn(void) : "Set state of global to ON."
	input TurnOff(void) : "Set state of global to OFF."
	input Toggle(void) : "Toggles state of global between ON and OFF."
	input Remove(void) : "Set state of global to DEAD."
	input SetCounter(integer) : "Sets the counter value of this global."
	input AddToCounter(integer) : "Adds to the counter value of this global. Negative numbers subtract."
	input GetCounter(void) : "Causes the Counter output to be fired, passing the current counter value for this global."

	// Outputs
	output Counter(integer) : "Fired in response to the GetCounter input, passing the current value of the counter."
]

@BaseClass = DamageTypeP
[
	damagetype(choices) : "Damage Type" : 0 : "Damage types can be combined to have more than one effect. Simply add the numeric values for the desired types together and use the resulting number. (16 [train] + 64 [blast] = 80: gibbing train death)" =
	[
		0 : "GENERIC"
		1 : "Crush"
		2 : "Bullet"
		4 : "Slash"
		8 : "Burn"
		16 : "Train"
		32 : "Fall"
		64 : "Blast (turn gibs)"
		128 : "Club"
		256 : "Shock"
		512 : "Sonic"
		1024 : "Energy Beam"
		2048 : "Physics Force"
		4096 : "Never Gib"
		8192 : "Always Gib"
		16384: "Drown (blue faded)"
		32768: "Paralyze"
		65536 : "Sawblade"
		131072 : "Poison"
		262144 : "Radiation"
		524288 : "Drowning recovery"
		1048576 : "Critical"
		2097152 : "Slow burning"
		4194304 : "Slowfreeze"
		8388608 : "Gravity Gun"
		16777216 : "Ignite (no after-burn damage)"
		33554432 : "Airboat"
		67108864 : "Dissolve"
		134217728 : "Underwater is Invincible"
		268435456 : "Being on fire"
		536870912 : "Shotguns"
	]
]

@BaseClass color(0 0 200) base(Targetname, Angles, PTeamNum, EnableDisable, Toggle, Angles, PlayerTouch, FadeDistance) = PItem
[
	powerup_model(studio) : "Model" : "" : "Change the model to something other than the default model." 
	AutoMaterialize(choices) : "Auto-Materialize" : 1 : "The pickup should automatically materialize after being picked up." =
	[
		0 : "No"
		1 : "Yes"
	]

	disableshadows(choices) : "Disable Shadows" : 0 : "Used to disable dynamic shadows on this entity." =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) = 
	[
		1 : "Physics Start Constrained" : 0
		1073741824: "Never Respawn" : 0
	]
]

@BaseClass = PBaseObject
[
	TeamNum(choices) : "Team" : 2 : "Team" =
	[
		2 : "RED"
		3 : "BLU"
	]
	
	// invuln
	spawnflags(flags) =
	[
		2: "Invulnerable" : 0
	]

	// Inputs
	input SetBuilder(string) : "Sets the builder of this object to the player given (from an output)"
	input SetSolidToPlayer(string) : "Sets the builder solid to the player given (from an output)"
	input Show(void) : "Makes the building visible and tries to re-enable it."
	input Hide(void) : "Makes the building invisible and disables it."
	input SetHealth(integer) : "Sets a new value for the breakable's health. If the breakable's health reaches zero it will break."
	input AddHealth(integer) : "Adds health to the breakable. If the breakable's health reaches zero it will break."
	input RemoveHealth(integer) : "Removes health from the breakable. If the breakable's health reaches zero it will break."
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."

	// Outputs
	output OnDamaged(void) : "Fired when the building is damaged."
	output OnRepaired(void) : "Fired when the building is repaired."
	output OnDisabled(void) : "Fired when the building is disabled."
	output OnReenabled(void) : "Fired when the building is reenabled."
	output OnObjectHealthChanged(void) : "Fired when the building's health is changed.."
]

@PointClass base(Targetname,Parentname,PBaseObject,Angles) studio("models/buildables/dispenser_light.mdl") = obj_dispenser : 
	"TF2 Dispenser" 
[
	defaultupgrade(choices) : "Starting Upgrade Level" : 0 =
	[
		0 : "Level 1"
		1 : "Level 2"
		2 : "Level 3"	
	]

	spawnflags(flags) = 
	[
		4: "Upgradable" : 0
	]

	// Outputs
	output OnDestroyed(void) : "Fired when this entity is destroyed."
]

@PointClass base(Targetname,Parentname,PBaseObject,Angles) studio("models/buildables/sentry3.mdl") = obj_sentrygun : 
	"TF2 Sentrygun" 
[
	defaultupgrade(choices) : "Starting Upgrade Level" : 0 =
	[
		0 : "Level 1"
		1 : "Level 2"
		2 : "Level 3"	
	]
	
	spawnflags(flags) = 
	[
		4: "Upgradable" : 0
		8: "Infinite Ammo" : 0
	]

	// Outputs
	output OnDestroyed(void) : "Fired when this entity is destroyed."
]

@PointClass base(Targetname,Parentname,PBaseObject,Angles) studio("models/buildables/teleporter_light.mdl") = obj_teleporter : 
	"TF2 Teleporter" 
[
	defaultupgrade(choices) : "Starting Upgrade Level" : 0 =
	[
		0 : "Level 1"
		1 : "Level 2"
		2 : "Level 3"	
	]

	spawnflags(flags) = 
	[
		4: "Upgradable" : 0
	]

	teleporterType(choices) : "Type" : 1 =
	[
		1 : "Entrance"
		2 : "Exit"
	]

	matchingTeleporter(target_destination) : "Matching Teleporter" : : "The teleporter linked to this one."

	// Outputs
	output OnDestroyed(void) : "Fired when this entity is destroyed."
]

@SolidClass base(Trigger, Targetname, DamageTypeP) = trigger_hurt :
	"A trigger volume that damages entities that touch it."
[
	master(string) : "Master (Obsolete)" : : "Legacy support: The name of a master entity. If the master hasn't been activated, this entity will not activate."
	damage(integer) : "Damage" : 10 : "The amount of damage done to entities that touch this trigger. The damage is done every half-second. See also 'Damage Model' for extra details on how damage can be dealt."
	damagecap(integer) : "Damage Cap" : 20 : "Maximum damage dealt per second. This field is only used if you select the Doubling w/Forgiveness damage model, via the spawnflag."
	damagemodel(choices) : "Damage Model" : 0 : "How damage is dealt. Normal always does the specified amount of damage each half second. Doubling starts with the specified amount and doubles it each time it hurts the toucher. Forgiveness means that if the toucher gets out of the trigger the damage will reset to the specified value. Good for making triggers that are deadly over time without having to cause massive damage on each touch." =
	[
		0 : "Normal"
		1 : "Doubling w/forgiveness"
	]
	
	nodmgforce(choices) : "Zero Damage Force" : 0 : "Should the damaged entity receive no physics force from this trigger." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// Inputs
	input SetDamage(float) : "Set a new amount of damage for this trigger."
	
	// Outputs
	output OnHurt(void) : "Fired whenever this trigger hurts something other than a player."
	output OnHurtPlayer(void) : "Fired whenever this trigger hurts a player."
]

@SolidClass base(Trigger, Targetname) = trigger_stun :
	"A trigger volume that stuns entities that touch it."
[
	trigger_delay(float) : "Trigger Delay" : 0 : "Delay after an entity touches that we fire our first stun."
	
	stun_duration(float) : "Duration" : 0 : "Length of the stun effect."
	
	move_speed_reduction(float) : "Move Speed Reduction" : 0 : "0 to 1 - Amount to reduce the player's move speed. 1 is 100% immobile."
	stun_type(choices) : "Stun type" : 0 =
	[
		0 : "None"
		1 : "Sandman stun"
		2 : "Ghost Fear"
	]
	stun_effects(choices) : "Scared effects" : 0 : "Enables the 'scared' particle effects. Does not work if stun type is none. Scream sound only plays if stun type is Fear."=
	[
		0 : "No"
		1 : "Yes"
	]

	// Outputs
	output OnStunPlayer(void) : "Fired whenever this trigger stuns a player."
]
@SolidClass base(Targetname, Parentname, Global, EnableDisable) = trigger_brush
[
	spawnflags(flags) =
	[
		2: "Ignore player +USE" : 1
	]
	InputFilter(choices) : "Input Filter" : 0 : "Used to specify which inputs this entity will accept." =
	[
		0 : "Allow Everything"
		22 : "Touch/Untouch: Players"
		20 : "Touch/Untouch: Players & NPCs"
		16 : "Touch/Untouch: Players, NPCs, Pushables"
		18 : "Touch/Untouch: Players & Pushables"
		21 : "Touch/Untouch: NPCs"
		17 : "Touch/Untouch: NPCs & Pushables"
		19 : "Touch/Untouch: Pushables"
		6 : "Touch/Untouch & Use: Players"
		2 : "Touch/Untouch & Use: Players & Pushables"
		4 : "Touch/Untouch & Use: Players & NPCs: "
		5 : "Touch/Untouch & Use: NPCs"
		1 : "Touch/Untouch & Use: NPCs & Pushables"
		3 : "Touch/Untouch & Use: Pushables"
		14 : "Use: Players"
		12 : "Use: Players & NPCs"
		8 : "Use: Players, NPCs, & Pushables"
		10 : "Use: Players & Pushables"
		13 : "Use: NPCs"
		9 : "Use: NPCs & Pushables"
		11 : "Use: Pushables"
	]
	input Use(void) : "Use"
	output OnUse(void) : "On use"
	output OnStartTouch(void) :	"Fired when an entity starts touching this trigger. " +
					"The touching entity must pass this trigger's filters " +
					"to cause this output to fire."
	output OnEndTouch(void) :	"Fired when an entity stops touching this trigger. " +
					"The touching entity must pass this trigger's filters " +
					"to cause this output to fire."
	output OnEndTouchAll(void) :	"Fires when an entity stops touching this trigger, " +
					"and no other entities are touching it. Only entities " +
					"that passed this trigger's filters are considered."
]

@SolidClass base(Targetname, Parentname, Origin, Angles, RenderFields, BasePlat, Shadow) = func_plat : 
	"Moving Platform." 
[
	spawnflags(Flags) =
	[
		1: "Toggle" : 1
	]
	noise1(sound) : "Movement Sound" : : "The sound to play when the brush moves."
	noise2(sound) : "Stop Sound" : : "The sound to play when the brush stops moving."
	speed(integer) : "Speed of Rotation" : 50 : "Speed at which the brush rotates, in degrees per second."
	height(integer) : "Travel Altitude" : 0 : "The vertical distance from the starting position that this platform moves. If negative, the platform will lower."
	rotation(integer) : "Spin amount" : 0 : "The amount this platform should rotate as it moves, in degrees."
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
]


@SolidClass base(Targetname) = func_nav_blocker : "A brush entity that can block nav areas touching its AABB." 
[
	input BlockNav(string) : "Starts blocking nav areas."
	input UnblockNav(void) : "Stops blocking nav areas."

	teamToBlock(choices) : "Team(s) to block" : -1 : "Block the nav for bots on this team" =
	[
		-1 : "Everyone"
		2 : "RED BOTS"
		3 : "BLUE BOTS"
		5 : "Halloween Bosses"
	]
	
	affectsFlow(choices) : "Affects Flow?" : 0 : "Does this func_nav_blocker block flow in the level? Only func_nav_blockers with this enabled will cause flow recomputation on blocking/unblocking." =
	[
		0 : "No"
		1 : "Yes"
	]

	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input BlockNav(void) : "Enable"
	input UnblockNav(void) : "Disable"
]

@SolidClass base(Targetname) = func_nav_avoid : "Influence bots to avoid this region by increasing the pathfinding cost within it."
[
	tags(string) : "Tags" : "" : "A space delimited list of tags. A tag is a label with no spaces. If a TFBot has at least one matching tag, it will pay attention to this entity. Tags that are automatically set on TFBots include bomb_carrier, common, mission_sniper, mission_spy, mission_sentry_buster, or any class name." 

	team(choices) : "Team" : -2 : "Which team will avoid this region" =
	[
		-2 : "Everyone"
		2 : "RED BOTS"
		3 : "BLUE BOTS"
		5 : "Halloween Bosses"
	]

	start_disabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Enable(void) : "Enable"
	input Toggle(void) : "Toggle between enabled and disabled."
	input Disable(void) : "Disable"
]

@SolidClass base(Targetname) = func_nav_avoidance_obstacle : "Influence bots to avoid this region by increasing the pathfinding cost within it."
[
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
]

@SolidClass base(Targetname) = func_nav_prefer : "Influence bots to prefer this region by decreasing the pathfinding cost within it."
[
	tags(string) : "Tags" : "" : "A space delimited list of tags. A tag is a label with no spaces. If a TFBot has at least one matching tag, it will pay attention to this entity. Tags that are automatically set on TFBots include bomb_carrier, common, mission_sniper, mission_spy, mission_sentry_buster, or any class name." 

	team(choices) : "Team" : -2 : "Which team will prefer this region" =
	[
		-2 : "Everyone"
		2 : "RED BOTS"
		3 : "BLUE BOTS"
		5 : "Halloween Bosses"
	]

	start_disabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Enable(void) : "Enable"
	input Toggle(void) : "Toggle between enabled and disabled."
	input Disable(void) : "Disable"
]

@SolidClass base(Trigger, Targetname) = func_nav_prerequisite : "A trigger volume that requires bots to do perform a task before they can move through it."
[
	Task(choices) : "Task" : 1 : "What must be done to move through this volume" =
	[
		1 : "Destroy Entity (Value = max range to attack from. -1 for no range restriction)"
		2 : "Move to Entity"
		3 : "Wait (Value = seconds to wait)"
	]

	Entity(target_destination) : "Task Entity" : : "The subject entity of the Task"

	Value(float) : "Task Value" : 0 : "A Task-specific value"

	start_disabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Enable(void) : "Enable"
	input Toggle(void) : "Toggle between enabled and disabled."
	input Disable(void) : "Disable"
]

@SolidClass base(Targetname, Origin, EnableDisable) = func_tfbot_hint : "Define 'hint' regions for TFBot behaviors"
[
	team(choices) : "Team" : -1 : "Which team will use this hint" =
	[
		-2 : "Everyone"
		2 : "RED BOTS"
		3 : "BLUE BOTS"
		5 : "Halloween Bosses"
	]

	hint(choices) : "Hint" : 0 : "What is the hint" =
	[
		0 : "Sniper Spot (aim at hint origin)"
		1 : "Sentry Gun Spot (aim at hint origin)"
	]
]
//-------------------------------------------------------------------------
//
//	Physics entities
//
//-------------------------------------------------------------------------

@SolidClass base(BreakableBrush,Targetname, Origin, RenderFields, Shadow) = func_pushable : 
	"A brush entity that's physically simulated."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
	size(choices) : "Hull Size" : 0 =
	[
		0: "Point size"
		1: "Player size"
		2: "Big Size"
		3: "Player duck"
	]
	spawnflags(flags) =
	[
		128  : "Breakable" : 0
	]

	friction(integer) : "Friction" : 50 : "This determines the amount of resistance the brush will give when the player pushes it. Range is 0 to 400, where 400 is the most resistance."
]

@SolidClass base(BreakableBrush,Targetname, Origin, RenderFields, Shadow) = func_physbox : 
	"A brush entity that's physically simulated."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
	spawnflags(flags) =
	[
		4096  : "Start Asleep" : 0
		8192  : "Ignore +USE for Pickup" : 0
		16384 : "Debris - Don't collide with the player or other debris" : 0
		32768 : "Motion Disabled" : 0
		65536 : "Use Preferred Carry Angles" : 0
		131072: "Enable motion on Physcannon grab" : 0
		262144: "Not affected by rotor wash" : 0
		524288: "Generate output on +USE " : 1
		8388608: "Prevent motion enable on player bump" : 0
	]
	
	Damagetype(choices) : "Impact Damage Type" : 0 =
	[
		0: "Blunt"
		1: "Sharp"
	]
	
	massScale(float) : "Mass Scale" : "0" : "A scale multiplier for the object's mass."
	overridescript(string) : "Override Parameters" : "" : "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is 'key,value,key,value,etc'."
	damagetoenablemotion(integer) : "Health Level to Override Motion" : 0 : "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
	forcetoenablemotion(float) : "Physics Impact Force to Override Motion" : 0 : "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
	health(integer) : "Strength" : 0 : "Number of points of damage to take before breaking.  0 means don't break."
	preferredcarryangles(vector) : "Preferred Player-carry Angles" : "0 0 0" : "If the 'Use Preferred Carry Angles' spawnflag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or +USE."
	notsolid(choices) : "Not solid to world" : 0 =
	[
		0: "Solid to World"
		1: "Passes through World"
	]
	
	// Inputs
	input Wake(void) : "Wake up this physics object, if it is sleeping."
	input Sleep(void) : "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input ForceDrop(void) : "If this object is being carried by a player, with the physgun or +USE, force it to be dropped."
	
	// Outputs
	output OnDamaged(void) : "Fired when this entity is damaged."
	output OnAwakened(void) : "Fired when this entity becomes awake (collision/force is applied)."
	output OnMotionEnabled(void) : "Fired when motion is enabled due to damage/physcannon/force."
	output OnPhysGunPickup(void) : "Fired when a player picks this object up, either with the physgun or +USE."
	output OnPhysGunPunt(void) : "Fired when a player punts this object with the physgun."
	output OnPhysGunOnlyPickup(void) : "Fired when a player picks this object up WITH THE PHYSGUN. +USE pickups do not fire this output."
	output OnPhysGunDrop(void) : "Fired when a player drops this object."
	output OnPlayerUse(void) : "Fired when the player tries to +USE the physbox. This output will fire only if the Generate output on +USE spawnflag is set."
]

@SolidClass base(BreakableBrush,Targetname, Origin, RenderFields, Shadow) = func_physbox_multiplayer : 
	"A brush entity that's physically simulated."
[
	_minlight(string) : "Minimum Light Level" : : "The minimum level of ambient light that hits this brush."
	spawnflags(flags) =
	[
		4096  : "Start Asleep" : 0
		8192  : "Ignore +USE for Pickup" : 0
		16384 : "Debris - Don't collide with the player or other debris" : 0
		32768 : "Motion Disabled" : 0
		65536 : "Use Preferred Carry Angles" : 0
		131072: "Enable motion on Physcannon grab" : 0
		262144: "Not affected by rotor wash" : 0
		524288: "Generate output on +USE " : 1
		8388608: "Prevent motion enable on player bump" : 0
	]
	
	Damagetype(choices) : "Impact Damage Type" : 0 =
	[
		0: "Blunt"
		1: "Sharp"
	]
	
	massScale(float) : "Mass Scale" : "0" : "A scale multiplier for the object's mass."
	overridescript(string) : "Override Parameters" : "" : "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is 'key,value,key,value,etc'."
	damagetoenablemotion(integer) : "Health Level to Override Motion" : 0 : "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
	forcetoenablemotion(float) : "Physics Impact Force to Override Motion" : 0 : "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
	health(integer) : "Strength" : 0 : "Number of points of damage to take before breaking.  0 means don't break."
	preferredcarryangles(vector) : "Preferred Player-carry Angles" : "0 0 0" : "If the 'Use Preferred Carry Angles' spawnflag is set, this angle is the angle which the object should orient to when the player picks it up, with the physgun or +USE."
	notsolid(choices) : "Not solid to world" : 0 =
	[
		0: "Solid to World"
		1: "Passes through World"
	]
	
	// Inputs
	input Wake(void) : "Wake up this physics object, if it is sleeping."
	input Sleep(void) : "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input ForceDrop(void) : "If this object is being carried by a player, with the physgun or +USE, force it to be dropped."
	
	// Outputs
	output OnDamaged(void) : "Fired when this entity is damaged."
	output OnAwakened(void) : "Fired when this entity becomes awake (collision/force is applied)."
	output OnMotionEnabled(void) : "Fired when motion is enabled due to damage/physcannon/force."
	output OnPhysGunPickup(void) : "Fired when a player picks this object up, either with the physgun or +USE."
	output OnPhysGunPunt(void) : "Fired when a player punts this object with the physgun."
	output OnPhysGunOnlyPickup(void) : "Fired when a player picks this object up WITH THE PHYSGUN. +USE pickups do not fire this output."
	output OnPhysGunDrop(void) : "Fired when a player drops this object."
	output OnPlayerUse(void) : "Fired when the player tries to +USE the physbox. This output will fire only if the Generate output on +USE spawnflag is set."
]


@SolidClass base(Trigger) = trigger_vphysics_motion :
	"A volumetric trigger that affects the motion of vphysics objects that touch it."
[
	spawnflags(Flags) =
	[
		4096 : "Can move (through hierarchical attachment)" : 0
	]

	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	filtername(filterclass) : "Filter Name" : : "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
	
	SetGravityScale(float) : "Scale gravity of objects in the field." : "1.0"
	input SetGravityScale(float) : "Scale gravity of objects in the field."

	SetAdditionalAirDensity(float) : "Additional air density for drag" : "0"
	input SetAdditionalAirDensity(float) : "Additional air density for drag"

	SetVelocityLimit(float) : "Max velocity in field (0 disables)" : "0.0"
	input SetVelocityLimit(float) : "Max velocity in field."

	SetVelocityLimitDelta(float) : "Max amount to reduce velocity per second when it exceeds the velocity limit (0 disables)" : "0.0"
	input SetVelocityLimitDelta(float) : "Max amount to reduce velocity per second"

	input SetVelocityLimitTime(string) : "Accepts two arguments: the first is the new velocity limit, the second is the time it takes to ramp to that value"

	SetVelocityScale(float) : "Velocity scale/drag" : "1.0"
	input SetVelocityScale(float) : "Velocity scale/drag"

	SetAngVelocityLimit(float) : "Max angular velocity in field (degrees/s, 0 disables)" : "0.0"
	input SetAngVelocityLimit(float) : "Max angular velocity in field."

	SetAngVelocityScale(float) : "Angular Velocity scale/drag" : "1.0"
	input SetAngVelocityScale(float) : "Angular Velocity scale/drag"

	SetLinearForce(float) : "Linear force (0 disables)" : "0.0"
	input SetLinearForce(float) : "Linear force (0 disables)"

	SetLinearForceAngles(angle) : "Direction of linear force (Pitch Yaw Roll (Y Z X))" : "0 0 0"
//	input SetLinearForceAngles(angle) : "Direction of linear force (Pitch Yaw Roll (Y Z X))"

	ParticleTrailMaterial(string) : "Particle Trail Material" : : "Name of a material to use for the particle trail, no name means no particle trail"
	ParticleTrailLifetime(float) : "Particle Trail Lifetime" : 4 : "Lifetime of the particles to emit"
	ParticleTrailStartSize(float) : "Particle Trail Starting Sprite Size" : 2 : "Starting size of the sprite to emit"
	ParticleTrailEndSize(float) : "Particle Trail Ending Sprite Size" : 3 : "Ending size of the sprite to emit"

	// Inputs
	input	Enable(void) : "Enable the trigger."
	input	Disable(void): "Disable the trigger."
	input	Toggle(void) : "Toggle enable/disable."
]

//-------------------------------------------------------------------------
//
//	Random
//
//-------------------------------------------------------------------------

@PointClass base(Targetname) sphere(radius) = env_viewpunch : "Screen Punched"
[
	punchangle(angle) : "Punch angles" : "0 0 0" : "The punch angles to apply."
	radius(float) : "Effect Radius" : "50" : "The radius around this entity in which to affect players."
]

@PointClass base(Targetname, Parentname, EnableDisable) = env_sporeexplosion : "Bugbait Spore Effect"
[
	spawnrate(float) : "Spawn Rate (as percentage)" : "25" : "How dense the spore effect is"
]

@PointClass base(Targetname, Parentname, Angles) = env_muzzleflash : "Muzzle Flash" 
[
	parentattachment(string) : "Parent Attachment" : "" : "The name of an attachment on the parent to hierarchically attach to."
	scale(float) : "Scale" : "1" : "Size of the muzzle flash."
	
	input Fire(void) : "Fires the effect once."
]


@PointClass base(Targetname) = env_entity_dissolver: "Entity Dissolver"
[
	input Dissolve(string) : "Dissolve target, if no target is passed it'll use the target specified in the target field."
	target(target_destination) : "Target to Dissolve" : "" : "Targetname of the entity you want to dissolve."

	magnitude(integer) : "Magnitude" : 250 : "How strongly to push away from the center."


	dissolvetype(choices) : "Dissolve Type" : "Energy" =
	[
		0 : "Energy"
		1 : "Heavy electrical"
		2 : "Light electrical"
		3 : "HL2 Core Effect"
	]
]


@PointClass base(Angles) iconsprite("editor-puddy/env_particles")  = env_detail_controller : "An entity that lets you control the fade distances for detail props."
[
	fademindist(float) : "Start Fade Dist/Pixels" : 400 : "Distance at which the prop starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 1200 : "Maximum distance at which the prop is visible."
]

@PointClass base(Targetname, DXLevelChoice, Angles) iconsprite("editor/fog_controller") color(255 255 255) = env_fog_controller : 
	"An entity that controls the fog and view distance in the map."
[
	// Inputs
	input SetStartDist(float) : "Set the fog start distance."
	input SetEndDist(float) : "Set the fog end distance."
	input TurnOn(void) : "Turn the fog on."
	input TurnOff(void) : "Turn the fog off."
	input SetColor(color255) : "Set the primary fog color."
	input SetColorSecondary(color255) : "Set the secondary fog color."
	input SetFarZ(integer): "Set the far clip plane distance."
	input SetAngles(string) : "Set the angles to use for the secondary fog direction."

	input SetColorLerpTo(color255) : "Set the primary fog color."
	input SetColorSecondaryLerpTo(color255) : "Set the secondary fog color."
	input SetStartDistLerpTo(float) : "Set the fog start distance."
	input SetEndDistLerpTo(float) : "Set the fog end distance."
	input StartFogTransition(void) : "Start fog transition."

	// Starting fog parameters for the level. These are selectable per LOD.	
	fogenable(choices) : "Fog Enable" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	fogblend(choices) : "Fog Blend" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	use_angles(choices) : "Use Angles for Fog Dir" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	fogcolor(color255) : "Primary Fog Color" : "255 255 255"
	fogcolor2(color255) : "Secondary Fog Color" : "255 255 255"
	fogdir(string) : "Primary Fog Direction" : "1 0 0"
	fogstart(string) : "Fog Start" : "500.0"
	fogend(string) : "Fog End" : "2000.0"
	fogmaxdensity(float) : "Fog Max Density [0..1]" : "1"

	foglerptime(float) : "Interpolate time" : "0"
	
	farz(string) : "Far Z Clip Plane" : "-1"
	
	spawnflags(flags) =
	[
		1 : "Master (Has priority if multiple env_fog_controllers exist)" : 0
	]
]


@PointClass base(Targetname) iconsprite("editor-puddy/tf_gamerules") = tf_gamerules : "Proxy entity for TF Gamerules"
[	
	gamemode(string) : "Gamemode Type" : "" : "Server Tags."
	hud_type(choices) : "Hud Type" : 0 : "Override the HUD type clients should display." =
	[
		0 : "Default"
		1 : "CTF HUD"
		2 : "CP HUD"
		3 : "PL HUD"
	]
	
	ctf_overtime(choices) : "CTF Overtime" : 1 : "Allow Overtime for CTF maps." =
	[
		0 : "No"
		1 : "Yes"
	]

	input SetRedTeamRespawnWaveTime(float) : "Set the RED team's respawn wave time"
	input SetBlueTeamRespawnWaveTime(float) : "Set the BLU team's respawn wave time"
	input AddRedTeamRespawnWaveTime(float) : "Add to the RED team's respawn wave time"
	input AddBlueTeamRespawnWaveTime(float) : "Add to the BLU team's respawn wave time"
	input SetRedTeamGoalString(string) : "Set the RED team's goal string to show in the hud"
	input SetBlueTeamGoalString(string) : "Set the BLU team's goal string to show in the hud"
	input SetRedTeamRole(integer) : "Set RED team role, 0=none, 1=defenders, 2=attackers"
	input SetBlueTeamRole(integer) : "Set BLU team role, 0=none, 1=defenders, 2=attackers"
	input SetRequiredObserverTarget(string) : "Sets the given entity (by name) to be the required observer target for all spectators. Must be cleared to allow spectators to cycle through targets normally again."
	input AddRedTeamScore(integer) : "Add to the RED team score (can be a negative number)"
	input AddBlueTeamScore(integer) : "Add to the BLU team score (can be a negative number)"
	input SetStalemateOnTimelimit(bool) : "Determines whether mp_timelimit can end the match in the middle of a round."
	input SetRedKothClockActive(void) : "Set the RED team clock active for KOTH maps."
	input SetBlueKothClockActive(void) : "Set the BLU team clock active for KOTH maps."
	input SetCTFCaptureBonusTime(float) : "Set the length (in seconds) of team crit time for CTF captures. 0 = none"
	input PlayVORed(string) : "Play the given sound entry via the VO channel" 
	input PlayVOBlue(string) : "Play the given sound entry via the VO channel"
	input PlayVO(string) : "Play the given sound entry via the VO channel"
	input HandleMapEvent(string) : "Handles map events. This will be different events for different maps."
	input SetCustomUpgradesFile(string) : "Specifies the path relative to the game directory to the upgrades file to be used."
	input SetRoundRespawnFreezeEnabled(integer) : "Enable/disable the player movement freeze period after a round begins."
	input SetMapForcedTruceDuringBossFight(bool) : "Enable/disable truce between the teams during a fight with Monoculus or Merasmus."
	
	output OnWonByTeam1(void) : "Sent when RED wins the round."
	output OnWonByTeam2(void) : "Sent when BLUE wins the round."
	output Team1PlayersChanged(integer) : "Sent when RED team player count changes, due to a player joining or leaving the team."
	output Team2PlayersChanged(integer) : "Sent when BLUE team player count changes, due to a player joining or leaving the team."
	output OnPowerupImbalanceTeam1(void) : "Sent when BLUE team has a powerup kill advantage over the RED team. Initiate RED team assist measures now."
	output OnPowerupImbalanceTeam2(void) : "Sent when RED team has a powerup kill advantage over the BLUE team. Initiate BLUE team assist measures now."
	output OnPowerupImbalanceMeasuresOver(void) : "Sent when powerup imbalance measures should be stopped"
	output OnStateEnterBetweenRounds(void) : "Fired when entering the between-rounds state (MvM and Competitive)."
	output OnStateEnterPreRound(void) : "Fired when entering the pre-round state (just before round running)."
	output OnStateExitPreRound(void) : "Fired when exiting the pre-round state (just before round running)."
	output OnStateEnterRoundRunning(void) : "Fired when entering the round-running state."
	output OnMatchSummaryStart(void) : "Fired when the match summary begins and players are spawned on stage."
	output OnTruceStart(void) : "Sent when a truce starts."
	output OnTruceEnd(void) : "Sent when a truce ends."
]

//-------------------------------------------------------------------------
//
// Info Entities
//
//-------------------------------------------------------------------------

@PointClass base(Targetname) decal() studio("models/editor/axis_helper_thick.mdl") = infodecal : 
	"An entity that places a decal on the world. If the decal has no target name, it will immediately apply itself when the level is loaded. "+
	"If it has a name specified, it won't apply until it receives the 'Activate' input."
[
	texture(decal) : "Texture"

	LowPriority(choices) : "Low Priority (can be replaced)" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Activate(void) : "Force the decal to apply itself to the world."
]


@PointClass base(PlayerClass, Angles) studio("models/player/heavy.mdl") = info_player_start :
	"This entity indicates the position and facing direction at which the player will spawn. Any number of "+
	"info_player_start entities may be placed in a map for when working in cordoned-off portions of the map. "+
	"When multiple info_player_start entities are present in a map, set the 'Master' spawnflag on one of them "+
	"to indicate which one should be used when running the entire map."
[
	spawnflags(flags) =
	[
		1: "Master (Has priority if multiple info_player_starts exist)" : 0
	]
]


@PointClass base(Targetname, Parentname, PTeamNum, MatchSummary, EnableDisable, Angles) studio("models/editor-puddy/hngineer.mdl") = info_player_teamspawn :
	"This entity marks the spawn point for Team Fortress players."
[
	controlpoint(target_destination) : "Associated Control Point" : : "The team_control_point associated with this spawn. Ownership of control points will control this spawn point's enabled state."
	
	SpawnMode(choices) : "Spawn Mode" : 0 : "How the game decides when a player can spawn here.  Triggered mode will only allow players sent via a trigger_player_respawn_override (in which case this spawn must be named, and match the trigger)." =
	[
		0 : "Normal"
		1 : "Triggered"
	] 
	
	spawnflags(flags) =
	[
		1 :	   "Scout" : 1
		2 :    "Sniper" : 1
		4 :    "Soldier" : 1
		8 :    "Demoman" : 1
		16 :   "Medic" : 1
		32 :   "Heavy" : 1
		64 :   "Pyro" : 1
		128 :  "Spy" : 1
		256 :  "Engineer" : 1
	]

	round_bluespawn(target_destination) : "Blue spawn for round" : : "Blue spawn point when the associated round is being played."
	round_redspawn(target_destination) : "Red spawn for round" : : "Red spawn point when the associated round is being played."

	input RoundSpawn(void) : "Re-find control points"
]

@PointClass base(Targetname, Angles) studio("models/editor-puddy/hngineer.mdl") = info_player_deathmatch : "info_player_deathmatch entities may be placed in a map."
[
]

@PointClass base(Targetname, Angles) size(-1 -1 0, 1 1 1) color(80 150 225) studio("models/editor/overlay_helper.mdl") sphere(fademindist) sphere(fademaxdist) overlay() = info_overlay : 
	"An entity that places an overlay on the world." 
[
	material(material) : "Texture"
	sides(sidelist) : "Brush faces"
	RenderOrder(integer) : "Render Order" : 0 : "Higher values render after lower values. This value can be 0-3."
	StartU(float) : "U Start" : "0.0"
	EndU(float) : "U End" : "1.0"
	StartV(float) : "V Start" : "0.0"
	EndV(float) : "V End" : "1.0"
	BasisOrigin(Vector) readonly : "Overlay Basis Origin(Read-Only)"
	BasisU(Vector) readonly : "Overlay Basis U(Read-Only)"
	BasisV(Vector) readonly : "Overlay Basis V(Read-Only)"
	BasisNormal(Vector) readonly : "Overlay Basis Normal(Read-Only)"
	uv0(vector) readonly : "Overlay Point 1(Read-Only)"
	uv1(vector) readonly : "Overlay Point 2(Read-Only)"
	uv2(vector) readonly : "Overlay Point 3(Read-Only)"
	uv3(vector) readonly : "Overlay Point 4(Read-Only)"
	fademindist(float) : "Start Fade Dist" : -1 : "Distance at which the overlay starts to fade (<0 = use fademaxdist)."
	fademaxdist(float) : "End Fade Dist" : 0 : "Maximum distance at which the overlay is visible (0 = don't fade out)."
]

@PointClass base(Targetname,Origin,Angles) studio("models/player/engineer.mdl") = tf_teleport_location : "Players teleport locations which will be delete on round start"
[
]


@PointClass base(Targetname, Parentname, Angles) studio("models/editor/cone_helper.mdl") line(255 255 255, targetname, cpoint1) line(255 255 255, targetname, cpoint2) line(255 255 255, targetname, cpoint3) line(255 255 255, targetname, cpoint4) line(255 255 255, targetname, cpoint5) line(255 255 255, targetname, cpoint6) line(255 255 255, targetname, cpoint7) line(255 255 255, targetname, cpoint8) line(255 255 255, targetname, cpoint9) line(255 255 255, targetname, cpoint10) line(255 255 255, targetname, cpoint11) line(255 255 255, targetname, cpoint12) line(255 255 255, targetname, cpoint13) line(255 255 255, targetname, cpoint14) line(255 255 255, targetname, cpoint15) line(255 255 255, targetname, cpoint16) line(255 255 255, targetname, cpoint17) line(255 255 255, targetname, cpoint18) line(255 255 255, targetname, cpoint19) line(255 255 255, targetname, cpoint20) line(255 255 255, targetname, cpoint21) line(255 255 255, targetname, cpoint22) line(255 255 255, targetname, cpoint23) line(255 255 255, targetname, cpoint24) line(255 255 255, targetname, cpoint25) line(255 255 255, targetname, cpoint26) line(255 255 255, targetname, cpoint27) line(255 255 255, targetname, cpoint28) line(255 255 255, targetname, cpoint29) line(255 255 255, targetname, cpoint30) line(255 255 255, targetname, cpoint31) line(255 255 255, targetname, cpoint32) line(255 255 255, targetname, cpoint33) line(255 255 255, targetname, cpoint34) line(255 255 255, targetname, cpoint35) line(255 255 255, targetname, cpoint36) line(255 255 255, targetname, cpoint37) line(255 255 255, targetname, cpoint38) line(255 255 255, targetname, cpoint39) line(255 255 255, targetname, cpoint40) line(255 255 255, targetname, cpoint41) line(255 255 255, targetname, cpoint42) line(255 255 255, targetname, cpoint43) line(255 255 255, targetname, cpoint44) line(255 255 255, targetname, cpoint45) line(255 255 255, targetname, cpoint46) line(255 255 255, targetname, cpoint47) line(255 255 255, targetname, cpoint48) line(255 255 255, targetname, cpoint49) line(255 255 255, targetname, cpoint50) line(255 255 255, targetname, cpoint51) line(255 255 255, targetname, cpoint52) line(255 255 255, targetname, cpoint53) line(255 255 255, targetname, cpoint54) line(255 255 255, targetname, cpoint55) line(255 255 255, targetname, cpoint56) line(255 255 255, targetname, cpoint57) line(255 255 255, targetname, cpoint58) line(255 255 255, targetname, cpoint59) line(255 255 255, targetname, cpoint60) line(255 255 255, targetname, cpoint61) line(255 255 255, targetname, cpoint62) line(255 255 255, targetname, cpoint63) = info_particle_system : 
	"An entity that spawns a particle system built using the particle editor."
[
	effect_name(string) : "Particle System Name"
	start_active(choices) : "Start Active?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	flag_as_weather(choices) : "Flag as Weather?" : 0 : "Is this particle system going to be used as a weather effect?" =
	[
		0 : "No"
		1 : "Yes"
	]
	
	cpoint1(target_destination) : "Control Point 1" : : "If set, control point 1 of the effect will be at this entity's location."
	cpoint2(target_destination) : "Control Point 2" : : "If set, control point 2 of the effect will be at this entity's location. If control point 1 is not set, this will be ignored."
	cpoint3(target_destination) : "Control Point 3" : : "If set, control point 3 of the effect will be at this entity's location. If control point 2 is not set, this will be ignored."
	cpoint4(target_destination) : "Control Point 4" : : "If set, control point 4 of the effect will be at this entity's location. If control point 3 is not set, this will be ignored."
	cpoint5(target_destination) : "Control Point 5" : : "If set, control point 5 of the effect will be at this entity's location. If control point 4 is not set, this will be ignored."
	cpoint6(target_destination) : "Control Point 6" : : "If set, control point 6 of the effect will be at this entity's location. If control point 5 is not set, this will be ignored."
	cpoint7(target_destination) : "Control Point 7" : : "If set, control point 7 of the effect will be at this entity's location. If control point 6 is not set, this will be ignored."
	cpoint8(target_destination) : "Control Point 8" : : "If set, control point 8 of the effect will be at this entity's location. If control point 7 is not set, this will be ignored."
	cpoint9(target_destination) : "Control Point 9" : : "If set, control point 9 of the effect will be at this entity's location. If control point 8 is not set, this will be ignored."
	cpoint10(target_destination) : "Control Point 10" : : "If set, control point 10 of the effect will be at this entity's location. If control point 9 is not set, this will be ignored."
	cpoint11(target_destination) : "Control Point 11" : : "If set, control point 11 of the effect will be at this entity's location. If control point 10 is not set, this will be ignored."
	cpoint12(target_destination) : "Control Point 12" : : "If set, control point 12 of the effect will be at this entity's location. If control point 11 is not set, this will be ignored."
	cpoint13(target_destination) : "Control Point 13" : : "If set, control point 13 of the effect will be at this entity's location. If control point 12 is not set, this will be ignored."
	cpoint14(target_destination) : "Control Point 14" : : "If set, control point 14 of the effect will be at this entity's location. If control point 13 is not set, this will be ignored."
	cpoint15(target_destination) : "Control Point 15" : : "If set, control point 15 of the effect will be at this entity's location. If control point 14 is not set, this will be ignored."
	cpoint16(target_destination) : "Control Point 16" : : "If set, control point 16 of the effect will be at this entity's location. If control point 15 is not set, this will be ignored."
	cpoint17(target_destination) : "Control Point 17" : : "If set, control point 17 of the effect will be at this entity's location. If control point 16 is not set, this will be ignored."
	cpoint18(target_destination) : "Control Point 18" : : "If set, control point 18 of the effect will be at this entity's location. If control point 17 is not set, this will be ignored."
	cpoint19(target_destination) : "Control Point 19" : : "If set, control point 19 of the effect will be at this entity's location. If control point 18 is not set, this will be ignored."
	cpoint20(target_destination) : "Control Point 20" : : "If set, control point 20 of the effect will be at this entity's location. If control point 19 is not set, this will be ignored."
	cpoint21(target_destination) : "Control Point 21" : : "If set, control point 21 of the effect will be at this entity's location. If control point 10 is not set, this will be ignored."
	cpoint22(target_destination) : "Control Point 22" : : "If set, control point 22 of the effect will be at this entity's location. If control point 21 is not set, this will be ignored."
	cpoint23(target_destination) : "Control Point 23" : : "If set, control point 23 of the effect will be at this entity's location. If control point 22 is not set, this will be ignored."
	cpoint24(target_destination) : "Control Point 24" : : "If set, control point 24 of the effect will be at this entity's location. If control point 23 is not set, this will be ignored."
	cpoint25(target_destination) : "Control Point 25" : : "If set, control point 25 of the effect will be at this entity's location. If control point 24 is not set, this will be ignored."
	cpoint26(target_destination) : "Control Point 26" : : "If set, control point 26 of the effect will be at this entity's location. If control point 25 is not set, this will be ignored."
	cpoint27(target_destination) : "Control Point 27" : : "If set, control point 27 of the effect will be at this entity's location. If control point 26 is not set, this will be ignored."
	cpoint28(target_destination) : "Control Point 28" : : "If set, control point 28 of the effect will be at this entity's location. If control point 27 is not set, this will be ignored."
	cpoint29(target_destination) : "Control Point 29" : : "If set, control point 29 of the effect will be at this entity's location. If control point 28 is not set, this will be ignored."
	cpoint30(target_destination) : "Control Point 30" : : "If set, control point 30 of the effect will be at this entity's location. If control point 29 is not set, this will be ignored."
	cpoint31(target_destination) : "Control Point 31" : : "If set, control point 31 of the effect will be at this entity's location. If control point 30 is not set, this will be ignored."
	cpoint32(target_destination) : "Control Point 32" : : "If set, control point 32 of the effect will be at this entity's location. If control point 31 is not set, this will be ignored."
	cpoint33(target_destination) : "Control Point 33" : : "If set, control point 33 of the effect will be at this entity's location. If control point 32 is not set, this will be ignored."
	cpoint34(target_destination) : "Control Point 34" : : "If set, control point 34 of the effect will be at this entity's location. If control point 33 is not set, this will be ignored."
	cpoint35(target_destination) : "Control Point 35" : : "If set, control point 35 of the effect will be at this entity's location. If control point 34 is not set, this will be ignored."
	cpoint36(target_destination) : "Control Point 36" : : "If set, control point 36 of the effect will be at this entity's location. If control point 35 is not set, this will be ignored."
	cpoint37(target_destination) : "Control Point 37" : : "If set, control point 37 of the effect will be at this entity's location. If control point 36 is not set, this will be ignored."
	cpoint38(target_destination) : "Control Point 38" : : "If set, control point 38 of the effect will be at this entity's location. If control point 37 is not set, this will be ignored."
	cpoint39(target_destination) : "Control Point 39" : : "If set, control point 39 of the effect will be at this entity's location. If control point 38 is not set, this will be ignored."
	cpoint40(target_destination) : "Control Point 40" : : "If set, control point 40 of the effect will be at this entity's location. If control point 39 is not set, this will be ignored."
	cpoint41(target_destination) : "Control Point 41" : : "If set, control point 41 of the effect will be at this entity's location. If control point 40 is not set, this will be ignored."
	cpoint42(target_destination) : "Control Point 42" : : "If set, control point 42 of the effect will be at this entity's location. If control point 41 is not set, this will be ignored."
	cpoint43(target_destination) : "Control Point 43" : : "If set, control point 43 of the effect will be at this entity's location. If control point 42 is not set, this will be ignored."
	cpoint44(target_destination) : "Control Point 44" : : "If set, control point 44 of the effect will be at this entity's location. If control point 43 is not set, this will be ignored."
	cpoint45(target_destination) : "Control Point 45" : : "If set, control point 45 of the effect will be at this entity's location. If control point 44 is not set, this will be ignored."
	cpoint46(target_destination) : "Control Point 46" : : "If set, control point 46 of the effect will be at this entity's location. If control point 45 is not set, this will be ignored."
	cpoint47(target_destination) : "Control Point 47" : : "If set, control point 47 of the effect will be at this entity's location. If control point 46 is not set, this will be ignored."
	cpoint48(target_destination) : "Control Point 48" : : "If set, control point 48 of the effect will be at this entity's location. If control point 47 is not set, this will be ignored."
	cpoint49(target_destination) : "Control Point 49" : : "If set, control point 49 of the effect will be at this entity's location. If control point 48 is not set, this will be ignored."
	cpoint50(target_destination) : "Control Point 50" : : "If set, control point 50 of the effect will be at this entity's location. If control point 49 is not set, this will be ignored."
	cpoint51(target_destination) : "Control Point 51" : : "If set, control point 51 of the effect will be at this entity's location. If control point 50 is not set, this will be ignored."
	cpoint52(target_destination) : "Control Point 52" : : "If set, control point 52 of the effect will be at this entity's location. If control point 51 is not set, this will be ignored."
	cpoint53(target_destination) : "Control Point 53" : : "If set, control point 53 of the effect will be at this entity's location. If control point 52 is not set, this will be ignored."
	cpoint54(target_destination) : "Control Point 54" : : "If set, control point 54 of the effect will be at this entity's location. If control point 53 is not set, this will be ignored."
	cpoint55(target_destination) : "Control Point 55" : : "If set, control point 55 of the effect will be at this entity's location. If control point 54 is not set, this will be ignored."
	cpoint56(target_destination) : "Control Point 56" : : "If set, control point 56 of the effect will be at this entity's location. If control point 55 is not set, this will be ignored."
	cpoint57(target_destination) : "Control Point 57" : : "If set, control point 57 of the effect will be at this entity's location. If control point 56 is not set, this will be ignored."
	cpoint58(target_destination) : "Control Point 58" : : "If set, control point 58 of the effect will be at this entity's location. If control point 57 is not set, this will be ignored."
	cpoint59(target_destination) : "Control Point 59" : : "If set, control point 59 of the effect will be at this entity's location. If control point 58 is not set, this will be ignored."
	cpoint60(target_destination) : "Control Point 60" : : "If set, control point 60 of the effect will be at this entity's location. If control point 59 is not set, this will be ignored."
	cpoint61(target_destination) : "Control Point 61" : : "If set, control point 61 of the effect will be at this entity's location. If control point 60 is not set, this will be ignored."
	cpoint62(target_destination) : "Control Point 62" : : "If set, control point 62 of the effect will be at this entity's location. If control point 61 is not set, this will be ignored."
	cpoint63(target_destination) : "Control Point 63" : : "If set, control point 63 of the effect will be at this entity's location. If control point 62 is not set, this will be ignored."
	
	cpoint1_parent(integer) : "Control Point 1's Parent" : 0 : "If set and nonzero, control point 1 of the effect will use this point for its parent."
	cpoint2_parent(integer) : "Control Point 2's Parent" : 0 : "If set and nonzero, control point 2 of the effect will use this point for its parent."
	cpoint3_parent(integer) : "Control Point 3's Parent" : 0 : "If set and nonzero, control point 3 of the effect will use this point for its parent."
	cpoint4_parent(integer) : "Control Point 4's Parent" : 0 : "If set and nonzero, control point 4 of the effect will use this point for its parent."
	cpoint5_parent(integer) : "Control Point 5's Parent" : 0 : "If set and nonzero, control point 5 of the effect will use this point for its parent."
	cpoint6_parent(integer) : "Control Point 6's Parent" : 0 : "If set and nonzero, control point 6 of the effect will use this point for its parent."
	cpoint7_parent(integer) : "Control Point 7's Parent" : 0 : "If set and nonzero, control point 7 of the effect will use this point for its parent."

	// Inputs
	input Start(void) : "Tell the particle system to start emitting."
	input Stop(void) : "Tell the particle system to stop emitting."
]

@PointClass base(PItem) studio("models/props_halloween/hwn_spellbook_flying.mdl") sphere(fademindist) sphere(fademaxdist) = tf_spell_pickup : "Spell"
[
	tier(choices) : "Spell Tier" : 0 : "Tier of spells that would be randomly assigned to the player" =
	[
		0 : "Common"
		1 : "Rare"
	]
]

//-------------------------------------------------------------------------
//
// Props
//
//-------------------------------------------------------------------------

@BaseClass = Pprop_detail_base
[
	model(studio) : "World model"
]

@BaseClass base(Angles, DXLevelChoice) = Pprop_static_base
[
	model(studio) : "World Model"
	skin(integer) : "Skin" : 0 : "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin instead of the default."
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	disableshadows(choices) : "Disable Shadows" : 0 : "Prevent the entity from creating cheap render-to-texture shadows. Does not affect shadow mapping." =
	[
		0 : "No"
		1 : "Yes"
	]
	screenspacefade(choices) : "Screen Space Fade" : 0 : "The method by which the fading distance should be determined. If 'No', the fade distances is the distance from the player's view to the object, in inches. If 'Yes', the fade distance is the size of the object onscreen, in pixels." =
	[
		0 : "No"
		1 : "Yes"
	]
	fademindist(float) : "Start Fade Dist/Pixels" : -1 : "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 0 : "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades."
	fadescale(float) : "Fade Scale" : 1 : "If you specify a fade in the worldspawn, or if the engine is running under dx7 [hl2/ep1/portal] or dx8 [ep2/tf], then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified." +
												 " This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades." +
												 " Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
	lightingorigin(target_destination) : "Lighting Origin" : "" : "Select an info_lighting to specify a location to sample lighting from, instead of using this entity's origin."
	disablevertexlighting(choices) : "Disable Vertex lighting" : 0 : "Prop will be lit uniformly with a lighting value sampled from its origin. Enable this if the entity is not shadowed by another object." =
	[
		0 : "No"
		1 : "Yes"
	]
	disableselfshadowing(choices) : "Disable Self-Shadowing with vertex lighting" : 0 : "Prop will not cast shadows on itself when per-vertex lighting is calculated." =
	[
		0 : "No"
		1 : "Yes"
	]
	ignorenormals(choices) : "Ignore surface normal for computing vertex lighting" : 0 : "A surface normal defines the direction from which each polygon is brightest-lit, and how much light is received. You can ignore this setting most of the time." =
	[
		0 : "No"
		1 : "Yes"
	]
	generatelightmaps(choices) : "Generate (and use) lightmaps for this prop" : 0 : "The higher lightmap resolution the more detailed the shadows casted onto the prop are. Obviously, the higher the lightmap resolution, the more the file size of your map goes up. You can also change the X and Y resolution below." =
	[
		0 : "No"
		1 : "Yes"
	]
	lightmapresolutionx(integer) : "Lightmap Resolution X" : 32 : "The resolution of the generated lightmap in the X (or U) direction (only used if Generate Lightmaps is Yes) "
	lightmapresolutiony(integer) : "Lightmap Resolution Y" : 32 : "The resolution of the generated lightmap in the Y (or V) direction (only used if Generate Lightmaps is Yes) "
]

@BaseClass = PBaseFadeProp
[
	fademindist(float) : "Start Fade Dist" : -1 : "Distance at which the prop starts to fade (<0 = use fademaxdist)."
	fademaxdist(float) : "End Fade Dist" : 0 : "Max fade distance at which the prop is visible (0 = don't fade out)"
	fadescale(float) : "Fade Scale" : 1 : "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified." +
												 " This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades." +
												 " Numbers smaller than 1 cause the prop to fade out at further distances, and greater than 1 cause it to fade out at closer distances."
]

@BaseClass base(Parentname, Global, Angles, Studiomodel, BreakableProp, DXLevelChoice, PBaseFadeProp, RenderFields) = Pprop_dynamic_base
[
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]

	spawnflags(flags) =
	[
		64 : "Use Hitboxes for Renderbox" : 0
		256 : "Start with collision disabled" : 0
	]

	DefaultAnim(string) : "Default Animation" : "" : "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."

	RandomAnimation(choices) : "Randomly Animate" : 0 : "If set, this prop will randomly choose and play animations, based upon the times specified in 'Min/Max Random Anim Time'. Inbetween the random animations, it will revert to playing the 'Default Animation'." =
	[
		0: "No"
		1: "Yes"
	]
	MinAnimTime(float) : "Min Random Anim Time" : "5" : "Minimum time between random animations."
	MaxAnimTime(float) : "Max Random Anim Time" : "10" : "Maximum time between random animations."
	SetBodyGroup(integer) : "Body Group" : 0	// NEEDHELP
	
	DisableBoneFollowers(choices) : "Disable Bone Followers" : 0 : "If set, this prop won't generate bone followers, even if they're listed in the model's .qc" =
	[
		0: "No"
		1: "Yes"
	]
	
	// Inputs
	input SetAnimation(string) : "Force the prop to play an animation. The parameter should be the name of the animation."
	input SetDefaultAnimation(string) : "Set the Default Animation to the one specified in the parameter."
	input SetPlaybackRate(float) : "Set the playback rate for the animation."
	input SetBodyGroup(integer) : "Set the visible bodygroup, by index."
	input TurnOn(void) : "Make the prop visible."
	input TurnOff(void) : "Make the prop invisible."
	input EnableCollision(void) : "Enable collision on the prop."
	input DisableCollision(void) : "Disable collision on the prop."

	// Outputs
	output OnAnimationBegun(void) : "Fired whenever a new animation has begun playing."
	output OnAnimationDone(void) : "Fired whenever an animation is complete."

	lightingorigin(target_destination) : "Lighting Origin" : "" : "Select a path_corner entity to specify a location to sample lighting from, instead of using this entity's origin."
]

@PointClass base(Pprop_detail_base) studioprop() = prop_detail : 
	"Detail Prop"
[
	model(studio) : "World model"
]

@PointClass base(Pprop_static_base) color(255 255 0) sphere(fademindist) sphere(fademaxdist) studioprop() = prop_static :
	"A prop that doesn't move and doesn't animate."
[
]

@PointClass base(Pprop_dynamic_base,EnableDisable) sphere(fademindist) sphere(fademaxdist) studioprop() = prop_dynamic :
	"A prop that can be placed in hierarchy and can play animations. It can also be configured to break when it takes enough damage. "+
	"Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. "+
	"If the model used by the prop is configured to be used as a prop_physics (i.e. it should be physically simulated) then it CANNOT be "+
	"used as a prop_dynamic. Upon level load it will display a warning in the console and remove itself. Use a prop_physics instead."
[
]

@PointClass base(Pprop_dynamic_base) studioprop() = prop_dynamic_override :
	"A prop that can be placed in hierarchy and can play animations. It can also be configured to break when it takes enough damage.\n"+
	"prop_dynamic_override is a prototyping entity only. It will allow the use of models designed to be used as prop_physics."
[
	health(integer) : "Health" : 0 : "Number of points of damage to take before breaking.  0 means don't break."	
]

@BaseClass base(Targetname, Global, Angles, Studiomodel, BreakableProp, DXLevelChoice, PBaseFadeProp) = BasePropPhysics
[ 
	spawnflags(flags) = 
	[
		1 : "Start Asleep" : 0
		2 : "Don't take physics damage" : 0
		4 : "Debris - Don't collide with the player or other debris" : 0
		8 : "Motion Disabled" : 0
		64 : "Enable motion on Physcannon grab" : 0
		128 : "Not affected by rotor wash" : 0
		256 : "Generate output on +USE " : 1
		512 : "Prevent pickup" : 0
		1024: "Prevent motion enable on player bump" : 0
		4096: "Debris with trigger interaction" : 0
		8192: "Force server-side (Multiplayer only)" : 0
		1048576: "Physgun can ALWAYS pick up. No matter what." : 0
	]
	
	minhealthdmg(integer) : "Min Damage to Hurt" : 0 : "The prop will ignore any damage events if the damage is less than this amount."
	shadowcastdist(integer) : "Shadow Cast Distance" : 0 : "Use this to override how far this object casts shadows. 0 = default distance."
	physdamagescale(float) : "Physics Impact Damage Scale" : "0.1" : "Scales damage energy when this object is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility.\nSet to 1.0 for materials as strong as flesh, smaller numbers indicate stronger materials."
	Damagetype(choices) : "Impact damage type" : 0 =
	[
		0: "Blunt"
		1: "Sharp"
	]

	nodamageforces(choices) : "Damaging it Doesn't Push It" : 0 : "Used to determine whether or not damage should cause the brush to move." =
	[
		0: "No"
		1: "Yes"
	]

	inertiaScale(float) : "Scale Factor For Inertia" : "1.0" : "Scales the angular mass of an object. Used to hack angular damage and collision response."
	massScale(float) : "Mass Scale" : "0" : "A scale multiplier for the object's mass."
	overridescript(string) : "Override Parameters" : "" : "A list of physics key/value pairs that are usually in a physics prop .qc file. Format is 'key,value,key,value,etc'."
	damagetoenablemotion(integer) : "Health Level to Override Motion" : 0 : "If specified, this object will start motion disabled. Once its health has dropped below this specified amount, it will enable motion."
	forcetoenablemotion(float) : "Physics Impact Force to Override Motion" : 0 : "If specified, this object will start motion disabled. Any impact that imparts a force greater than this value on the physbox will enable motion."
	
	puntsound(sound) : "Sound to make when punted"

	// Inputs
	input Wake(void) : "Wake up this physics object, if it is sleeping."
	input Sleep(void) : "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input DisableFloating(void) : "Disable fluid/floating simulation to reduce cost."
	input SetBodyGroup(integer) : "Set this prop's body group (from 0 - n)."
	input physdamagescale(float) : "Set the Physics Impact Damage Scale for this character. NOTE: 0 means this feature is disabled for backwards compatibility."
	input EnableDamageForces(void) : "Damaging the entity applies physics forces to it."
	input DisableDamageForces(void) : "Damaging the entity does *not* apply physics forces to it."
	input EnablePuntSound(void) : "Allow this prop to play its own sound when punted"
	input DisablePuntSound(void) : "Prevent this prop from playing its own sound when punted"

	// Outputs
	output OnMotionEnabled(void) : "Fired when motion is enabled on this prop, either via 'Health Level to Override Motion' or from the EnableMotion input."
	output OnAwakened(void) : "Fired when this entity becomes awake (collision/force is applied to it while it's asleep)."
	output OnPhysGunPickup(void) : "Fired when the player picks up the prop with the physcannon or +USE."
	output OnPhysGunPunt(void) : "Fired when a player punts this object with the physgun."
	output OnPhysGunOnlyPickup(void) : "Fired when a player picks this object up WITH THE PHYSGUN. +USE pickups do not fire this output."
	output OnPhysGunDrop(void) : "Fired when the player drops the prop with the physcannon or USE."
	output OnPlayerUse(void) : "Fired when the player tries to +USE the prop. This output will fire only if the Generate output on +USE spawnflag is set."
	output OnPlayerPickup(void) : "Fired whenever the player picks up this prop (with the physcannon or with +USE)."
	output OnOutOfWorld(void) : "Fired whenever the prop is out of the allowed world bounds."
]

@PointClass base(BasePropPhysics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_override :
	"A prop that physically simulates as a single rigid body. It can be constrained to other physics objects using hinges "+
	"or other constraints. It can also be configured to break when it takes enough damage. Health can be overridden on this version."
[
	health(integer) : "Health" : 0 : "Number of points of damage to take before breaking.  0 means don't break."
	
	// Inputs
	input Ignite(void) : "Ignite, burst into flames."
	input IgniteLifetime(float) : "Ignite, with a parameter lifetime."
	input IgniteNumHitboxFires(integer) : "Ignite, with a parameternumber of hitbox fires."
	input IgniteHitboxFireScale(float) : "Ignite, with a parameter hitbox fire scale."
]

@PointClass base(BasePropPhysics, RenderFields) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics :
	"A prop that physically simulates as a single rigid body. It can be constrained to other physics objects using hinges "+
	"or other constraints. It can also be configured to break when it takes enough damage. "+
	"Note that the health of the object will be overridden by the health inside the model, to ensure consistent health game-wide. "+
	"If the model used by the prop is configured to be used as a prop_dynamic (i.e. it should not be physically simulated) then it CANNOT be "+
	"used as a prop_physics. Upon level load it will display a warning in the console and remove itself. Use a prop_dynamic instead."
[
	// Inputs
	input Ignite(void) : "Ignite, burst into flames."
	input IgniteLifetime(float) : "Ignite, with a parameter lifetime."
	input IgniteNumHitboxFires(integer) : "Ignite, with a parameternumber of hitbox fires."
	input IgniteHitboxFireScale(float) : "Ignite, with a parameter hitbox fire scale."
]

@PointClass base(prop_physics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_multiplayer :
	"This class is the same as prop_physics, except the runtime collisions use a more bouncy method that avoids " +
	"the prediction errors normal physics objects get."
[
	physicsmode(choices) : "Physics Mode" : 0 =
	[
		0: "Auto Detect"
		1: "Solid, Server-side"
		2: "Non-Solid, Server-side"
		3: "Non-Solid, Client-side"
	]
]

@PointClass base(Angles, Targetname, Studiomodel, DXLevelChoice, PBaseFadeProp, EnableDisable) sphere(fademindist) sphere(fademaxdist) studioprop() = prop_ragdoll :
	"A prop that physically simulates and can be articulated with internal joints. The joint constraints are part of the physics model."
[
	spawnflags(flags) = 
	[
		4 : "Debris - Don't collide with the player or other debris" : 1
		8192 : "Allow Dissolve" : 0
		16384 : "Motion Disabled" : 0
		32768 : "Allow stretch" : 0
		65536 : "Start asleep" : 0
	]
	angleOverride(string) : "Override Animation" : "" : "Filled in by the engine via wc_update_entity, do not edit by hand except to clear."

	input StartRagdollBoogie(void) : "Begins ragdoll boogie effect. Parameter override = number of seconds to boogie."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input FadeAndRemove(float) : "Fade out then remove (kill) self. Parameter override = duration of fade"
]

@PointClass base(Pprop_dynamic_base) studioprop() = prop_dynamic_ornament :
	"A way to attach one studio model to another as an ornament. It will render in the way that player/NPC weapons render."
[
	solid(choices) : "Collisions" : 0 =
	[
		0: "Not Solid"
	]	

	InitialOwner(string) : "Target Entity" : : "Name of the entity that this ornament should attach to, at startup."
	
	// Inputs
	input SetAttached(string) : "Attach the ornament to a different entity. Parameter should be the name of entity to attach to."
	input Detach(string) : "Detach from the Target Entity and become invisible. The ornament can be re-attached with the SetAttached input."
]

@PointClass base(Targetname, Angles) studio("models/props_training/target_demoman.mdl") = tf_target_dummy : "Red Demoman Target"
[
]

@PointClass base(Targetname, Studiomodel ,Origin, Angles) sphere(radius) studioprop() = tf_generic_bomb : "Generic Bomb"
[
	// Params
	damage(float) : "Explosion Damage" : 50 : "Amount of damage to do when exploding."
	radius(float) : "Explosion Radius" : 100 : "Explosion radius."
	health(integer) : "Health" : 1 : "Health of the bomb."
	explode_particle(string) : "Explosion Particle" : "" : "Name of the particle effect to play when exploding."
	sound(sound) : "Explosion Sound" : "" : "Name of the sound effect to play when exploding."
	friendlyfire(choices) : "Friendly Fire" : 0 =
	[
		0 : "Damage attacker and enemies"
		1 : "Damage everyone"
	]

	// Inputs
	input Detonate(void) : "Force detonation."

	// Outputs
	output OnDetonate(void) : "Fired when this bomb detonates."
]

@PointClass base(Targetname, Angles) sphere(expradius) studioprop() = physics_cannister : "HL2_GENERIC_BOMB"
[
	model(studio) : "World model" : "models/fire_equipment/w_weldtank.mdl"
	spawnflags(flags) = 
	[
		1 : "Start Asleep" : 0
		2 : "Explodes" : 1
	]

	expdamage(string) : "Explosion Damage" : "200.0" : "The amount of damage done by the explosion created when the cannister blows up."
	expradius(string) : "Explosion Radius" : "250.0" : "The radius of the explosion to create when the cannister blows up."
	health(integer) : "Health" : 25 : "The amount of damage the cannister takes before exploding."

	thrust(string) : "Thrust" : "3000.0" : "When the cap has been blown off, and the escaping gas is thrusting the cannister about, this is the amount of thrust generated."
	fuel(string) : "Fuel Seconds" : "12.0" : "The amount of time that gas leaks from the cannister before being considered empty."
	rendercolor(color255) : "Smoke Color (R G B)" : "255 255 255"
	renderamt(integer) : "Smoke Alpha (0 - 255)" : 128
	gassound(sound) : "Thruster Sound" : "ambient/objects/cannister_loop.wav" : "The sound played when the gas is escaping from the cannister."

	// Inputs
	input Activate(string) : "Start gas escaping from the cannister."
	input Deactivate(string) : "Stop gas escaping from the cannister."
	input Explode(string) : "Force the cannister to explode."
	input Wake(void) : "Wakes up the cannister, if it is sleeping."

	// Outputs
	output OnActivate(void) : "Fired when gas starts to escape from the cannister."
	output OnAwakened(void) : "Fired when this entity becomes awake (collision/force is applied)."
]

//-------------------------------------------------------------------------
//
// random again.
//
//-------------------------------------------------------------------------

@PointClass  iconsprite("editor-puddy/func_instance_parms") = func_instance_parms : 
	"Place one copy of this entity inside of an instance.  Whenever you add a $parameter for the instance, get the properties " +
	"of this entity.  It will auto-populate it with the variables and allow you to indicate the variable type."
[
	parm1(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm2(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm3(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm4(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm5(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm6(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm7(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm8(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm9(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
	parm10(instance_parm) : "Parm" : : "This is a parameter.  It goes in the form of $variable type."
]

@SolidClass base(Trigger) = trigger_passtime_ball  : "Send enter/exit outputs when ball or player with ball enter/exits"
[
	output OnBallEnter(void) : ""
	output OnBallExit(void) : ""
]

@SolidClass base(Targetname, Parentname, Origin, EnableDisable, PTeamNum) = func_passtime_goal :
	"Players or passtime balls that touch this will cause a score for whichever team touches it. You can limit which teams are allowed to touch it."
[
	points(float) : "Points" : 1 : "How many points the team gets for scoring here."
	output OnScoreBlu(void) : "BLU scored. Useful for doing any effects specific to this goal."
	output OnScoreRed(void) : "RED scored. Useful for doing any effects specific to this goal."

	spawnflags(flags) = 
	[
		1: "Scoring here wins the game" : 0
		2: "DO NOT let the ball score here" : 0
		4: "Let ball-carrying players score here" : 0
		8: "Show special locked status on HUD" : 0
	]
]

@SolidClass base(Targetname, Parentname) = func_precipitation : 
	"A brush that creates rain and snow inside its volume."
[
	renderamt(integer) : "Density (0-100%)" : 5	
	rendercolor(color255) : "Color (R G B)" : "100 100 100"
	preciptype(choices) : "Precipitation Type" : 0 =	
	[
		0 : "Rain"
		2 : "Ash"
		3 : "Snowfall"
	]
]

@SolidClass base(Targetname, Parentname, EnableDisable, Toggle) = func_passtime_no_ball_zone : "Cant use the ball here."
[
]

@SolidClass base(Targetname, Parentname, PTeamNum, EnableDisable, Toggle) = func_regenerate :
	"Regeneration zone for players."
[
	associatedmodel(target_destination) : "Associated Model" : "" : "The prop_dynamic that represents this zone in the world. The associated model should have appropriate open and close animations for when players interact with the zone."
]

@SolidClass base(Targetname, Parentname, PTeamNum, EnableDisable, Toggle) = func_powerupvolume :
	"Players touching this volume will get a temporary, powerful upgrade."
[
	filtername(filterclass) : "Filter Name" : : "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
	
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]

@SolidClass base(Targetname, Parentname, EnableDisable, Toggle) = func_respawnflag :
	"Designates an area that triggers the flag to reset when it touches the area."
[	
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]
	
@SolidClass base(Targetname, Parentname, PTeamNum, EnableDisable, Toggle) = func_respawnroom :
	"Designates a respawn room for a team."
[
	filtername(filterclass) : "Filter Name" : : "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
	
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
	input SetActive( void ) : "Set Active"
	input SetInactive( void ) : "Set InActive"
	input ToggleActive( void ) : "Toggle Active"
	input RoundActivate( void ) : "If we don't have a team find a info_player_teamspawn inside us that we can derive a team from."
]

@SolidClass base(Targetname, Parentname, Origin, RenderFields, Global, Inputfilter, EnableDisable, Shadow) = func_respawnroomvisualizer : 
	"Brushes that become visible to enemy players when they get close. Use them to mark areas that they're unable to enter (i.e. respawn rooms)." 
[
	spawnflags(flags) =
	[
		2: "Ignore player +USE" : 1
	]

	respawnroomname(target_destination) : "Associated Respawn Room" : "" : "The func_respawnroom that this entity is visualizing. This entity will have its team matched to that for the func_respawnroom, and will have it updated if the func_respawnroom ever changes team."

	Solidity(choices) : "Solidity" : 1 : "Used to control the solidity/collision of these brushes." =
	[
		0 : "Toggle"
		1 : "Never Solid"
		2 : "Always Solid"
	]

	vrad_brush_cast_shadows(choices) : "Shadows" : 0 : "Set this if this brush casts lightmap shadows." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	solid_to_enemies(choices) : "Solid to Enemies" : 1 : "Determines if this area is solid to enemy players." =
	[
		0 : "No"
		1 : "Yes"
	]	
	
	input SetSolid(bool) : "Set whether this area is solid to enemy players or not. 0 = No, 1 = Yes"
	input RoundActivate(void) : "Find func_respawnroom name"
]

@SolidClass base(Targetname, PTeamNum, Parentname, Origin, RenderFields, EnableDisable) = func_forcefield : 
	"Brushes that become visible to enemy players when they get close. Use them to mark areas that they're unable to enter." 
[
]

@SolidClass base(Targetname, PTeamNum, EnableDisable, Toggle) = func_changeclass :
	"ChangeClass zone for players." []

@SolidClass base(Trigger,Parentname,PCondition,Origin,EnableDisable,Toggle,Targetname,TriggerOnce) = trigger_add_tf_player_condition :
	"A trigger that will add a condition to players."
[
	duration(float)			: "Duration"		:  0	: "The duration of the condition. NOTE: -1 duration means last until the player exits the trigger."
]

@SolidClass base(Trigger,PCondition,Origin,EnableDisable,Toggle,Targetname,TriggerOnce) = trigger_remove_tf_player_condition :
	"A trigger that will remove a condition (or all if set to INVALID) from tf players."
[
]

@SolidClass base(Trigger,Origin,EnableDisable,Toggle,Targetname,TriggerOnce,PAttributes) = trigger_add_or_remove_tf_player_attributes  :
	"A trigger that will add a attributes to players."
[
	duration(float)		: "Duration"		:  0	: "The duration of the Attributes. NOTE: -1 duration means last until the player exits the trigger."
	value(float)		: "Value"		:  "1.0"	: "The value which affects the attribute chosen."
	add_or_remove(choices) : "Add or Remove" : 0 : "Add or Remove Attribute." =
	[
		0 : "Add"
		1 : "Remove"
	]
]

@SolidClass base(Trigger, Targetname, EnableDisable, Toggle) = trigger_ignite : "Ignite the player and burn the player over time."
[
	burn_duration(float) : "Burn duration" : 5 : "Duration of the after burn effect on the player after leaving the trigger."
	damage_percent_per_second(float) : "Damage(%) per second" : 10 : "Damage per second while inside the trigger."
	ignite_particle_name(string) : "Ignite particle name" : "" : "Name of the particle that plays when player first touch the trigger."
	ignite_sound_name(string) : "Ignite sound name" : "" : "Name of the sound script that plays when player first touch the trigger."
]

@SolidClass base(Targetname, PTeamNum, EnableDisable, Toggle) = func_flag_alert : "Alerts are triggered when an enemy carrying a flag starts touching the area (or any player for an area with no team)."
[
	playsound(choices) : "Play alert sound" : 1 : "Play the sound when the alert is triggered." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	alert_delay(integer) : "Delay between alerts (in seconds)" : 10 : "The amount of time between alerts being triggered (per team)."
	
	output OnTriggeredByTeam1(void) : "Sent when RED triggers the alert."
	output OnTriggeredByTeam2(void) : "Sent when BLUE triggers the alert."
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]	

@SolidClass base(Targetname, EnableDisable, PTeamNum, Parentname) = func_capturezone :
	"TF flag capture zone (set Team to 'any' for Territory Control maps)."
[
	capturepoint(integer) : "Capture Point" : 1 : "Used for Attack/Defend and Territory Control maps ONLY. This is ignored for CTF maps. Set this value to the Capture Point number for this entity."

	capture_delay(float) : "Capture Delay" : "1.1" : "Only used on Player Destruction maps, this is the default number of seconds between captures when the player is touching the area."
	capture_delay_offset(float) : "Capture Delay Offset" : "0.025" : "Only used on Player Destruction maps, this is amount of time to reduce the Capture Delay per player on the server."
	shouldBlock(choices) : "Capture Blocking" : 1 : "Only used on Player Destruction maps, this determines whether multiple teams in the zone will block each other from captures." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	output OnCapture(void) : "Sent when a flag is captured in this zone."
	output OnCapTeam1(void) : "Sent when RED captures a flag in this zone."
	output OnCapTeam2(void) : "Sent when BLU captures a flag in this zone."
	output OnCapTeam1_PD(void) : "Sent when RED captures a point in this zone during Player Destruction mode."
	output OnCapTeam2_PD(void) : "Sent when BLU captures a point in this zone during Player Destruction mode."
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]

@SolidClass base(Targetname, Parentname, EnableDisable, PTeamNum) = func_flagdetectionzone :
	"TF flag detection zone."
[
	alarm(choices) : "Alarm" : 0 : "Trigger MvM Bomb alarm." =
	[
		0 : "No"
		1 : "Yes"
	]

	input Test( void ) : "Send OnStartTouchFlag & OnPickedUpFlag outputs if any player with flag is touching. Send OnEndTouchFlag & OnDroppedFlag outputs if no player with flag is touching."
	
	output OnStartTouchFlag(void) : "Sent when a flag or flag carrier first touches the zone."
	output OnEndTouchFlag(void) : "Sent when a flag or flag carrier stops touching the zone."
	output OnDroppedFlag(void) : "Sent when a flag is dropped in the zone."
	output OnPickedUpFlag(void) : "Sent when a flag is picked up in the zone."
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]

@SolidClass base(Targetname, PTeamNum, EnableDisable, Toggle) = func_nogrenades : "Grenades protected area." 
[

]
	
	
@SolidClass base(Targetname, PTeamNum, EnableDisable, Toggle) = func_nobuild : "Engineer no-build area."
[
	AllowSentry(choices) : "Allow Sentries" : 0 : "Sentries are allowed to be built in this volume" =
	[
		0 : "No"
		1 : "Yes"
	]

	AllowDispenser(choices) : "Allow Dispensers" : 0 : "Dispensers are allowed to be built in this volume" =
	[
		0 : "No"
		1 : "Yes"
	]

	AllowTeleporters(choices) : "Allow Teleporters" : 0 : "Teleporters are allowed to be built in this volume" =
	[
		0 : "No"
		1 : "Yes"
	]

	input SetActive( void ) : "Set Active"
	input SetInactive( void ) : "Set InActive"
	input ToggleActive( void ) : "Toggle Active"
]

@PointClass base(Targetname, EnableDisable) studio("models/pickups/pickup_powerup_regen.mdl") sphere(fademindist) sphere(fademaxdist) = info_powerup_spawn : "Powerup spawn location. Only one of each type of Powerup will spawn in a game, so some Powerup spawn locations may not be used in some rounds. Locations and Powerup types are chosen at random. Will only spawn if tf_powerup_mode is set"
[
	team(choices) : "Owner Team" : -2 : "Teams can own spawn points. When Powerups are dropped, they resposition themselves after timing out. They will try to pick a spawn point based on what team designation they had when they repositioned. Set to Everyone to have no team bias in spawn positioning" =
	[
		-2 : "Everyone"
		2 : "RED"
		3 : "BLU"
	]
]

@PointClass base(Targetname, EnableDisable) studio("models/pickups/pickup_powerup_crit.mdl") sphere(fademindist) sphere(fademaxdist) base(PItem) = item_powerup_crit :	"Temporary Crit Powerup. Powerup effect wears off. Powerup respawns automatically" []
@PointClass base(Targetname, EnableDisable) studio("models/pickups/pickup_powerup_uber.mdl") sphere(fademindist) sphere(fademaxdist) base(PItem) = item_powerup_uber :	"Temporary Uber Powerup. Powerup effect wears off. Powerup respawns automatically" []
@PointClass base(Targetname, EnableDisable) studio("models/pickups/pickup_powerup_strength.mdl") sphere(fademindist) sphere(fademaxdist) base(PItem) = item_powerup_rune :	"Strength Powerup"
[
	input SetTeam(integer) : "Changes the entity's team."
]

@SolidClass base(Targetname, Origin, RenderFields) = func_train
[
	spawnflags(flags) =
	[
		8 : "Non-solid" : 0
	]
	texframeindex(integer) : "Initial Brush Frame Index" : : "Use this to set the initial frame of materials with multiple frames in the brush"
	target(target_destination) : "First path_corner"
	noise1(sound) : "Movement Sound" : : "The sound to play when the train moves."
	noise2(sound) : "Stop Sound" : : "The sound to play when the train stops moving."
	speed(float) : "Speed" : "50.000000" : "Speed at which the brush moves."
	volume(float) : "Sound volume [0.0, 10.0]" : "0.000000"
	dmg(float) : "Crush Damage" : "0.000000"
	input Toggle(void) : "Toggle movement"
	input Start(void) : "Start movement"
	input Stop(void) : "Stop movement"
	input Use(void) : "Toggle movement - has a different functionality than Toggle"
]

@SolidClass base(Targetname, EnableDisable) = func_upgradestation : "Where players go to buy upgrades for weapons and items."
[
	wait(integer) : "Delay Before Reset" : 1 : "Amount of time, in seconds, after the trigger_multiple has triggered before it can be triggered again. If set to -1, it will never trigger again"
	
// Outputs
	output OnTrigger(void) : "Fired whenever the trigger is activated."
	output OnTouching(void) : "Fired when the TestTouch input is true (something is touching the trigger.)"
	output OnNotTouching(void) : "Fired when the TestTouch input is not true (nothing is touching the trigger.)"
]

@PointClass base(Targetname, Angles) iconsprite("editor-puddy/bot_generator") = bot_generator : "Entity spawns <count> TFBots every <interval> seconds, with at most <maxActive> active at once"
[
	team(choices) : "Team" : "auto" : "Team" =
	[
		"auto" : "Any"
		"red" : "RED"
		"blue" : "BLU"
	]
	
	class(choices) : "Class" : "auto" : "Class" =
	[
		"auto" : "Any"
		"scout" : "Scout"
		"sniper" : "Sniper"
		"soldier" : "Soldier"
		"demoman" : "Demoman"
		"medic" : "Medic"
		"heavyweapons" : "Heavy"
		"pyro" : "Pyro"
		"spy" : "Spy"
		"engineer" : "Engineer"
	]

	count(integer) : "Count" : 1 : "Number of TFBots to spawn over the lifetime of this bot generator."
	maxActive(integer) : "Max Active" : 1 : "Maximum number of active TFBots spawned at any given time from this generator."
	interval(float) : "Interval" : 0 : "Time (in seconds) between spawns"

	action_point(target_destination) : "Action Point" : : "Put the name of a bot_action_point here to tell the spawned bot to move there."

	initial_command(choices) : "Initial Command" : "" : "Initial command to give this bot, if any." =
	[
		"goto action point" : "Go to specified Action Point"
		"taunt" : "Taunt"
		"despawn" : "Leave the game"
		"cloak" : "If Spy, Cloak"
		"uncloak" : "If Spy, Uncloak"
		"attack sentry at next action point" : "Attack sentry gun at next action point"
		"disguise" : "If Spy, Disguise"
	]
// more next bot command i found in code..?
// CTFBot::GotoActionPoint Get the losers! Run away from threat!   In preround Opportunistically using buff item   Acknowledging friendly human attention  Backing off Moving to cover to reload   Grabbing nearby health  Grabbing nearby ammo    Using nearby teleporter Waiting for squadmates to get back into formation   Prerequisite commands me to wait    Prerequisite commands me to move to an entity   goto action point   Received command to go to action point  despawn Received command to go to de-spawn  Received command to taunt   cloak   uncloak disguise    build sentry at nearest sentry hint Building a Sentry at a hint location    attack sentry at next action point  Received command to attack sentry gun at next action point  Taunt finished
	suppressFire(choices) : "Suppress Fire" : 0 : "Newly generated TFBots will suppress their fire if this is set." =
	[
		0 : "No"
		1 : "Yes"
	]

	disableDodge(choices) : "Disable Dodge" : 0 : "Newly generated TFBots will not dodge if this is set." =
	[
		0 : "No"
		1 : "Yes"
	]

	actionOnDeath(choices) : "Action on Death" : 1 : "When a TFBot dies, they will either respawn like a normal player, remove themselves, or move to the spectator team." =
	[
		0 : "Repawn as usual"
		1 : "Remove self"
		2 : "Move to Spectator team"
	]

	spectateOnDeath(choices) : "Move to Spectator Team on Death" : 0 : "TFBots will move to the Spectator team on death.  Use this as a pooling mechanism" =
	[
		0 : "No"
		1 : "Yes"
	]

	useTeamSpawnPoint(choices) : "Use Team Spawn Point" : 0 : "TFBots will use their team spawn point, instead of this point if this is set." = 
	[
		0 : "No"
		1 : "Yes"
	]

	retainBuildings(choices) : "Retain Buildings After Disconnect" : 0 : "If set, any buildings (sentries, sappers, etc) built by bots from this generator will not be destroyed when their owners are removed." = 
	[
		0 : "No"
		1 : "Yes"
	]

	difficulty(choices) : "Difficulty" : 0 : "The skill level of bots created by this generator." = 
	[
		-1 : "Default"
		0 : "Easy"
		1 : "Normal"
		2 : "Hard"
		3 : "Expert"
	]

	spawnOnlyWhenTriggered(choices) : "Don't spawn bots unless triggered" : 0 : "If this is set, you must use the SpawnBot input to have any bots spawn" =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) =
	[
		1 :	   "Spawned Bots Ignore Enemy Scouts" : 0
		2 :    "Spawned Bots Ignore Enemy Soldiers" : 0
		4 :    "Spawned Bots Ignore Enemy Pyros" : 0
		8 :    "Spawned Bots Ignore Enemy Demomen" : 0
		16 :   "Spawned Bots Ignore Enemy Heavies" : 0
		32 :   "Spawned Bots Ignore Enemy Medics" : 0
		64 :   "Spawned Bots Ignore Enemy Engineers" : 0
		128 :  "Spawned Bots Ignore Enemy Snipers" : 0
		256 :  "Spawned Bots Ignore Enemy Spies" : 0
		512 :  "Spawned Bots Ignore Enemy Sentry Guns" : 0
		1024 : "Spawned Bots Ignore Scenario Goals" : 0
	]

	// Inputs
	input Enable(void) : "Begin spawning TFBots"
	input Disable(void) : "Stop spawning TFBots"
	input SetSuppressFire(bool) : "Set whether TFBots should suppress their fire."
	input SetDisableDodge(bool) : "Set whether TFBots should have the dodge ability disabled or not."
	input SetDifficulty(integer) : "Change the skill level of subsequently generated bots (-1=default, 0=easy, 1=normal, 2=hard, 3=expert)."
	input CommandGotoActionPoint(target_destination) : "Commands all bots spawned by this generator to go to the specified action point by name."
	input SetAttentionFocus(target_destination) : "All bots spawned by this generator will focus exclusively on this entity. If entity is action point, entities within that point's radius will be attended to."
	input ClearAttentionFocus(target_destination) : "Remove attention focus restrictions from bots spawned by this generator."
	input SpawnBot(void) : "Attempt to spawn a bot within the rules specified."
	input RemoveBots(void) : "Force remove any bots this entity spawned."

	// Outputs
	output OnSpawned(void) : "Sent when the TFBot has spawned into the environment"
	output OnExpended(void) : "Sent when the bot generator has reached its limit of the bots it can create"
	output OnBotKilled(void) : "Sent when a bot associated with this bot generator is killed"
]

@PointClass base(Targetname) iconsprite("editor-puddy/bot_roster") = bot_roster : "Entity specifies what classes TFBots can choose"
[
	team(choices) : "Team" : "auto" : "Team" =
	[
		"auto" : "Any"
		"red" : "RED"
		"blue" : "BLU"
	]

	allowClassChanges(choices) : "Allow Class Changes" : 1 : "Allow TFBots to choose a new class when they respawn." =
	[
		0 : "No"
		1 : "Yes"
	]

	allowScout(choices) : "Allow Scout" : 1 : "Allow TFBots to choose Scouts as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowSniper(choices) : "Allow Sniper" : 1 : "Allow TFBots to choose Snipers as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowSoldier(choices) : "Allow Soldier" : 1 : "Allow TFBots to choose Soldiers as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowDemoman(choices) : "Allow Demoman" : 1 : "Allow TFBots to choose Demoman as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowMedic(choices) : "Allow Medics" : 1 : "Allow TFBots to choose Medics as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowHeavy(choices) : "Allow Heavy" : 1 : "Allow TFBots to choose Heavy as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowPyro(choices) : "Allow Pyro" : 1 : "Allow TFBots to choose Pyro as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowSpy(choices) : "Allow Spy" : 1 : "Allow TFBots to choose Spy as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	allowEngineer(choices) : "Allow Engineer" : 1 : "Allow TFBots to choose Engineer as a class." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// Inputs
	input SetAllowScout(bool) : "Sets whether TFBots can choose Scouts as a class. 0 = No, 1 = Yes"
	input SetAllowSniper(bool) : "Sets whether TFBots can choose Snipers as a class. 0 = No, 1 = Yes"
	input SetAllowSoldier(bool) : "Sets whether TFBots can choose Soldiers as a class. 0 = No, 1 = Yes"
	input SetAllowDemoman(bool) : "Sets whether TFBots can choose Demoman as a class. 0 = No, 1 = Yes"
	input SetAllowMedic(bool) : "Sets whether TFBots can choose Medics as a class. 0 = No, 1 = Yes"
	input SetAllowHeavy(bool) : "Sets whether TFBots can choose Heavy as a class. 0 = No, 1 = Yes"
	input SetAllowPyro(bool) : "Sets whether TFBots can choose Pyro as a class. 0 = No, 1 = Yes"
	input SetAllowSpy(bool) : "Sets whether TFBots can choose Spy as a class. 0 = No, 1 = Yes"
	input SetAllowEngineer(bool) : "Sets whether TFBots can choose Engineer as a class. 0 = No, 1 = Yes"
]

@PointClass base(Targetname) sphere(desired_distance) iconsprite("editor-puddy/bot_action_point") = bot_action_point : "A potential destination for a bot"
[
	next_action_point(target_destination) : "Next Action Point" : : "The next Action Point to approach after performing this one."
	desired_distance(float) : "Desired Distance" : 5 : "The distance to get within when approaching this Action Point before the bot says it has reached it."
	stay_time(float) : "Stay Time" : 0 : "How long the bot should stay at this action point (while perform any commands if applicable)."
	command(choices) : "Command" : "" : "Command to give to the bot when it gets within range of this Action Point." = 
	[
		"taunt" : "Taunt"
		"despawn" : "Leave the game"
		"cloak" : "If Spy, Cloak"
		"uncloak" : "If Spy, Uncloak"
		"attack sentry at next action point" : "Attack sentry gun at next action point"
		"disguise" : "If Spy, Disguise"
		"build sentry at nearest sentry hint" : "If Engineer, build a sentry gun at the nearest sentry hint"
	]

	// Outputs
	output OnBotReached(void) : "A bot has reached this action point"
]

@PointClass base(Targetname) iconsprite("editor-puddy/bot_proxy") = bot_proxy : "An entity that spawns a TFBot and relays events to/from it"
[
	bot_name(string) : "Bot Name" : "TFBot" : "The bot's player name" 

	team(choices) : "Team" : "auto" : "Team" =
	[
		"auto" : "Any"
		"red" : "RED"
		"blue" : "BLU"
	]
	
	class(choices) : "Class" : "auto" : "Class" =
	[
		"auto" : "Any"
		"scout" : "Scout"
		"sniper" : "Sniper"
		"soldier" : "Soldier"
		"demoman" : "Demoman"
		"medic" : "Medic"
		"heavyweapons" : "Heavy"
		"pyro" : "Pyro"
		"spy" : "Spy"
		"engineer" : "Engineer"
	]

	spawn_on_start(choices) : "Spawn on start" : 0 : "Spawn this bot when the round starts" =
	[
		0 : "No"
		1 : "Yes"
	]

	respawn_interval(float) : "Respawn delay" : 0 : "If nonzero, respawn this bot N seconds after it dies"

	action_point(target_destination) : "Action Point" : : "Put the name of a bot_action_point here to tell the bot to move to it when it spawns in."

	// Inputs
	input SetTeam(string) : "Change the bot's team (auto, red, blue)"
	input SetClass(string) : "Change the bot's class (auto, soldier, pyro, etc)"
	input SetMovementGoal(target_destination) : "Tell the bot to move to the given goal"
	input Spawn(void) : "Spawn a TFBot at this position"
	input Delete(void) : "Delete the existing TFBot"

	// Outputs
	output OnSpawned(void) : "Sent when the TFBot has spawned into the environment"
	output OnInjured(void) : "Sent when the TFBot has been injured"
	output OnKilled(void) : "Sent when the TFBot has been killed"
	output OnAttackingEnemy(void) : "Sent when the TFBot has started attacking an enemy"
	output OnKilledEnemy(void) : "Sent when the TFBot has killed an enemy"
]

@PointClass base(EnvGlobal) size(-8 -8 -8, 8 8 8) = env_global : 
	"An entity to control a game-specific global states."
[
	globalstate(choices) : "Global State to Set" =
	[
		"" : "--- None ---"
		"is_console" : "Game is running on a console"
		"is_pc" : "Game is running on a PC"
		"gordon_precriminal" : "Gordon pre-criminal" 
		"friendly_encounter" : "Friendly encounter sequence (lower weapons, etc.)"
		"gordon_invulnerable" : "Gordon is invulnerable"
	]
]


@PointClass base(Targetname) iconsprite("editor-puddy/env_screenoverlay") = env_screenoverlay: 
	"An entity that can display and control a set of screen overlays, to be displayed over the player's view. Useful for view effects like drunkenness, or teleporter afterimages, etc."
[
	OverlayName1(string) : "Overlay Name 1" : "" : "Name of the first overlay material to display."
	OverlayTime1(float) : "Overlay Duration 1" : "1.0" : "Amount of time that the first overlay should be displayed for, after which it will begin showing the second overlay."
	OverlayName2(string) : "Overlay Name 2" : "" : "Name of the second overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime2(float) : "Overlay Duration 2" : "1.0" : "Amount of time that the second overlay should be displayed for, after which it will begin showing the third overlay."
	OverlayName3(string) : "Overlay Name 3" : "" : "Name of the third overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime3(float) : "Overlay Duration 3" : "1.0" : "Amount of time that the third overlay should be displayed for, after which it will begin showing the fourth overlay."
	OverlayName4(string) : "Overlay Name 4" : "" : "Name of the fourth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime4(float) : "Overlay Duration 4" : "1.0" : "Amount of time that the fourth overlay should be displayed for, after which it will begin showing the fifth overlay."
	OverlayName5(string) : "Overlay Name 5" : "" : "Name of the fifth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime5(float) : "Overlay Duration 5" : "1.0" : "Amount of time that the fifth overlay should be displayed for, after which it will begin showing the sixth overlay."
	OverlayName6(string) : "Overlay Name 6" : "" : "Name of the sixth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime6(float) : "Overlay Duration 6" : "1.0" : "Amount of time that the sixth overlay should be displayed for, after which it will begin showing the seventh overlay."
	OverlayName7(string) : "Overlay Name 7" : "" : "Name of the seventh overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime7(float) : "Overlay Duration 7" : "1.0" : "Amount of time that the seventh overlay should be displayed for, after which it will begin showing the eighth overlay."
	OverlayName8(string) : "Overlay Name 8" : "" : "Name of the eighth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime8(float) : "Overlay Duration 8" : "1.0" : "Amount of time that the eighth overlay should be displayed for, after which it will begin showing the ninth overlay."
	OverlayName9(string) : "Overlay Name 9" : "" : "Name of the ninth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime9(float) : "Overlay Duration 9" : "1.0" : "Amount of time that the ninth overlay should be displayed for, after which it will begin showing the tenth overlay."
	OverlayName10(string) : "Overlay Name 10" : "" : "Name of the tenth overlay material to display. If left blank, overlay displaying will finish, and this entity will consider itself done."
	OverlayTime10(float) : "Overlay Duration 10" : "1.0" : "Amount of time that the tenth overlay should be displayed for, after which this entity will stop displaying overlays."

	// Inputs
	input	StartOverlays(void) : "Start displaying the first overlay."
	input	StopOverlays(void) : "Stop displaying any overlays."
	input	SwitchOverlay(float) : "Switch to displaying a specific overlay. Pass in the desired overlay number in the parameter."
]

@PointClass base(Targetname) = env_screeneffect :
	"Allows screenspace effects to be played on the player's view."
[
	type(choices) : "Effect Type" : 0 : "Which effect to use." =
	[
		0 : "Advisor Stun"
		1 : "Intro Blur"
		2 : "Groggy Vision"
	]

	// Inputs
	input	StartEffect(float) : "Start the effect with the duration in seconds as the passed parameter."
	input   StopEffect(float) : "Stop the effect."
]


@PointClass base(Targetname) iconsprite("editor-puddy/game_round_win") = game_round_win :
	 "Tells the game rules that the round has either been won (if a team is assigned) " +
	 "or enter Sudden Death mode (if no team is assigned)."
[	
	TeamNum(choices) : "Team" : 0 : "Team" =
	[
		0 : "None (Sudden Death)"
		2 : "RED"
		3 : "BLU"
	]
	
	force_map_reset(choices) : "Force map reset" : 1 : "Force the map to reset during the force respawn after the round is over." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	switch_teams(choices) : "Switch teams on map win?" : 0 : "Switch the teams when the game is going to be reset." = 
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input SetTeam(integer) : "Changes the entity's team (this is used to determine which team has won the round (0 = none)."
	input RoundWin(void) : "Tell the game rules the round is over."
	
	// Outputs
	output OnRoundWin(void) : "Sent when the entity tells the game rules the round is over."	
]

@PointClass base(Targetname) iconsprite("editor-puddy/game_text_tf") = game_text_tf : 
	"An entity that displays text on player's screens, in pretty tf hud format" 
[
	message(string) : "Message Text" : "" : "Message to display onscreen."
	
	icon(string) : "Icon" : "" : "Hud icon ( from scripts/mod_textures.txt ) to display."
	
	display_to_team(Choices) : "Audience" : 0 =
	[
		0 : "Everyone"
		2 : "RED Team Only"
		3 : "BLU Team Only"
	]
	
	background(Choices) : "Background Panel Color" : 0 =
	[
		0 : "Grey"
		2 : "RED"
		3 : "BLU"
	]

	// Inputs
	input Display(void) : "Display the message text."
]

//-------------------------------------------------------------------------
//
// Activator Filters
//
//-------------------------------------------------------------------------

@BaseClass base(Targetname) = PBaseFilter
[
	Negated(choices) : "Filter mode" : "0" : "If set to Allow, only entities who match the criteria will pass the filter. "+
		"If set to Disallow, only entities who do NOT match the criteria will pass the filter." =
	[
		0 : "Allow entities that match criteria"
		1 : "Disallow entities that match criteria"
	]

	// Inputs
	input TestActivator(void) : "Test the activator against the filter and fires OnPass or OnFail output."

	// Outputs
	output OnPass(void) : "Fired in response to TestActivator input if the activator passes the filter."
	output OnFail(void) : "Fired in response to TestActivator input if the activator fails to pass the filter."
]

@FilterClass base(PTeamNum, PBaseFilter) iconsprite("editor/filter_team") = filter_activator_team :
	"A filter that filters by the team of the activator.  The team number to filter by. "
[
]

@FilterClass base(PTeamNum, PBaseFilter) iconsprite("editor/filter_team") = filter_activator_tfteam :
	"A filter that filters by the team of the activator.  The team number to filter by. " +
	"If the filter mode is Allow, only entities whose team number matches the given team will " +
	"pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose team number " +
	"matches the given team will pass the filter." 
[
	controlpoint(target_destination) : "Associated Control Point" : "" : "The team_control_point associated with this filter. The filter does NOT need an associated control point to function properly, but ownership of the control point will control the team number the filter uses (setup during each round start)."
	
	// Inputs
	input RoundActivate(void) : "Activate the Control Point Finder"
	input RoundSpawn(void) : "Round Spawn"
]

@FilterClass base(PBaseFilter,Condition) iconsprite("editor-puddy/filter_tf_condition") = filter_tf_condition :
	"A filter that filters by conditions on a player"
[
]

@FilterClass base(PBaseFilter) iconsprite("editor-puddy/filter_tf_damaged_by_weapon_in_slot")  = filter_tf_damaged_by_weapon_in_slot :
	"A filter that filters damage by a weapon in a certain slot." +
	"Used for training purposes"
[
	weaponSlot(choices) : "Weapon Slot" : 0 : "Damaged by weapon in slot." =
	[
		0 : "Primary"
		1 : "Secondary"
		2 : "Melee"
		3 : "Grenade"
		4 : "Building"
		5 : "PDA"
		6 : "Item 1"
		7 : "Item 2"
	]
]

@FilterClass base(PBaseFilter,DamageTypeP) = filter_damage_type :
	"A damage filter that filters by the type of damage inflicted. This can only be used as a damage filter, not as an activator filter."
[
]

@FilterClass base(PBaseFilter) iconsprite("editor-puddy/filter_tf_bot_has_tag") = filter_tf_bot_has_tag : "A filter that filters based on the touching mvm bot having specific tags."
[
	tags(string) : "Tags" : "" : "Tags required to pass this filter"
	require_all_tags(choices) : "Require all tags?" : 1 : "Does this filter require all specified tags?" =
	[
		1 : "Yes"
		0 : "No"
	]
]

@FilterClass base(BaseFilter) iconsprite("editor-puddy/filter_tf_class") = filter_tf_class :
	"A filter that filters by the class of the activator.  The team number to filter by. " +
	"If the filter mode is Allow, only entities whose class matches the given class will " +
	"pass the filter. If the filter mode is Disallow, all entities EXCEPT those whose class " +
	"matches the given class will pass the filter." 
[
	tfclass(choices) : "Class" : 0 : "Class" =
	[
		// 0 is undefined
		0 : "Undefined"
		1 : "Scout"
		2 : "Sniper"
		3 : "Soldier"
		4 : "Demoman"
		5 : "Medic"
		6 : "Heavy"
		7 : "Pyro"
		8 : "Spy"
		9 : "Engineer"
	]
]

//-------------------------------------------------------------------------
//
// back to random shits.
//
//-------------------------------------------------------------------------

@PointClass base(Targetname, EnableDisable) iconsprite("editor/logic_relay") = logic_relay :
	"A message forwarder. Fires an OnTrigger output when triggered, and " +
	"can be disabled to prevent forwarding outputs.\n\n" +
	"Useful as an intermediary between one entity and another for turning " +
	"on or off an I/O connection, or as a container for holding a set of " +
	"outputs that can be triggered from multiple places."
[
	spawnflags(flags) =
	[
		1: "Only trigger once" : 0
		2: "Allow fast retrigger" : 0
	]

	// Inputs
	input Trigger(void) : "Trigger the relay, causing its OnTrigger output to fire if it is enabled."
	input Toggle(void) : "Toggle the relay between enabled and disabled."
	input CancelPending(void) : "Cancel any events fired by this relay that are currently pending in the I/O event queue."
	
	// Outputs
	output OnSpawn(void) : "Fired when the relay is spawned. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
	output OnTrigger(void) : "Fired when the relay is triggered. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
]

@PointClass base(Targetname,Parentname,Angles,PTeamNum) studio("models/editor/cone_helper.mdl") sphere(SplashRadius) = tf_point_weapon_mimic : "An entity that shoots like player weapons."
[
	WeaponType(choices) : "Weapon Type" : 0 : "Which projectiles to fire." =
	[
		0 : "Rockets"
		1 : "Grenades"
		2 : "Arrows"
		3 : "Stickies"
	]

	FireSound(sound)		: "Fire Sound"		: ""	: "The sound to be played when we fired."
	ParticleEffect(string)	: "Particle Effect"	: ""	: "The particle effect to be played when we fired."
	ModelOverride(studio)	: "Model Override"	: ""	: "The model to apply onto projectiles we fire."
	ModelScale(float)		: "Model Scale"		: "1"	: "Scale for the projectile model."
	SpeedMin(float)			: "Minimum Speed"	: "1000": "Minimum speed for each projectile."
	SpeedMax(float)			: "Maximum Speed"	: "1000": "Maximum speed for each projectile."
	Damage(float)			: "Damage"			: "75"	: "Damage for the projectile."
	SplashRadius(float)		: "Splash Radius"	: "50"	: "Splash radius for the projectile."
	SpreadAngle(float)		: "Spread Angle"	: "0"	: "Random spread for each projectile fired."
	Crits(choices) : "Always Crits" : 0 : "All shots are crits." =
	[
		0 : "No"
		1 : "Yes"
	]

	input FireOnce(void)			: "Fire once."
	input FireMultiple(integer)		: "Fire multiple projectiles at once."
	input DetonateStickies(void)	: "Detonate stickies."
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_point_nav_interface") = tf_point_nav_interface : "Entity interface to the TF nav mesh."
[
	input RecomputeBlockers(void)	: "Recompute blocks in the nav mesh.  Call this after blockers change state (ie. a door opens or closes)."
]

@PointClass base(Targetname) iconsprite("editor-puddy/point_populator_interface") = point_populator_interface : "Entity interface to the populator."
[
	input PauseBotSpawning(void)	: "Pause the spawning of all bots."
	input UnpauseBotSpawning(void)	: "Resume spawning of all bots."
	input ChangeBotAttributes(string)	: "All bots with matching event name will apply the attribute changes."
	input ChangeDefaultEventAttributes(string)	: "Change default event name to spawn bots. The default name is Default"
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_holiday") = tf_logic_holiday : "Holiday Entity. This is used to detect a holiday map."
[	
	holiday_type(choices) : "Holiday" : 1 =
	[
		1 : "None"
		2 : "Halloween"
		3 : "Birthday"
		4 : "Christmas"
		5 : "End of the Line"
		6 : "Community Update (???)"
		7 : "Valentines Day"
		8 : "Meet the Pyro"
		9 : "Spy vs Engineer WAR (Unused)"
		10 : "Full Moon"
		11 : "Halloween or Full Moon"
		12 : "Halloween or Full Moon or Valentines Day"
		13 : "April Fools"
		14 : "Rick MAY"
	]

	tauntInHell(choices) : "Taunt In Hell" : 0 : "Should players taunt when teleported to Hell." =
	[
		0 : "No"
		1 : "Yes"
	]

	allowHaunting(choices) : "Haunting" : 0 : "Allow Wheel of Doom haunting." =
	[
		0 : "No"
		1 : "Yes"
	]

	input HalloweenSetUsingSpells(integer) : "Disable/Enable spells for this map. Only works on Halloween maps. (0 disable, 1 enable)"
	input Halloween2013TeleportToHell(string) : "Teleport all players to hell."
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_on_holiday") = tf_logic_on_holiday :
	"This entity allows you execute map actions on holidays. Will send all relevant outputs every time the Fire input is called."
[
	input Fire(void) : "Cause one or more appropriate outputs to fire."
	output IsNothing(void) : ""
	output IsTFBirthday(void) : ""
	output IsHalloween(void) : ""
	output IsSmissmas(void) : ""
	output IsValentines(void) : ""
	output IsFullMoon(void) : ""
	output IsAprilFools(void) : ""
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_competitive") = tf_logic_competitive : 	"Logic specifically for competitive mode."
[	
	output OnSpawnRoomDoorsShouldLock(void)	: "Game rules is saying that we should now disable (home) spawn door triggers."
	output OnSpawnRoomDoorsShouldUnlock(void)	: "Game rules is saying that we should now enable (home) spawn door triggers."
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_cp_timer") = tf_logic_cp_timer : "Control Point Timer Entity."
[	
	controlpoint(target_destination) : "Control Point" : : "The team_control_point associated with this timer."
	timer_length(integer) : "Timer length (in seconds)" : 60 : "Length of the timer that runs when the control point becomes available for capture."
	
	// Outputs
	output OnCountdownStart(void) : "Sent when the timer starts."
	output OnCountdown15SecRemain(void) : "Sent when 15 seconds remain."	
	output OnCountdown10SecRemain(void) : "Sent when 10 seconds remain."
	output OnCountdown5SecRemain(void) : "Sent when 5 seconds remain."
	output OnCountdownEnd(void) : "Sent when the timer expires and the point is not being captured."	

	input RoundSpawn(void) : ""
]

@PointClass base(Targetname) iconsprite("editor-puddy/entity_spawn_manager") = entity_spawn_manager : "An entity that spawns stuff at spawn points."
[
	entity_name(string) : "Entity Name" : "" : "Name of the entity class we are supposed to spawn."
	entity_count(integer) : "Count" : 0 : "Max number of entities to have spawned at one time, if points are available."
	respawn_time(integer) : "Respawn Time" : 0 : "Time to wait before we spawn a new entity when one is destroyed."
	drop_to_ground(choices) : "Drop to Ground" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	random_rotation(choices) : "Random Rotation" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
]

@PointClass base(Targetname) iconsprite("editor-puddy/game_forcerespawn") = game_forcerespawn :
	"Removes buildings, grenades, etc., from the world and forces all players to respawn " +
	"(without being killed)."
[
	// Inputs
	input ForceRespawn(void) : "Force players to respawn and remove buildings, grenades, etc., from the world.."
	input ForceRespawnSwitchTeams(void) : "Switch all players to the opposite team, and then respawn all players (and remove buildings, grenades, etc., from the world)."
	input ForceTeamRespawn(integer) : "Force players on a specific team to respawn. 2 for Red, 3 for Blue. This does NOT remove buildings, grenades, etc., from the world..."
	
	// Outputs
	output OnForceRespawn(void) : "Sent when the entity respawns the players."	
]


@PointClass base(Targetname, Parentname, PGameType, PTeamNum, EnableDisable, Angles) studio("models/flag/briefcase.mdl") = item_teamflag : "Team Fortress flag entity."
[
	ReturnTime(integer) : "Return time (in seconds)" : 60 : "Length of time (in seconds) before dropped flag/intelligence returns to base."
	
	NeutralType(choices) : "Neutral flag (Invade)" : 1 : "Only used for the Invade game type. When should a dropped Invade flag become neutral?" =
	[
		0 : "Never"
		1 : "Default (30 seconds)"
		2 : "Half of the Return Time."
	] 
	
	ScoringType(choices) : "Scoring style (Invade)" : 0 : "Only used for the Invade game type. When the Invade flag is captured, how should the team be rewarded? 'Score' is the team score in the scoreboard. 'Capture count' is the team capture count used in the HUD." =
	[
		0 : "Increment score"
		1 : "Increment capture count"
	] 
	
	flag_model(studio) : "Model" : "models/flag/briefcase.mdl" : "The model to be used for this entity."
	flag_icon(sprite) : "Icon" : "../hud/objectives_flagpanel_carried" : "The icons used for the HUD in some game modes. Format: materials/vgui/[materialname]_red and materials/vgui/[materialname]_blue"
	flag_paper(string) : "Paper Particle" : "player_intel_papertrail" : "Particle effect used for the falling paper trail."
	flag_trail(sprite) : "Trail Effect" : "flagtrail" : "Materials used for the trail effect. Format: materials/effects/[materialname]_red and materials/effects/[materialname]_blu"

	trail_effect(choices) : "Use Trail Effect" : 1 : "Use trail effect when the player is carrying the flag." =
	[
		0 : "None"
		1 : "All Effects"
		2 : "Paper Trail Only"
		3 : "Color Trail Only"
	]

	VisibleWhenDisabled(choices) : "Visible When Disabled" : 0 : "Flag appears semitransparent when disabled." =
	[
		0 : "No"
		1 : "Yes"
	]

	ShotClockMode(choices) : "Shot Clock Mode" : 0 : "Flag uses shot-clock mode, which means that the timer doesn't reset to the full time when an attacking player touches it." =
	[
		0 : "No"
		1 : "Yes"
	]

	PointValue(integer) : "Point Value" : 0 : "Player Destruction or Robot Destruction mode: Point value of this flag pickup."

	ReturnBetweenWaves(choices) : "Return Between Waves" : 1 : "Used only for MvM mode. Determines if the flag should return home between waves." =
	[
		0 : "No"
		1 : "Yes"
	]

	tags(string) : "tags" : "" : "Tags used for the AI bomb carrier to avoid nav areas that have matching tags. Tags need to be separated by empty space."

	// Inputs
	input ForceDrop(void) : "Force the flag to be dropped if it's being carried by a player."
	input ForceReset(void) : "Force the flag to be dropped if it's being carried by a player, then reset the flag to its original location."
	input ForceResetSilent(void) : "Force the flag to be dropped if it's being carried by a player, then reset the flag to its original location silently (no messages sent to players)."
	input ForceResetAndDisableSilent(void) : "Force the flag to be dropped if it's being carried by a player, and disable the flag, then reset the flag to its original location silently (no messages sent to players)."
	input SetReturnTime(integer) : "Set the length of time (in seconds) before dropped flag/intelligence returns to base."
	input ShowTimer(integer) : "Show a visible timer (in seconds)."
	input ForceGlowDisabled(integer) : "Forcably block the glow effect for this flag. 1 = glow blocked, 0 = normal behavior"

	input RoundActivate(void) : "Force the flag to be dropped if it's being carried by a player, then reset the flag to its original location AND reset to its Default."

	// Outputs
	output OnReturn(void)  : "Sent when the flag is returned via timer."
	output OnPickup(void)  : "Sent when the flag is picked up."
	output OnPickupTeam1(void) : "Sent when the flag is picked up by RED."
	output OnPickupTeam2(void) : "Sent when the flag is picked up by BLU."
	output OnDrop(void)    : "Sent when the flag is dropped."
	output OnCapture(void) : "Sent when the flag is captured."
	output OnCapTeam1(void) : "Sent when the flag is captured by RED."
	output OnCapTeam2(void) : "Sent when the flag is captured by BLU."
	output OnTouchSameTeam(void) : "Sent when the flag is touched by a player on the same team (BLU player touches BLU flag, RED player touches RED flag)."
]


@PointClass base(Targetname, PTeamNum, Angles, EnableDisable, Parentname) studioprop("models/editor/camera.mdl") = info_observer_point :
	"Observer Point"
[
	associated_team_entity(target_destination) : "Associated Team Entity" : "" : "An entity associated with this point that can be owned by a team (such as a flag or control point). Players will only be able to use this observer point if their team owns the associated team entity."
	
	defaultwelcome(choices) : "Welcome Point" : 0 :  "This marks this point as a welcome point. Players use this when connectig to servers the first time." =
	[
		0 : "No"
		1 : "Yes"
	]

	fov(float) : "FOV" : 0

	match_summary(choices) : "Match Summary" : 0 :  "Marks this point as a camera for the match summary." =
	[
		0 : "No"
		1 : "Yes"
	]
]

//@PointClass base(Targetname,Parentname,Angles) size(-1 128 -1, 1 1 -8) iconsprite("editor-puddy/wheel_of_doom") = wheel_of_doom : "Wheel of Fate"
@PointClass base(Targetname,Parentname,Angles) iconsprite("editor-puddy/wheel_of_doom") = wheel_of_doom : "Wheel of Fate"
[
	input Spin(void) : "Spin the wheel."
	input ClearAllEffects(void) : "Remove all active effects."

	output OnEffectApplied(void) : "Effect just applied."
	output OnEffectExpired(void) : "Effect just expired."

	effect_duration(float) : "Effect Duration" : 30 : "How long effects should last before they are automatically removed."
	has_spiral(choices) : "Has Spiral" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

]

@PointClass base(Targetname, Angles) iconsprite("editor-puddy/env_sun") color(255 0 0) = env_sun : 
	"An entity to draw a sun effect in the sky."
[
	target(target_destination) : "Viewer entity" : : "Name of an entity used to determine where the sun is in the skybox. The sun should be lined up on a line from this entity to the env_sun entity."
	
	use_angles(choices) : "UseAngles" : 0 : "The old way to orient env_sun is to point it at a target. The new way is to specify the angles. If you use the new way, set this property to YES." = 
	[
		0 : "No"
		1 : "Yes"
	]

	pitch(integer) : "Pitch" : 0

	rendercolor(color255) : "Sun Color (R G B)" : "100 80 80"
	overlaycolor(color255) : "Overlay Color (R G B)" : "0 0 0" : "A value of 0 0 0 will act the old way."
	
	size(integer) : "Size" : 16
	overlaysize(integer) : "Overlay Size" : -1 : "A value of -1 means the overlay will act the old way."
	
	material(sprite) : "Material Name" : "sprites/light_glow02_add_noz" : "Material of the inner glow."
	overlaymaterial(sprite) : "Overlay Material Name" : "sprites/light_glow02_add_noz" : "Material of the overlay glow."

	HDRColorScale(float) : "HDR color scale." : "1.0" : "float value to multiply sprite color by when running in HDR mode."

	// Inputs
	input TurnOn(void) : "Enable sun rendering."
	input TurnOff(void) : "Disable sun rendering."
	input SetColor(color255) : "Change the sun's color. Format: <Red 0-255> <Green 0-255> <Blue 0-255>"
]

@PointClass base(Targetname,Origin,Angles) studio("models/props_halloween/gargoyle_backpack.mdl") = tf_halloween_gift_spawn_location : "Halloween Gift Spawn Locations"
[
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_koth") = tf_logic_koth : "King of the Hill Entity. This is used to detect a KOTH map."
[	
	timer_length(integer) : "Timer length (in seconds)" : 180 : "Initial timer length for each team."
	unlock_point(integer) : "Unlock Point (in seconds)" : 30 : "Time to wait before unlocking the point in CP KOTH maps."

	input SetRedTimer(integer)	:	"Set the time remaining for the RED timer."
	input SetBlueTimer(integer)	:	"Set the time remaining for the BLUE timer."
	input AddRedTimer(integer)	:	"Add time to the RED timer."
	input AddBlueTimer(integer)	:	"Add time to the BLUE timer."

	input RoundActivate(void)	:	"Find control points and its master."
	input RoundSpawn(void) : "Create new team_round_timer entities for both team."
]


@PointClass base(Targetname, PTeamNum, EnableDisable) iconsprite("editor-puddy/team_train_watcher") = team_train_watcher :
	"Entity that tracks the train progress through train escort maps"
[
	train(target_destination) : "Train to watch."
	train_can_recede(choices) : "Can the train recede?" : 1 : "Used to hide the HUD countdown." = 
	[
		1 : "Yes"
		0 : "No"
	]
	
	train_recede_time(integer) : "Train recede time (in seconds)" : 0 : "Length of time before the train begins to recede. 0 = use TF2 default setting of 30 seconds."
	
	handle_train_movement(choices) : "Handle train movement?" : 0 : "Should the train watcher handle all train movement?" = 
	[
		1 : "Yes"
		0 : "No"
	]
	
	speed_forward_modifier(float) : "Speed Forward Modifier" : 1 : "Applies the given modifier to all forward speeds. Only used if the watcher is handling the train movement. [0, 1]"
	
	env_spark_name(string) : "Train spark sprites" : "" : "Name of the env_spark entities used under the train for backward movement. They should all have the same entity name. Only used if the watcher is handling the train movement."
	
	start_node(target_destination) : "Node that the path starts at."
	goal_node(target_destination) : "Node that the path ends at."
	
	linked_pathtrack_1(target_destination) : "Linked PathTrack 1"
	linked_cp_1(target_destination) : "Linked CP 1"
	
	linked_pathtrack_2(target_destination) : "Linked PathTrack 2"
	linked_cp_2(target_destination) : "Linked CP 2"
	
	linked_pathtrack_3(target_destination) : "Linked PathTrack 3"
	linked_cp_3(target_destination) : "Linked CP 3"
	
	linked_pathtrack_4(target_destination) : "Linked PathTrack 4"
	linked_cp_4(target_destination) : "Linked CP 4"
	
	linked_pathtrack_5(target_destination) : "Linked PathTrack 5"
	linked_cp_5(target_destination) : "Linked CP 5"
	
	linked_pathtrack_6(target_destination) : "Linked PathTrack 6"
	linked_cp_6(target_destination) : "Linked CP 6"
	
	linked_pathtrack_7(target_destination) : "Linked PathTrack 7"
	linked_cp_7(target_destination) : "Linked CP 7"
	
	linked_pathtrack_8(target_destination) : "Linked PathTrack 8"
	linked_cp_8(target_destination) : "Linked CP 8"
		
	hud_min_speed_level_1(float) : "Min Speed for Speed Level 1" : 30
	hud_min_speed_level_2(float) : "Min Speed for Speed Level 2" : 60
	hud_min_speed_level_3(float) : "Min Speed for Speed Level 3" : 90
	
	// Inputs
	input SetNumTrainCappers(integer) : "Set Number of players capping the train"
	input SetSpeedForwardModifier(float) : "Set the speed forward modifier. Only used if the watcher is handling the train movement. [0, 1]"
	input SetTrainRecedeTime(integer) : "Set the number of seconds before the train starts to recede."
	input SetTrainCanRecede(bool) : "Determines whether or not the train can recede."
	input SetTrainRecedeTimeAndUpdate(integer) : "Set the number of seconds before the train starts to recede and update the current recede time."

	input RoundActivate(void) : "Stop final alarm AND reactivate watcher"

	// Outputs
	output OnTrainStartRecede(void)   : "Sent when the train should start receding"
]

@PointClass base(TwoObjectPhysics,Angles) studio("models/editor/axis_helper.mdl") = phys_constraint : 
	"A constraint that keeps the relative position and orientation of two objects fixed."
[
]

@PointClass base(Targetname, EnableDisable) iconsprite("editor-puddy/tf_glow") = tf_glow
[
	target(target_destination) : "Target" : : "ONE TARGET ONLY"
	GlowColor(color255) : "Glow Color" : "255 0 0 255" : "<r> <g> <b> <a> 0-255"
	Mode(choices) : "Visibility Mode" : 0 : "When the glow should be visible" =
	[
		0 : "Always"
		1 : "Only when model is occluded"
		2 : "Only when model is visible"
	]
	input SetGlowColor(color255) : "<r> <g> <b> <a> 0-255"
]

@PointClass base(Targetname,Parentname,PBaseObject) iconsprite("editor-puddy/mapobj_cart_dispenser") = mapobj_cart_dispenser : 
	"TF2 Dispenser" 
[
	spawnflags(flags) =
	[
		4: "Ignore line of sight check" : 1
		8: "Don't heal disguised/stealthed spies" : 1
	]
	
	touch_trigger(target_destination) : "Custom Touch Trigger"
	
	input FireHalloweenBonus(integer) : "Trigger bonus effect on players near this dispenser"
	input SetDispenserLevel(integer) : "Set the dispenser level: 1, 2, or 3"
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
]

@PointClass base(Targetname,PBaseObject) iconsprite("editor-puddy/pd_dispenser") = pd_dispenser : 
	"Player Destruction Leader Dispenser" 
[
	spawnflags(flags) =
	[
		4: "Ignore line of sight check" : 1
		8: "Don't heal disguised/stealthed spies" : 1
	]
	
	touch_trigger(target_destination) : "Custom Touch Trigger"
	
	input FireHalloweenBonus(integer) : "Trigger bonus effect on players near this dispenser"
	input SetDispenserLevel(integer) : "Set the dispenser level: 1, 2, or 3"
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
	input Show(void) : "Show the Dispenser."
	input Hide(void) : "Hide the Dispenser."
]


@PointClass base(Targetname,Parentname,PBaseObject) iconsprite("editor-puddy/rd_robot_dispenser") = rd_robot_dispenser : 
	"Robot Destruction Robot Dispenser Level 0.5" 
[
	spawnflags(flags) =
	[
		4: "Ignore line of sight check" : 1
		8: "Don't heal disguised/stealthed spies" : 1
	]
	
	touch_trigger(target_destination) : "Custom Touch Trigger"
	
	input FireHalloweenBonus(integer) : "Trigger bonus effect on players near this dispenser"
	input SetDispenserLevel(integer) : "Set the dispenser level: 1, 2, or 3"
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
]

@PointClass base(Targetname, Parentname, Angles, PTeamNum, Studiomodel, DamageFilter) iconsprite("editor-puddy/base_boss") = base_boss : "A Basic Boss"
[
	health(integer) : "Boss' starting health" : 1000 : "The Boss' starting health."
	model(studio) : "Model" : "models/bots/boss_bot/boss_tank.mdl" : "The model to be used for this entity." 
	speed(float) : "Boss' max movement speed" : 75 : "Boss' max movement speed"

	start_disabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	input Enable(void) : "Enable the Boss"
	input Disable(void) : "Disable the Boss"
	input SetSpeed(float) : "Change the speed of the Boss"
	input SetHealth(integer) : "Set this boss's health."
	input SetMaxHealth(integer) : "Set this boss's Max health."
	input AddHealth(integer) : "Add health to this boss"
	input RemoveHealth(integer) : "Remove health from this boss"

	// Outputs
	output OnHealthBelow90Percent(void) : "Sent when the Boss' health drops below 90 percent."
	output OnHealthBelow80Percent(void) : "Sent when the Boss' health drops below 80 percent."
	output OnHealthBelow70Percent(void) : "Sent when the Boss' health drops below 70 percent."
	output OnHealthBelow60Percent(void) : "Sent when the Boss' health drops below 60 percent."
	output OnHealthBelow50Percent(void) : "Sent when the Boss' health drops below 50 percent."
	output OnHealthBelow40Percent(void) : "Sent when the Boss' health drops below 40 percent."
	output OnHealthBelow30Percent(void) : "Sent when the Boss' health drops below 30 percent."
	output OnHealthBelow20Percent(void) : "Sent when the Boss' health drops below 20 percent."
	output OnHealthBelow10Percent(void) : "Sent when the Boss' health drops below 10 percent."
	
	output OnKilled(void) : "Sent when the Boss is killed."
]


@PointClass base(base_boss) studio("models/bots/boss_bot/static_boss_tank.mdl") = tank_boss : "Tank Boss"
[
	input DestroyIfAtCapturePoint(integer) : "Destroy If At CapturePoint"
	input AddCaptureDestroyPostfix(string) : "Set the postfix for the destroy animation when it's at the capture point"
]

@PointClass base(Targetname, Angles, RenderFields) studio("models/bots/boss_bot/boss_tank_part1_destruction.mdl") = tank_destruction : "Tank Boss Destruction Animation"
[
	modelscale(float) : "Model Scale" : "1.0" : "A multiplier for the size of the model."
]

@PointClass base(Targetname, Angles, RenderFields) studio("models/bots/merasmus/merasmus.mdl") = merasmus_dancer : "Dancing Merasmus Animation"
[
	modelscale(float) : "Model Scale" : "1.0" : "A multiplier for the size of the model."
]

@PointClass color(0 0 200) base(PItem) studio("models/bots/bot_worker/bot_worker_powercore.mdl") sphere(fademindist) sphere(fademaxdist) = item_bonuspack : "Robot Destruction Core"
[
	skin(integer) : "Skin" : 0 : "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin instead of the default."

	spawnflags(flags) = 
	[
		1073741824: "Never Respawn" : 1
	]
]

@PointClass color(0 0 255) size(-1 -1 -64, 1 1 -8) sidelist(sides) iconsprite("editor/env_cubemap.vmt") = env_cubemap : 
	"An entity that creates a sample point for the Cubic Environment Map."
[
	cubemapsize(choices) : "Cubemap Size" : 0 =
	[
		0 : "Default"
		1 : "1x1"
		2 : "2x2"
		3 : "4x4"
		4 : "8x8"
		5 : "16x16"
		6 : "32x32"
		7 : "64x64"
		8 : "128x128"
		9 : "256x256"
	]
	sides(sidelist) : "Brush faces": : "(Optional) Brushes faces to directly attach to the env_cubemap. Press Pick then click on faces in the 3D View to select them. Use CTRL while clicking to add or remove from the selection."
]

@PointClass base(Targetname,Parentname) sphere() size(-1 -1 -64, 1 1 -8) sidelist() iconsprite("editor/env_soundscape.vmt") = env_soundscape_proxy : 
	"An entity that acts like a soundscape but gets all of its sound parameters from another env_soundscape entity."
[
	MainSoundscapeName(target_destination) : "Soundscape Entity" : "" : "The soundscape to get all sound parameters from."

	radius(integer) : "Radius" : 128					// NEEDHELP: The datadesc doesn't include this entry. Probably not used.
]


@PointClass base(Angles) = sky_camera : 
	"An entity used to control the 3D Skybox. Its origin is used to determine the 3D Skybox's position relative to the map. Place this entity, in the 3D Skybox, at the point where the origin of the map should be."
[
	scale(integer) : "3D Skybox scale" : 16 : "Scale of the skybox."
	fogenable(choices) : "Fog Enable" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	fogblend(choices) : "Fog Blend" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	use_angles(choices) : "Use Angles for Fog Dir" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	fogcolor(color255) : "Primary Fog Color" : "255 255 255"
	fogcolor2(color255) : "Secondary Fog Color" : "255 255 255"
	fogdir(string) : "Primary Fog Dir" : "1 0 0"
	fogstart(string) : "Fog Start" : "500.0" : "Distance at which the skybox fog should start."
	fogend(string) : "Fog End" : "2000.0" : "Distance at which the skybox fog should be fully opaque."
	fogmaxdensity(float) : "Fog Max Density [0..1]" : "1"
]

@PointClass base(Targetname,Parentname,EnableDisable) sphere() iconsprite("editor/env_soundscape.vmt") line(255 255 255, targetname, position0) line(255 255 255, targetname, position1) line(255 255 255, targetname, position2) line(255 255 255, targetname, position3) line(255 255 255, targetname, position4) line(255 255 255, targetname, position5) line(255 255 255, targetname, position6) line(255 255 255, targetname, position7) = env_soundscape : 
	"An entity to control sound in an area. The active soundscape at any time is the last one that had line-of-sight to the player, and was within the radius."
[
	radius(integer) : "Radius" : 128 : "If set to -1, then the player can hear the soundscape as long as he can see it (regardless of distance to it)."
	soundscape(choices) : "Soundscape" : "Nothing" : "The name of the soundscape to use. Corresponds to an entry in the soundscapes*.txt file in the hl2\scripts directory." =
	[
		"Nothing" : "Nothing"
		"Automatic" : "Automatic"
		"Automatic_Dialog" : "Automatic (dialog)"
		"GenericIndoor" : "Indoor"
		"GenericOutdoor" : "Outdoor"
		"tf2.general_ambient" : "tf2.general_ambient"
		"tf2.respawn_room" : "tf2.respawn_room"
		"2fort.Underground" : "2fort.Underground"
		"2fort.Underground2" : "2fort.Underground2"
		"2fort.OutdoorPond" : "2fort.OutdoorPond"
		"2fort.OutdoorFort" : "2fort.OutdoorFort"
		"2fort.Indoor" : "2fort.Indoor"
		"Badlands.Inside" : "Badlands.Inside"
		"Badlands.Outside" : "Badlands.Outside"
		"Badlands.OutsideInterior" : "Badlands.OutsideInterior"
		"barnblitz.inside" : "barnblitz.inside"
		"barnblitz.outside" : "barnblitz.outside"
		"CactusV.Inside" : "CactusV.Inside (Decoy)"
		"CactusV.RespawnA" : "CactusV.RespawnA (Decoy)"
		"CactusV.Outside" : "CactusV.Outside (Decoy)"
		"Chariots.Inside" : "Chariots.Inside (Pipeline)"
		"Chariots.Outside" : "Chariots.Outside (Pipeline)"
		"Deathpit.Inside" : "Deathpit.Inside (Coaltown)"
		"Deathpit.RespawnA" : "Deathpit.RespawnA (Coaltown)"
		"Deathpit.Outside" : "Deathpit.Outside (Coaltown)"
		"DoubleCross.Inside" : "DoubleCross.Inside"
		"DoubleCross.Outside" : "DoubleCross.Outside"
		"Dustbowl.Indoors" : "Dustbowl.Indoors"
		"Dustbowl.Outdoors" : "Dustbowl.Outdoors"
		"Egypt.Indoor" : "Egypt.Indoor"
		"Egypt.Outdoor" : "Egypt.Outdoor"
		"Goldrush.DeepInside" : "Goldrush.DeepInside"
		"Goldrush.Outside" : "Goldrush.Outside"
		"Goldrush.Inside" : "Goldrush.Inside"
		"Gorge.Inside" : "Gorge.Inside"
		"Gorge.Outside" : "Gorge.Outside"
		"Granary.Outside" : "Granary.Outside"
		"GravelPit.Outside" : "GravelPit.Outside"
		"Halloween.Inside" : "Halloween.Inside"
		"Halloween.Outside" : "Halloween.Outside"
		"Halloween.Underworld" : "Halloween.Underworld"
		"Halloween.hell" : "Halloween.hell"
		"harbor.inside_blue_spawn_01" : "harbor.inside_blue_spawn_01 (Foundry)"
		"harbor.inside_blue_hq" : "harbor.inside_blue_hq (Foundry)"
		"harbor.indoor_blue_fuel" : "harbor.indoor_blue_fuel (Foundry)"
		"harbor.outdoor_blue" : "harbor.outdoor_blue (Foundry)"
		"harbor.inside_red_spawn_01" : "harbor.inside_red_spawn_01 (Foundry)"
		"harbor.inside_red_hq" : "harbor.inside_red_hq (Foundry)"
		"harbor.indoor_red_fuel" : "harbor.indoor_red_fuel (Foundry)"
		"harbor.outdoor_red" : "harbor.outdoor_red (Foundry)"
		"harbor.outdoor_central" : "harbor.outdoor_central (Foundry)"
		"HighTower.Inside" : "HighTower.Inside"
		"HighTower.Outside" : "HighTower.Outside"
		"Hydro.Outside" : "Hydro.Outside"
		"Lakeside.Cave" : "Lakeside.Cave"
		"Lakeside.Inside" : "Lakeside.Inside"
		"Lakeside.Lake" : "Lakeside.Lake"
		"Lakeside.Outside" : "Lakeside.Outside"
		"Lakeside.Temple" : "Lakeside.Temple"
		"Lakeside.Wood" : "Lakeside.Wood"
		"Lumberyard.Inside" : "Lumberyard.Inside"
		"Lumberyard.Outside" : "Lumberyard.Outside"
		"Mannworks.InsideCellars" : "Mannworks.InsideCellars"
		"Mannworks.InsideWood" : "Mannworks.InsideWood"
		"Mannworks.Outside" : "Mannworks.Outside"
		"Mannworks.Respawn" : "Mannworks.Respawn"
		"Medieval.Inside" : "Medieval.Inside"
		"Medieval.Outside" : "Medieval.Outside"
		"mountainlab.Bluspawn" : "mountainlab.Bluspawn"
		"mountainlab.Cpoint" : "mountainlab.Cpoint"
		"mountainlab.Inside" : "mountainlab.Inside"
		"mountainlab.Outside1" : "mountainlab.Outside1"
		"Nightfall.Cavern" : "Nightfall.Cavern"
		"Nightfall.Indoors" : "Nightfall.Indoors"
		"Nightfall.Outdoors" : "Nightfall.Outdoors"
		"Nucleus.Inside" : "Nucleus.Inside"
		"Nucleus.Outside" : "Nucleus.Outside"
		"Ravine.Inside" : "Ravine.Inside"
		"Ravine.Outside" : "Ravine.Outside"
		"Rottenburg.Alcove" : "Rottenburg.Alcove"
		"Rottenburg.Clearing" : "Rottenburg.Clearing"
		"Rottenburg.Spawn" : "Rottenburg.Spawn"
		"Rottenburg.Town" : "Rottenburg.Town"
		"Sawmill.Inside" : "Sawmill.Inside"
		"Sawmill.InsideNoLights" : "Sawmill.InsideNoLights"
		"Sawmill.InsideWaterfall" : "Sawmill.InsideWaterfall"
		"Sawmill.Outside" : "Sawmill.Outside"
		"soho_generic" : "soho_generic (Kong King)"
		"soho_indoor" : "soho_indoor (Kong King)"
		"soho_square" : "soho_square (Kong King)"
		"underground_soho" : "underground_soho (Kong King)"
		"stormfront.Underground" : "stormfront.Underground (Coldfront)"
		"stormfront.Outside" : "stormfront.Outside (Coldfront)"
		"ThunderMountain.Inside" : "ThunderMountain.Inside"
		"ThunderMountain.Outside" : "ThunderMountain.Outside"
		"Upward.Inside" : "Upward.Inside"
		"Upward.Outside" : "Upward.Outside"
		"Viaduct.Inside" : "Viaduct.Inside"
		"Viaduct.Outside" : "Viaduct.Outside"
		"warehouse.inside_boilers" : "warehouse.inside_boilers (Mannhattan)"
		"warehouse.inside_mainhall" : "warehouse.inside_mainhall (Mannhattan)"
		"warehouse.inside_spawn_foyer" : "warehouse.inside_spawn_foyer (Mannhattan)"
		"warehouse.inside_spawn_int" : "warehouse.inside_spawn_int (Mannhattan)"
		"warehouse.outside" : "warehouse.outside"
		"Well.DeepInside" : "Well.DeepInside"
		"Well.Inside" : "Well.Inside"
		"Well.Outside" : "Well.Outside"
		"Powerhouse.Inside" : "Powerhouse.Inside"
		"Powerhouse.InsideRed" : "Powerhouse.InsideRed"
		"Powerhouse.InsideBlue" : "Powerhouse.InsideBlue"
		"Powerhouse.Transition" : "Powerhouse.Transition"
		"Powerhouse.Outside" : "Powerhouse.Outside"
		"Hellfire.Inside" : "Hellfire.Inside"
		"Hellfire.OutsideCovered" : "Hellfire.OutsideCovered"
		"Hellfire.Outside" : "Hellfire.Outside"
		"Lair.VisitorsCenterSpawnBlue" : "Lair.VisitorsCenterSpawnBlue (Mecenary Park)"
		"Lair.Cap1SpawnBlue" : "Lair.Cap1SpawnBlue (Mecenary Park)"
		"Lair.Jungle" : "Lair.Jungle (Mecenary Park)"
		"Lair.JungleLight" : "Lair.JungleLight (Mecenary Park)"
		"Lair.JungleUnderground" : "Lair.JungleUnderground (Mecenary Park)"
		"Lair.JungleCap1InteriorTransition" : "Lair.JungleCap1InteriorTransition (Mecenary Park)"
		"Lair.Cap1" : "Lair.Cap1 (Mecenary Park)"
		"Lair.Cap1Cap2Transition" : "Lair.Cap1Cap2Transition (Mecenary Park)"
		"Lair.Cap2SpawnBlue" : "Lair.Cap2SpawnBlue (Mecenary Park)"
		"Lair.Cap2SpawnRed" : "Lair.Cap2SpawnRed (Mecenary Park)"
		"Lair.Cap2" : "Lair.Cap2 (Mecenary Park)"
		"Lair.Cap3Vista" : "Lair.Cap3Vista (Mecenary Park)"
		"Lair.Cap3Duct" : "Lair.Cap3Duct (Mecenary Park)"
		"Lair.Cap3Inside" : "Lair.Cap3Inside (Mecenary Park)"
		"Lair.Cap3" : "Lair.Cap3 (Mecenary Park)"
		"Lair.Cap3SpawnRed" : "Lair.Cap3SpawnRed (Mecenary Park)"
		
	]
	position0(target_destination) : "Sound Position 0" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position1(target_destination) : "Sound Position 1" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position2(target_destination) : "Sound Position 2" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position3(target_destination) : "Sound Position 3" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position4(target_destination) : "Sound Position 4" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position5(target_destination) : "Sound Position 5" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position6(target_destination) : "Sound Position 6" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."
	position7(target_destination) : "Sound Position 7" : "" : "A sound position that will be referenced inside the soundscape text file. Usually used to position a set of sounds within the world."

	// Inputs
	input Enable(void) : "Enable the soundscape."
	input Disabled(void) : "Disable the soundscape."
	input ToggleEnabled(void) : "Toggle the soundscape enabled state."

	// Outputs
	output OnPlay(void) : "Fired when this soundscape becomes the active one."
]

//-------------------------------------------------------------------------
// Color correction control
//-------------------------------------------------------------------------

@PointClass base(Targetname, EnableDisable) sphere(minfalloff) sphere(maxfalloff) iconsprite("editor/color_correction") = color_correction : 
	"An entity to control the color correction in the map."
[
	minfalloff(float) : "Lookup Falloff Start Distance" : "-1"   : "This is the distance to the start of the falloff region (0.0 = default)"
	maxfalloff(float) : "Lookup Falloff End Distance"   : "-1" : "This is the distance to the end of the falloff region (200.0 =  default)"
	maxweight(float)  : "Maximum Weight"				: "1.0"   : "This is the maximum weight for this lookup"
	filename(choices)  : "Lookup Table Filename"			: ""	  : "This is the lookup table filename" =
	[
		"scripts/2fort_global.raw" : "2Fort"
		"scripts/well_global.raw" : "Well"
		"scripts/lakeside_event_global.raw" : "Ghost Fort"
		"scripts/underworld_hell01.raw" : "Hell (Helltower)"
		"scripts/pass_warehouse.raw" : "Brickyard"
	]
	fadeInDuration(float)   : "Lookup Fade In Duration"		: "0.0"	  : "Duration of fade in on when enabled."
	fadeOutDuration(float)   : "Lookup Fade out Duration"		: "0.0"	  : "Dration of fade out on when disabled."
	
	// Inputs
	input SetFadeInDuration(float) : "Sets the 'fadeInDuration' variable, used to fade cc lookup usage when entity is enabled."
	input SetFadeOutDuration(float) : "Sets the 'fadeOutDuration' variable, used to fade cc lookup usage when entity is disabled."
]


//-------------------------------------------------------------------------
// Color correction volume control
//-------------------------------------------------------------------------

@SolidClass base(Targetname, EnableDisable ) = color_correction_volume : 
	"An entity to control the color correction in the map."
[
	fadeDuration(float) : "Lookup Fade Duration"  : "10.0" : "This is the duration for the lookup to fade in/out on extry/exit"
	maxweight(float)    : "Maximum Weight"		  : "1.0"  : "This is the maximum weight for this lookup"
	filename(string)    : "Lookup Table Filename" : ""     : "This is the lookup table filename"
]

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/props_halloween/ghost.mdl") = ghost : "Ghost" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/bots/headless_hatman.mdl") = headless_hatman : "Horseless Headless Horsemann" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/props_halloween/halloween_demoeye.mdl") = eyeball_boss : "Monoculus" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/bots/merasmus/merasmus.mdl") = merasmus : "Merasmus" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/bots/skeleton_sniper/skeleton_sniper.mdl") = tf_zombie : "Skeleton" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/player/sniper.mdl") = bot_npc_archer : "Huntsman Sniper NextBot" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/humans/group01/female_01.mdl") = simple_bot : "Simple NextBot" []

@PointClass base(Targetname, Parentname, BaseNPC, Angles, EnableDisable, PTeamNum) studio("models/player/sniper.mdl") = bot_npc_decoy : "Shitty Spy NextBot" []

@PointClass base(Targetname) studio("models/items/ammopack_medium.mdl") = tf_ammo_pack : "Dropped AmmoPack"
[
	model(studio) : "Model" : "" : "Change the model to something other than the default model." 
]

@PointClass base(Targetname, Angles) studio("models/bots/skeleton_sniper/skeleton_sniper.mdl") = tf_zombie_spawner : "Entity that spawns Skeleton."
[
	zombie_scale(float) : "Skeleton Scale" : 1 : "Scale the Skeleton"
	zombie_lifetime(float) : "Skeleton Life Time" : 0 : "Skeleton life time in seconds. 0 means skeletons will stay alive until they're dead."
	max_zombies(integer) : "Skeleton Count" : 1 : "Number of skeletons this point can have active in the world."
	infinite_zombies(choices)		: "Infinite Spawn"		: 0	: "If Yes, keep spawning skeletons to have skeleton count in the world. If no, only spawn skeletons up to skeleton count." =
	[
		0 : "NO"
		1 : "Yes"
	]
	zombie_type(choices)		: "Skeleton Type"		: 0	: "Type of skeleton." =
	[
		0 : "NORMAL"
		1 : "SKELETON KING"
	]

	// Inputs
	input Enable(void) : "Enable zombie spawn point."
	input Disable(void) : "Disable zombie spawn point."
	input SetMaxActiveZombies(integer) : "Max number of zombies"
]

@PointClass base(Targetname,Parentname) iconsprite("editor-puddy/halloween_zapper") = halloween_zapper : 
	"Halloween Hell Zapper" 
[
	touch_trigger(target_destination) : "Custom Touch Trigger"
	ParticleEffect(string)	: "Particle Effect"	: ""	: "The particle effect to be played when we fired."
	ZapperType(choices) : "Zapper Type" : 0 : "Type of zapper." =
	[
		0 : "Zap on touch"
		1 : "Zap only on input"
	]

	input ZapTouching(void) : "Zap all touching players."
]

@PointClass base(Targetname) = hightower_teleport_vortex : "Halloween Vortex"
[
	target_base_name(string) : "Destination base name" : : "The base name of the destination.  (ie. If using 'hell_winner' and 'hell_loser', then 'hell' is the base name.)"
	lifetime(float) : "Lifetime" : 0 : "How long the portal should stay open"

	input SetAdvantageTeam(string) : "Set which team has the advantage."
	input SetModelScale(string) : "Scale of teleport box."
]

@PointClass base(Targetname, Studiomodel, RenderFields) = prop_soccer_ball : "Soccer Ball"
[
	trigger_name(string) : "Trigger Name" : "" : "The name of the trigger(s) to try and touch"
]


@PointClass base(PItem) studio("models/items/currencypack_large.mdl") = item_currencypack_large : "Large Credits Pickup" []

@PointClass base(PItem) studio("models/items/currencypack_medium.mdl") = item_currencypack_medium : "Medium Credits Pickup" []

@PointClass base(PItem) studio("models/items/currencypack_small.mdl") = item_currencypack_small : "Small Credits Pickup" []

@PointClass base(PItem) studio("models/items/currencypack_small.mdl") = item_currencypack_custom : "Custom Credits Pickup" []

@PointClass base(PItem) studio("models/items/medkit_medium.mdl") = item_healthammokit : "Small AmmoHealthPack Pickup" []

@PointClass base(PItem) studio("models/items/car_battery01.mdl") = item_armor : "Unused Armor" []

@PointClass base(PItem) studio("models/workshop/player/items/pyro/eotl_ducky/eotl_bonus_duck.mdl") = tf_bonus_duck_pickup : "EOTL Bonus Ducks"
[
	pickup_sound(sound) : "Sound Effect" : "" : "The sound script entry that is played when the item is picked up." 
	pickup_particle(string) : "Particle Effect" : "" : "The particle effect that is displayed when the item is picked up." 

	output OnRedPickup(void) : "Sent when Red picks-up the item."
	output OnBluePickup(void) : "Sent when Blue picks-up the item."
]

@PointClass base(PItem) studio("models/props_halloween/halloween_gift.mdl") = tf_halloween_gift_pickup : "Halloween Gift"
[
	pickup_sound(sound) : "Sound Effect" : "" : "The sound script entry that is played when the item is picked up." 
	pickup_particle(string) : "Particle Effect" : "" : "The particle effect that is displayed when the item is picked up." 

	output OnRedPickup(void) : "Sent when Red picks-up the item."
	output OnBluePickup(void) : "Sent when Blue picks-up the item."
]

@PointClass base(PItem) studio("models/items/medkit_large.mdl") sphere(fademindist) sphere(fademaxdist) = item_healthkit_full : "Health Kit Full" []
@PointClass base(PItem) studio("models/items/medkit_small.mdl") sphere(fademindist) sphere(fademaxdist) = item_healthkit_small :	"Health Kit Small" []
@PointClass base(PItem) studio("models/items/medkit_medium.mdl") sphere(fademindist) sphere(fademaxdist) = item_healthkit_medium : "Health Kit Medium" []

@PointClass base(PItem) studio("models/items/ammopack_large.mdl") sphere(fademindist) sphere(fademaxdist) = item_ammopack_full :	"Ammo Pack Full" []
@PointClass base(PItem) studio("models/items/ammopack_small.mdl") sphere(fademindist) sphere(fademaxdist) = item_ammopack_small : "Ammo Pack Small" []
@PointClass base(PItem) studio("models/items/ammopack_medium.mdl") sphere(fademindist) sphere(fademaxdist) = item_ammopack_medium : "Ammo Pack Medium" []

@PointClass base(Targetname, Angles) iconsprite("editor-puddy/training_annotation") = training_annotation : "Training Annotation"
[
	display_text(string) : "Displayed Text" : "<Add Text Here>" : "The text to be displayed in the annotation popup."
	lifetime(float) : "Lifetime" : 0 : "How long you want the annotation popup to stick around.  If set to 0, it will default to the value in code (1 sec).  If it set to -1, it will last forever."
	offset(float) : "Vertical Offset" : 0 : "The vertical offset"

	input Show(void) : "Show the annotation."
	input Hide(void) : "Hide the annotation."
]


@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/team_round_timer") = team_round_timer :
	"Round Timer. Timer starts paused by default."
[
	timer_length(integer) : "Timer length (in seconds)" : 600 : "Initial timer length."
	max_length(integer) : "Max timer length (in seconds)" : 0 : "Maximum timer length (0 = no max). This value is used to ensure the timer never goes above this value when SetTime and AddTime are used."
	
	start_paused(choices) : "Start paused" : 1 : "Should the timer start paused? (will need to send a Resume input to start the timer if this is set)." =
	[
		0 : "No"
		1 : "Yes"
	]

	show_time_remaining(choices) : "Count Direction" : 1 : "Use this to reverse the timer and have it count from 0 up to the timer length. Sounds and outputs still fire like normal. For example, on a count-up timer with a length of 90 seconds, when it reaches 60 the announcer will say '30 seconds remaining', however, the On30SecRemaining output will fire when the visual timer reaches 61." =
	[
		0 : "Up" // reverse
		1 : "Down"
	]
	
	setup_length(integer) : "Setup timer length (in seconds)" : 0 : "Length of setup time before the round begins and the timer starts to countdown the normal time. (0 = no setup time)  Setup time is run at the beginning of every round before the normal time begins."
	
	reset_time(choices) : "Reset time on round restart" : 0 : "Reset the timer time after a round restart.  This is not the setup time, but the normal round time." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	auto_countdown(choices) : "Use countdown sounds" : 1 : "Let the timer automatically count down the end of a round." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	show_in_hud(choices) : "Show timer in the HUD" : 1 : "Note: You can only show one timer in the HUD at a time." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// Inputs	
	input Pause(void) : "Pause the timer."
	input Resume(void) : "Resume the timer."
	input SetTime(integer) : "Set the timer to this value (in seconds)."
	input AddTime(integer) : "Add time to the timer (in seconds). Added time cannot excede the max timer length."
	input AddTeamTime(string) : "Input takes a string (space delimited) with the team number and the time to be added (in seconds) because of the team (2 for red, 3 for blue, and 0 for no team...but you could just use AddTime for that). Added time cannot excede the max timer length. Example: 2 600 (adds 10 minutes because of team red)" 
	input Restart(void) : "Restart the timer."
	input ShowInHUD(integer) : "Show this timer in the HUD (0 no, 1 Yes)."
	input SetMaxTime(integer) : "Set the max timer length to this value (in seconds). The timer's time will never excede this value."
	input AutoCountdown(integer) : "Turn off/on the auto countdown feature (0 no, 1 Yes)."
	input SetSetupTime(integer) : "Set the setup time length to this value (in seconds)."

	input RoundSpawn(void) : "Get remaining time AND Resume timer"
		
	// Outputs
	output On5MinRemain(void) : "Sent when 5 minutes remain."
	output On4MinRemain(void) : "Sent when 4 minutes remain."
	output On3MinRemain(void) : "Sent when 3 minutes remain."
	output On2MinRemain(void) : "Sent when 2 minutes remain."
	output On1MinRemain(void) : "Sent when 1 minutes remain."
	output On30SecRemain(void) : "Sent when 30 seconds remain."
	output On10SecRemain(void) : "Sent when 10 seconds remain."
	output On5SecRemain(void) : "Sent when 5 seconds remain."
	output On4SecRemain(void) : "Sent when 4 seconds remain."
	output On3SecRemain(void) : "Sent when 3 seconds remain."
	output On2SecRemain(void) : "Sent when 2 seconds remain."
	output On1SecRemain(void) : "Sent when 1 second remains."
	
	output OnRoundStart(void) : "Sent when the round starts."
	output OnFinished(void) : "Sent when the timer is finished."
	
	output OnSetupStart(void) : "Sent when the setup time begins."
	output OnSetupFinished(void) : "Sent when the setup time is finished."
]

//====================================================================================================================
// CAPTURE POINT HANDLING
//====================================================================================================================
@PointClass base(Targetname, EnableDisable, Angles, Parentname) studio("models/effects/cappoint_hologram.mdl") = team_control_point :
	"Control Point"
[
	spawnflags(flags) =
	[
		1: "Hide Control Point on HUD" : 0
		2: "Start with model hidden" : 0
		4: "Disable shadow" : 0
		8: "Disable sounds" : 0
		16: "Bots should ignore" : 0
	]
	
	point_start_locked(choices) : "Start locked" : 0 : "Locked means the point will not be available for capture until it is unlocked via its input."  =
	[
		0 : "No"
		1 : "Yes"
	]

	point_printname(string) : "Print Name" : "TODO: Set Name" : "LOCALIZED name to print on the HUD." 
	point_group(integer) : "Group Index" : 0 : "Used for grouping points together under a team_control_point_master (not using control point rounds)."
	point_default_owner(choices) : "Default Owner" : 0 : "Default Owner of the control point."  =
	[
		0 : "Neither"
		2 : "Red"
		3 : "Blue"
	]
	point_index(integer) : "Index" : 0 : "Index of this point (must be unique)."
	
	point_warn_on_cap(choices) : "Warning Type" : 0 : "Type of warning to issue to the team that owns the control point when the opposing team starts to capture it."  =
	[
		0 : "Normal Announcements"
		1 : "Final Capture Point Warning"
		2 : "No Announcements"
	]
	
	point_warn_sound(string) : "Warning sound" : "ControlPoint.CaptureWarn" : "Sound to be played when this point is being captured (if warn on capture is set)." 
	
	random_owner_on_restart(choices) : "Randomly set the owner on restart" : 0 : "Randomly set the owner of this point during a full restart of the map. The ratio of default owners among the points with this flag will be kept when selecting random owners."  =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// Per team data
	team_timedpoints_2(integer) : "Time-based point value for RED." : 0
	team_timedpoints_3(integer) : "Time-based point value for BLUE." : 0
	
	team_capsound_0(sound) : "Reset Sound" : "" : "Sound made when point resets."
	team_capsound_2(sound) : "Red Capture Sound" : "" : "Sound made when RED captures."
	team_capsound_3(sound) : "Blue Capture Sound" : "" : "Sound made when BLUE captures."
	
	team_model_0(studio) 	: "Reset Model" : "models/effects/cappoint_hologram.mdl" : "Model when point reset."
	team_model_2(studio) 	: "RED Model" : "models/effects/cappoint_hologram.mdl" : "Model when RED owns the point."
	team_model_3(studio) 	: "BLUE Model" : "models/effects/cappoint_hologram.mdl" : "Model when BLUE owns the point."
	
	team_bodygroup_0(integer) : "Reset model bodygroup" : 3
	team_bodygroup_2(integer) : "RED model bodygroup" : 1
	team_bodygroup_3(integer) : "BLUE model bodygroup" : 1

	team_icon_0(material)	: "HUD icon neutral" : "sprites/obj_icons/icon_obj_neutral" : "HUD icon material when no one owns the point."
	team_icon_2(material)	: "HUD icon RED" : "sprites/obj_icons/icon_obj_red" : "HUD icon material when RED owns the point."
	team_icon_3(material)	: "HUD icon BLUE" : "sprites/obj_icons/icon_obj_blu" : "HUD icon material when BLUE owns the point."

	team_overlay_0(material) : "HUD overlay neutral" : "" : "HUD material that will overlay the icon when no one owns the point."
	team_overlay_2(material) : "HUD overlay RED" : "" : "HUD material that will overlay the icon when RED owns the point."
	team_overlay_3(material) : "HUD overlay BLUE" : "" : "HUD material that will overlay the icon when BLUE owns the point."

	team_previouspoint_2_0(target_source) : "RED Previous Required Point 1" : "" : "The name of a previous capture point that RED must own to be able to capture this point. If empty, the team must own all points preceding this one. Pointing to itself means no previous point required."
	team_previouspoint_2_1(target_source) : "RED Previous Required Point 2" : "" : "The name of a second previous capture point that RED must own to be able to capture this point."
	team_previouspoint_2_2(target_source) : "RED Previous Required Point 3" : "" : "The name of a third previous capture point that RED must own to be able to capture this point."
	team_previouspoint_3_0(target_source) : "BLUE Previous Required Point 1" : "" : "The name of a previous capture point that BLUE must own to be able to capture this point. If empty, the team must own all points preceding this one. Pointing to itself means no previous point required."
	team_previouspoint_3_1(target_source) : "BLUE Previous Required Point 2" : "" : "The name of a second previous capture point that BLUE must own to be able to capture this point."
	team_previouspoint_3_2(target_source) : "BLUE Previous Required Point 3" : "" : "The name of a third previous capture point that BLUE must own to be able to capture this point."

	// Outputs
	output OnOwnerChangedToTeam1(void) : "Sent when owner is changed to RED."
	output OnOwnerChangedToTeam2(void) : "Sent when owner is changed to BLUE."
	output OnCapReset(void) : "Sent when owner is changed to neutral."

	output OnRoundStartOwnedByTeam1(void) : "Sent when a round is starting and the point is owned by RED."
	output OnRoundStartOwnedByTeam2(void) : "Sent when a round is starting and the point is owned by BLUE."
	
	output OnCapTeam1(void) : "Sent when RED capture this point."
	output OnCapTeam2(void) : "Sent when BLUE capture this point."
	
	output OnUnlocked(void) : "Sent when point is unlocked via the SetLocked(0) or SetUnlockTime inputs."

	input SetOwner(integer) : "Set the owner of the point."
	input HideModel(void) : "Hide the control point model."
	input ShowModel(void) : "Show the control point model again."
	
	input SetLocked(integer) : "Lock the control point. 0 = unlocked, 1 = locked"
	input SetUnlockTime(integer) : "This will automatically unlock the control point in the specified amound of time (seconds)."

	input RoundActivate(void) : "Return to its original team and locked."
]

@PointClass base(Targetname, EnableDisable) iconsprite("editor-puddy/team_control_point_round") = team_control_point_round :
	"Control Point Round (you may have as many of these in the map as you would like)."
[
	cpr_printname(string) : "Print Name" : "" : "LOCALIZED name to print on the RoundInfo panel" 
	
	cpr_priority(integer) : "Priority" : 0 : "The priority value for this round (must be >= 0). Higher priority rounds will be picked first. If multiple rounds have the same priority value, a random selection will be used."
	
	cpr_cp_names(string) : "Control points in this round" : "" : "Names of the control points included in this round (space delimited). Control points may belong to more than one control point round.  The names of the control points (and the rounds) should all be unique." 

	cpr_restrict_team_cap_win(choices) : "Restrict team from winning" : 0 : "Prevent this team from winning by capping all the points" =
	[
		0 : "Neither"
		1 : "Both"
		2 : "Red"
		3 : "Blu"
	]
	
	output OnStart(void) : "Sent when this round is selected to be played."
	output OnEnd(void) : "Sent when this round is finished."
	output OnWonByTeam1(void) : "Sent when RED wins this round."
	output OnWonByTeam2(void) : "Sent when BLUE wins this round."

	input RoundSpawn(void) : "Clear out old control points AND find the new control points."
]

@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/team_control_point_master") = team_control_point_master : "Control Point Master"
[
	team_base_icon_2(material) : "Material for the RED Base icon" : "sprites/obj_icons/icon_base_red"
	team_base_icon_3(material) : "Material for the BLUE Base icon" : "sprites/obj_icons/icon_base_blu"
	caplayout(string) : "Cap Layout" : "" : "A string that tells the HUD how to lay out the cap points. It should be a string with indexes of cap points seperated by commas to denote a new line. So <2,0 1> would create a pyramid, with cap point 2 on the top and cap points 0 & 1 on the bottom."
	custom_position_x(float) : "Custom cap position X" : -1 : "Set the cap layout custom X position [0,1]"
	custom_position_y(float) : "Custom cap position Y" : -1 : "Set the cap layout custom Y position [0,1]"

	cpm_restrict_team_cap_win(choices) : "Restrict team from winning" : 0 : "Prevent this team from winning by capping all the points. This field is ignored if you're using control_point_rounds in your map (set this field inside the rounds)." =
	[
		0 : "Neither"
		1 : "Both"
		2 : "Red"
		3 : "Blu"
	]
	
	switch_teams(choices) : "Switch teams on map win?" : 0 : "Switch the teams when one team has won the map and the game is going to be reset." = 
	[
		0 : "No"
		1 : "Yes"
	]
	
	score_style(choices) : "Scoring style" : 0 : "Sets the style of scoring used for capture point maps." = 
	[
		0 : "Add team score for each round won"
		1 : "Add team score for each captured point"
	]
	
	play_all_rounds(choices) : "Play all rounds before changelevel" : 0 : "Determines whether the server may changelevel when mp_timelimit is up before all mini-rounds have been completed (for maps like Dustbowl)." = 
	[
		0 : "Changelevel normally"
		1 : "Only changelevel after all mini-rounds have been played to completion"
	]	
	
	partial_cap_points_rate(float) : "Partial cap rate" : 0 : "Rate at which to give partial cap points for area captures."

	output OnWonByTeam1(void) : "Sent when RED wins the game."
	output OnWonByTeam2(void) : "Sent when BLUE wins the game."
	
	input SetWinner(integer) : "Set the winner of the round to this team (0 for a stalemate)."
	input SetWinnerAndForceCaps(integer) : "Set the winner of the round to this team and give them ownership of all points."
	input SetCapLayout(string) : "Set the cap layout string."
	input SetCapLayoutCustomPositionX(float) : "Set the cap layout custom X position [0,1]"
	input SetCapLayoutCustomPositionY(float) : "Set the cap layout custom Y position [0,1]"

	input RoundSpawn(void) : "Clear out old control points,round AND find the new control points,round and if successful, do CPMThink AND also tell  the resource to ResetControlPoints."
	input RoundActivate(void) : "if we're using mini-rounds and haven't picked one yet, find one to play OR Tell the objective resource what control points are in use in the selected mini-round."
]

@SolidClass base(Targetname, EnableDisable, Parentname) = trigger_capture_area : "Capture Area"
[
	area_cap_point(target_source) : "Control point" : "" : "Name of the control point this area is linked to."

	team_cancap_2(choices) : "Can RED Cap?" : 1 = 
	[
		1 : "Yes"
		0 : "No"
	]
	team_cancap_3(choices) : "Can BLUE Cap?" : 1 = 
	[
		1 : "Yes"
		0 : "No"
	]
	
	team_startcap_2(integer) : "Number of RED players to start capping" : 1 
	team_startcap_3(integer) : "Number of BLUE players to start capping" : 1 

	team_numcap_2(integer) : "Number of RED players to cap" : 1 
	team_numcap_3(integer) : "Number of BLUE players to cap" : 1 
	
	team_spawn_2(integer) : "Red Spawn Adjust" : 0 : "Adjust the minimum respawn time for the red team by this amount (in seconds) when red captures this point. If the red team owns this point when blue captures it, this adjustment is reversed."
	team_spawn_3(integer) : "Blue Spawn Adjust" : 0 : "Adjust the minimum respawn time for the blue team by this amount (in seconds) when blue captures this point. If the blue team owns this point when red captures it, this adjustment is reversed."
	
	area_time_to_cap(integer) : "Time to cap (sec)" : 5 

	// Outputs
	output OnStartTeam1(void) : "Sent when RED start capture."
	output OnBreakTeam1(void) : "Sent when a RED capture is broken."
	output OnCapTeam1(void)   : "Sent when RED end capture."

	output OnStartTeam2(void) : "Sent when BLUE start capture."
	output OnBreakTeam2(void) : "Sent when a BLUE capture is broken."
	output OnCapTeam2(void)   : "Sent when BLUE end capture."

	output OnStartCap(void) : "Sent when either team starts capture."
	output OnBreakCap(void) : "Sent when either team break capture."
	output OnEndCap(void)   : "Sent when either team end capture."
	
	output OnNumCappersChanged(integer) : "Sent when the number of cappers changes, passes the value in int."
	output OnNumCappersChanged2(integer) : "Sent when the number of cappers changes, passes the value in int (-1 for capture blocked)."

	// Inputs
	input SetTeamCanCap(string) : "Set whether a specific team is allowed to capture this point. Format is: <team number> <(0/1)>. i.e. '2 0' would prevent RED from capturing this point, whereas '3 1' would allow BLUE to cap it."
	
	input SetControlPoint(string) : "Assign area capture to the passed control point."
	input CaptureCurrentCP(string) : "If we're being capped, forces the current point to capture."
	input RoundSpawn(void) : "Find our control point"
]

@SolidClass base(Trigger) = trigger_timer_door :
	"A trigger that will open/close the door base filtered objects."
[
	door_name(string) : "Door Name" : "" : "Name of the door entity the trigger is attaching to."

	area_cap_point(target_source) : "Control point" : "" : "Name of the control point this area is linked to."

	team_cancap_2(choices) : "Can RED Cap?" : 1 = 
	[
		1 : "Yes"
		0 : "No"
	]
	team_cancap_3(choices) : "Can BLUE Cap?" : 1 = 
	[
		1 : "Yes"
		0 : "No"
	]
	
	team_startcap_2(integer) : "Number of RED players to start capping" : 1 
	team_startcap_3(integer) : "Number of BLUE players to start capping" : 1 

	team_numcap_2(integer) : "Number of RED players to cap" : 1 
	team_numcap_3(integer) : "Number of BLUE players to cap" : 1 
	
	team_spawn_2(integer) : "Red Spawn Adjust" : 0 : "Adjust the minimum respawn time for the red team by this amount (in seconds) when red captures this point. If the red team owns this point when blue captures it, this adjustment is reversed."
	team_spawn_3(integer) : "Blue Spawn Adjust" : 0 : "Adjust the minimum respawn time for the blue team by this amount (in seconds) when blue captures this point. If the blue team owns this point when red captures it, this adjustment is reversed."
	
	area_time_to_cap(integer) : "Time to cap (sec)" : 5 

	// Outputs
	output OnStartTeam1(void) : "Sent when RED start capture."
	output OnBreakTeam1(void) : "Sent when a RED capture is broken."
	output OnCapTeam1(void)   : "Sent when RED end capture."

	output OnStartTeam2(void) : "Sent when BLUE start capture."
	output OnBreakTeam2(void) : "Sent when a BLUE capture is broken."
	output OnCapTeam2(void)   : "Sent when BLUE end capture."

	output OnStartCap(void) : "Sent when either team starts capture."
	output OnBreakCap(void) : "Sent when either team break capture."
	output OnEndCap(void)   : "Sent when either team end capture."
	
	output OnNumCappersChanged(integer) : "Sent when the number of cappers changes, passes the value in int."
	output OnNumCappersChanged2(integer) : "Sent when the number of cappers changes, passes the value in int (-1 for capture blocked)."

	// Inputs
	input SetTeamCanCap(string) : "Set whether a specific team is allowed to capture this point. Format is: <team number> <(0/1)>. i.e. '2 0' would prevent RED from capturing this point, whereas '3 1' would allow BLUE to cap it."
	
	input SetControlPoint(string) : "Assign area capture to the passed control point."
	input CaptureCurrentCP(string) : "If we're being capped, forces the current point to capture."

	input RoundSpawn(void) : "Find our control point"
]

@PointClass base(Targetname) iconsprite("editor-puddy/point_template") = point_template : 
	"Turns an entity, or set of entities, into a single template that can be instanced anywhere, and multiple times. "
[
	spawnflags(flags) =
	[
		1 : "Don't remove template entities" : 0
		2 : "Preserve entity names (Don't do name fixup)" : 1
	]

	Template01(target_destination) : "Template 1"
	Template02(target_destination) : "Template 2"
	Template03(target_destination) : "Template 3"
	Template04(target_destination) : "Template 4"
	Template05(target_destination) : "Template 5"
	Template06(target_destination) : "Template 6"
	Template07(target_destination) : "Template 7"
	Template08(target_destination) : "Template 8"
	Template09(target_destination) : "Template 9"
	Template10(target_destination) : "Template 10"
	Template11(target_destination) : "Template 11"
	Template12(target_destination) : "Template 12"
	Template13(target_destination) : "Template 13"
	Template14(target_destination) : "Template 14"
	Template15(target_destination) : "Template 15"
	Template16(target_destination) : "Template 16"

	// Inputs
	input ForceSpawn(void) : "Spawn an instance of the template at the original position."

	// Outputs
	output OnEntitySpawned(void) : "Fired after spawning an instance of this template."
]

@PointClass base(Targetname, Angles, RenderFields) studio("models/props_forest/bird.mdl") = entity_bird : "entity_bird"
[
	modelscale(float) : "Model Scale" : "1.0" : "A multiplier for the size of the model."
]

@PointClass base(Targetname, Angles, RenderFields, PTeamNum, EnableDisable, Studiomodel) color(255 255 255) studio("models/passtime/ball/passtime_ball.mdl") = passtime_ball : "Jack"
[
	modelscale(float) : "Model Scale" : "1.0" : "A multiplier for the size of the model."
]


@PointClass base(Targetname, EnableDisable, PTeamNum, Studiomodel) iconsprite("editor-puddy/info_passtime_ball_spawn") = info_passtime_ball_spawn : "Just marks a ball spawnpoint. Won't be used if disabled."
[
	output OnSpawnBall(void) : "A ball just spawned here. Might be useful when using randomly selected spawn points."
]

@PointClass base(Targetname) iconsprite("editor-puddy/passtime_logic") = passtime_logic : "Passtime Logic"
[
	num_sections(integer) : "Number of sections" : 0 : ""
	ball_spawn_countdown(integer) : "Ball spawn countdown duration in seconds" : 15 : ""
	max_pass_range(float) : "Max Pass Range" : 0 : "0 means unlimited."

	input SpawnBall(void) : "With a countdown, pick a random enabled info_passtime_ball_spawn and spawn a ball there."
	input SetSection(string) : "Parameter must be three values - [section number] [name of first track_path] [name of last track_path]"
	input TimeUp(void) : "Input this from a round timer or something to indicate the game timer ended with no winner."
	input SpeedBoostUsed(void) : "For stats tracking."
	input JumpPadUsed(void) : "For stats tracking."
	input statica(void) : "???"
	input staticb(void) : "???"
	input staticc(void) : "???"
	input RoomTriggerOnTouch(void) : "???"

	output OnBallFree(void) : "The ball is free - someone was holding it, and now they aren't."
	output OnBallGetBlu(void) : "The ball was free and someone picked it up."
	output OnBallGetRed(void) : "The ball was free and someone picked it up."
	output OnBallGetAny(void) : "The ball was free and someone picked it up."
	output OnBallRemoved(void) : "The ball was removed by game rules and you should respawn it. (e.g. fell out of the world (func_passtime_goal with -1 points))."
	output OnScoreBlu(void) : "BLU scored."
	output OnScoreRed(void) : "RED scored."
	output OnScoreAny(void) : ""
	output OnBallPowerUp(void) : "Experimental"
	output OnBallPowerDown(void) : "Experimental"
]

@PointClass iconsprite("editor/logic_auto.vmt") = commentary_auto : 
	"Fires outputs when a map spawns. " +
	"If 'Remove on fire' flag is set the logic_auto is deleted after firing. " +
	"It can be set to check a global state before firing. This allows you to only fire events based on "+
	"what took place in a previous map."
[
	// Inputs
	input MultiplayerSpawned(void) : "On Multiplayer Start."
	
	// Outputs
	output OnCommentaryNewGame(void) : "Fires when a new game is started with commentary enabled."
	output OnCommentaryMidGame(void) : "Fires when commentary is enabled midgame."
	output OnCommentaryMultiplayerSpawn(void) : "."
]

@PointClass base(Targetname, Parentname, Angles, EnableDisable, Origin) studio("models/extras/info_speech.mdl") = point_commentary_node : "Commentary Node"
[
	commentaryfile(sound) : "Commentary sound file" : "" : "The commentary sound file that should be played when this node is used by the player."
	commentaryfile_nohdr(sound) : "Commentary sound NoHDR" : "" : "The commentary sound file that should be played when this node is used by the player. If the player has HDR turned off, this file will be used instead of the commentaryfile. If this entry is not specified, the base commentaryfile entry will still be used."
	speakers(string) : "Speakers" : "Gabe Newell" : "The name of the speakers of the commentary sound file(s). Will be displayed in the HUD while the commentary sound file is playing."
	precommands(string) : "semi-colon delimited list" : "" : "A semi-colon delimited list of commands that should entered into the console when the commentary file starts playing. e.g. ai_disable 1;mat_wireframe 1"
	postcommands(string) : "semi-colon delimited list" : "" : "A semi-colon delimited list of commands that should entered into the console when the commentary file finishes playing. e.g. ai_disable 0;mat_wireframe 0"
	viewposition(target_destination) : "Players view move" : "" : "The targetname of entity to which the players view should move while the commentary file is playing"
	viewtarget(target_destination) : "Players view track" : "" : "The targetname of entity that the players view should track while the commentary file is playing"
	printname(float) : "Print Name" : "Welcome to Team Fortress 2"
	teleport_origin(string) : "Teleport to" : ""
	prevent_movement(choices) : "Prevent Movement" : 0 : "If Yes, the player will not be able to move while the commentary sound file is playing" =
	[
		0 : "No"
		1 : "Yes"
	]

	// Outputs
	output OnCommentaryStarted(void) : "Sent when Commentary started."
	output OnCommentaryStopped(void) : "Sent when Commentary stopped."
	
	// Inputs
	input StartCommentary(void) : "Force the commentary node to start."
	input StopCommentary(void) : "Force the commentary node to stop."
	input StartUnstoppableCommentary(void) : "Force the commentary node to start, and don't allow the player to stop it in any way."
]

@PointClass base(Targetname, Angles,Parentname) sphere(radius) sphere(inner_radius) = point_push: "Point Push"
[
	spawnflags(Flags) = 
	[
		1 : "Test LOS before pushing" : 0
		2 : "Use angles for push direction" : 0
		4 : "No falloff (constant push at any distance)" : 0
		8 : "Push players" : 1
		16 : "Push physics" : 1
	]
	
	enabled(choices) : "Start Enabled"	: 1 =
	[
		0 : "No"
		1 : "Yes"
	]
	
	magnitude(float) : "Magnitude" : 100 : "How strongly to push away from the center. if set -100 it will pull the player to center"
	radius(float) : "Radius" : 128 : "Radius to affect items in."
	inner_radius(float) : "Inner radius" : "0" : "If not zero, the LOS is calculated from a point intersecting this sphere."
	
	input Enable(void) : "Enable the push."
	input Disable(void): "Disable the push."
]

@PointClass base(Targetname,DamageTypeP) sphere(DamageRadius) iconsprite("editor-puddy/point_hurt") = point_hurt :
	"An entity that does damage to all entities in a radius around itself, with a specified delay." +
	"If 'Target Entity' is specified, the damage is only done to that entity."
[
	DamageTarget(string) : "Target Entity" : "" : "If specified, only this entity will take damage. Otherwise, all entities within the Radius will take damage."
	
	DamageRadius(float) : "Radius" : 256 : "All entities within this radius of this entity will take damage. If a 'Target Entity' is specified, only that entity will take damage."
	Damage(integer) : "Damage" : 5 : "Damage done to all affected entities each time this entity fires."
	DamageDelay(float) : "Delay" : 1 : "Delay between refires, in seconds."

	input Hurt(void) : "Force a single fire, damaging either the Target Entity or all entities within the radius."
	input TurnOn(void) : "Enable this entity. It will start damaging entities everytime it fires, and refire based upon the specified Delay."
	input TurnOff(void) : "Disable this entity. It will stop damaging entities."
	input Toggle(void) : "Toggle this entity between On/Off state."
]

@PointClass base(Targetname, Angles) iconsprite("editor-puddy/path_corner") = path_corner : "Generic path point"
[
	spawnflags(Flags) =
	[
		1: "Wait for retrigger" : 0
		2: "Teleport to THIS path_corner" : 0
	]
	target(target_destination) : "Next stop target"
	wait(integer) : "Wait here (secs)" : 0
	speed(integer) : "New Train Speed" : 0
	yaw_speed(integer) : "New Train rot. Speed" : 0

	// Inputs 
	input SetNextPathCorner(string) : "Sets next pathcorner"

	// Outputs
	output OnPass(void) : "Fires when a path follower passes this point"
]

@PointClass base(Targetname, Parentname, Angles) studio("models/editor/cone_helper.mdl") cylinder(255 255 255, targetname, target, radius, targetname, targetname, radius) color(255 192 0) = path_track : 
	"An entity used to build paths for other entities to follow. Each path_track is a node on the path, each holding the name of the next path_track in the path."
[
	spawnflags(Flags) =
	[
		1:  "Disabled" : 0
		2:  "Fire once" : 0
		4:  "Branch Reverse" : 0
		8:  "Disable train" : 0
		16: "Teleport to THIS path track" : 0
		32: "Part of an uphill path" : 0
		64: "Part of a downhill path" : 0
	]
	
	target(target_destination) : "Next Stop Target" : : "The next path_track in the path."
	altpath(target_destination) : "Branch Path" : : "An alternative path_track to be the next node in the path. Useful for making branching paths. Use the ToggleAlternatePath / EnableAlternatePath inputs to make the alternative path active."
	speed(float) : "New Train Speed" : 0 : "When the train reaches this path_track, it will set its speed to this speed. "+
		"This speed must be a positive value that is less than the train's max speed. A value of 0 will cause no change in the train's speed."
	radius(float) : "Path radius" : 0 : "Used by NPCs who follow track paths (attack chopper/gunship). This tells them the maximum distance they're allowed to be from the path at this node."

	orientationtype(choices) : "Orientation Type" : 1 : "The way that the path follower faces as it moves through this path track." =
	[
		0 : "No change"
		1 : "Face direction of motion"
		2 : "Face this path_track's angles"
	]

	// Inputs
	input ToggleAlternatePath(void) : "Cause the track to toggle to/from its alternate path."
	input EnableAlternatePath(void) : "Enable the alternate path of the track."
	input DisableAlternatePath(void) : "Disable the alternate path of the track."

	input TogglePath(void) : "Cause the track to toggle on/off/"
	input EnablePath(void) : "Enable the track."
	input DisablePath(void) : "Disable the track."

	// Outputs
	output OnPass(void) : "Fired when any entity following this path passes this path_track node."
	output OnTeleport(void)  : "Fired when any entity following this path teleports directly to this path_track node."
]

// NPCs

@PointClass base(BaseNPC, Parentname, RenderFields, Shadow) studio() = generic_actor : "Generic Actor NPC"
[
	model(studio) : "Model"

	hull_name(choices) : "Hull type" : "Human" =
	[
		"HUMAN_HULL" : "Human/Freeman"
		"WIDE_HUMAN_HULL" : "Wide"
		"TINY_HULL" : "Tiny"
		"MEDIUM_HULL" : "Medium"
		"LARGE_HULL" : "Large"
	]

	DefaultAnim(string) : "Default Animation" : "" : "The name of the idle animation that this prop will revert to whenever it finishes a random or forced animation."

	RandomAnimation(choices) : "Randomly Animate" : 0 : "If set, this prop will randomly choose and play animations, based upon the times specified in Min/Max Random Anim Time. Inbetween the random animations, it will revert to playing the 'Default Animation'." =
	[
		0: "No"
		1: "Yes"
	]
]

@BaseClass base(BaseNPC) = VehicleDriverNPC
[
	vehicle(target_destination) : "Vehicle to drive"

	spawnflags(Flags) = 
	[
		65536 :  "Start Inactive" : 1
	]

	input StartFiring(void) : "Tell the driver to attack nearby enemies with the vehicle's weaponry (if any)"
	input StopFiring(void) : "Tell the driver to stop attacking nearby enemies with the vehicle's weaponry."
	input GotoPathCorner(string) : "Tell the driver to go to a specific path corner and continue from there."
]

@PointClass base(BaseNPC, RenderFields, Shadow) studio() = cycler_actor : "Actor Cycler"
[
	model(studio) : "Model"
	Sentence(string) : "Sentence Group" : ""

	input Alpha(integer) : "Set Alpha Value"
]

@PointClass base(BaseNPC, RenderFields, Shadow) studio() = cycler : "Cycler"
[
	model(studio) : "Model"
	Sentence(string) : "Sentence Group" : ""

	input Alpha(integer) : "Set Alpha Value"
]

@PointClass base(BaseNPC, RenderFields, Shadow) studio() = monster_generic : "Generic Script NPC"
[
	spawnflags(Flags) = 
	[
		65536 : "Not solid" : 0
	]
	model(studio) : "Model"
	body(Integer) : "Body" : 0
]

@PointClass base(Angles, BaseNPCMaker) iconsprite("editor/npc_maker.vmt") = npc_maker : "NPC Maker"
[
	spawnflags(Flags) = 
	[
		16 : "Fade Corpse" : 0
	]

	NPCType(npcclass) : "Class name of spawned NPC"
	NPCTargetname(string) : "Childrens' Name"
	NPCSquadname(string) : "Childrens' Squad Name"
	NPCHintGroup(string) : "Childrens' Hint Group"
	
	additionalequipment(choices) : "Weapons" : "0" =
	[
		"weapon_pistol" : "Pistol"
		"weapon_ar2" : "AR2"
		"weapon_shotgun" : "Shotgun"
		"weapon_smg1" : "SMG1"
		"weapon_stunstick" : "Stun Stick"
		"weapon_annabelle"	:"Grigori's Shotgun"
		"0" : "Nothing"
	]
]

@NPCClass base(VehicleDriverNPC) studio("models/roller.mdl") = npc_vehicledriver : 
	"NPC used to drive a target vehicle."
[
	drivermaxspeed(float) : "Maxspeed (percentage of vehicle's maxspeed)." : 1
	driverminspeed(float) : "MinSpeed (percentage of vehicle's maxspeed)." : 0

	input SetDriversMaxSpeed(float) : "Set the Maxspeed (percentage of vehicle's maxspeed)."
	input SetDriversMinSpeed(float) : "Set the Minspeed (percentage of vehicle's maxspeed)."
	input StartForward(void) : "Tell the driver to start driving."
	input Stop(void) : "Tell the driver to stop driving."
]

@PointClass base(Parentname, Angles) studioprop("models/editor/camera.mdl") = point_camera : "Camera"
[
	spawnflags(Flags) =
	[
		1 : "Start Off" : 0 
	]

	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	FOV(float) : "FOV" : 90 : "Field of view in degrees"
//	resolution(float) : "resolution" : 256 : "width/height of the render target for the camera"
	UseScreenAspectRatio(choices) : "Screen Aspect Ratio" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]	
	fogEnable(choices) : "Fog Enable" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]	
	fogColor(color255) : "Fog Color" : "0 0 0"
	fogStart(float) : "Fog Start" : 2048 : "The near fog plane."
	fogEnd(float) : "Fog End" : 4096 : "The far fog/clipping plane."
	fogMaxDensity(float) : "Fog Max Density [0..1]" : 1 : "The maximum fog density. 0=no fog, 1=full fog."

	// Inputs
	input ChangeFOV(string) : "Changes camera's FOV over time"
	input SetOnAndTurnOthersOff(void) : "Turn the camera on, and turn all other cameras off."
	input SetOn(void) : "Turn the camera on."
	input SetOff(void) : "Turn the camera off."
]

@BaseClass base(Targetname, Parentname, Angles) color(255 0 255) sphere(m_flRadius) = BaseScripted
[
	m_iszEntity(target_destination) : "Target NPC" : : "The name or class name (such as 'npc_zombie') of an NPC to use for this script."
	m_iszIdle(string) : "Pre Action Idle Animation" : "" : "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play before the action animation if the NPC must wait for the script to be triggered. Use 'Start on Spawn' flag or MoveToPosition input to play this idle animation."
	m_iszEntry(string) : "Entry Animation" : "" : "The name of the sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play when the sequence starts, before transitioning to play the main action sequence."
	m_iszPlay(string) : "Action Animation" : "" : "The name of the main sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play."
	m_iszPostIdle(string) : "Post Action Idle Animation" : "" : "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play after the action animation."
	m_iszCustomMove(string) : "Custom Move Animation" : "" : "Used in conjunction with the 'Custom movement' setting for the 'Move to Position' property, specifies the sequence (such as 'crouch_run01') or activity (such as 'ACT_RUN') to use while moving to the scripted position."
	m_bLoopActionSequence(Choices) : "Loop Action Animation?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	m_bSynchPostIdles(Choices) : "Synch Post Idles?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	m_flRadius(integer) : "Search Radius (0=everywhere)" : 0 : "Radius to search within for an NPC to use. 0 searches everywhere."
	m_flRepeat(integer) : "Repeat Rate ms" : 0
	m_fMoveTo(Choices) : "Move to Position" : 1 =
	[
		0 : "No"
		1 : "Walk"
		2 : "Run"
		3 : "Custom movement"
		4 : "Instantaneous"
		5 : "No - Turn to Face"
	]
	m_iszNextScript(target_destination) : "Next Script" : : "The name of the script to run immediately after this script completes. The NPC will not return to AI between the two scripts."
	m_bIgnoreGravity(choices) : "Ignore Gravity on NPC during script" : 0 : "If this is set to 'Yes', the NPC will not be subject to gravity while playing this script." =
	[
		0 : "No"
		1 : "Yes"
	]
	m_bDisableNPCCollisions(choices) : "Disable NPC collisions during script" : 0 : "Useful for when NPCs playing scripts must interpenetrate while riding on trains, elevators, etc. This only disables collisions between the NPCs in the script and must be enabled on BOTH scripted_sequences." =
	[
		0 : "No"
		1 : "Yes"
	]


	// Inputs
	input BeginSequence(void) : "Summons an NPC to act out the scripted sequence."
	input MoveToPosition(void) : "Summons an NPC to the script location. They will play their scripted idle (or ACT_IDLE if none is specified) until BeginSequence is triggered."
	input CancelSequence(void) : "Stops the scripted sequence. If fired after a sequence starts, this input will not take effect until the NPC finishes playing the scripted action animation."

	// Outputs
	output OnBeginSequence(void) : "Fires when the action animation begins playing."
	output OnEndSequence(void) : "Fires when the action animation completes."
	output OnCancelSequence(void) : "Fires when the sequence is cancelled."
	output OnCancelFailedSequence(void) : "Fires when the sequence is cancelled without ever playing (OnCancelSequence will also fire)."
	output OnScriptEvent01(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 1 } in the QC."
	output OnScriptEvent02(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 2 } in the QC."
	output OnScriptEvent03(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 3 } in the QC."
	output OnScriptEvent04(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 4 } in the QC."
	output OnScriptEvent05(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 5 } in the QC."
	output OnScriptEvent06(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 6 } in the QC."
	output OnScriptEvent07(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 7 } in the QC."
	output OnScriptEvent08(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 8 } in the QC."
]

@PointClass base(BaseScripted, Angles, DXLevelChoice) studio("models/editor/scriptedsequence.mdl") sphere(m_flRadius) = scripted_sequence :
	"Grabs an NPC and makes them play a specified set of animations. The NPC can be told to move to the scripted sequence position or can "+
	"be told to play the script wherever they currently are. "+
	"Multiple scripted sequences of the same name will frame-synchronize in the action animation once all the actors have moved to position. "+
	"This allows tight interaction between actors (one actor grabbing another, hitting them, etc.) The flow is as follows:\n\n"+
	"1) Move to position using the specified movement animation. If 'Move to Position' is set to NONE, skip to step 2.\n"+
	"2) If forced to wait for another actor to move to position, play the pre-action idle animation, otherwise skip to step 3. If there is no pre-action idle specified, ACT_IDLE is used.\n"+
	"3) Fire the OnBeginSequence output.\n"+
	"4) Play the action animation. If no action animation is specified, skip to step 5.\n"+
	"5) Play the post-action idle animation. If none is specified, skip to step 6. If the 'Loop in Post Idle' spawnflag is set, keep playing the post-action idle until the script is cancelled. If no post-action idle animation is specified, ACT_IDLE is used.\n"+
	"6) Fire the OnEndSequence output.\n"+
	"7) If a next script to play is specified, hand the NPC to the next script and repeat this process for that script.\n\n"+
	"The MoveToPosition input runs steps 1 and 2, then waits while playing the pre-action idle animation until the BeginSequence input is received.\n\n"+
	"If the sequence has motion extraction in it, set the 'Don't Teleport NPC On End' spawnflag."
[
	spawnflags(Flags) = 
	[
		4 : "Repeatable" : 0
		8 : "Leave Corpse" : 0
		16 : "Start on Spawn" : 0
		32: "No Interruptions" : 0
		64: "Override AI" : 0
		128: "Don't Teleport NPC On End" : 0
		256: "Loop in Post Idle" : 0
		512: "Priority Script" : 0
		4096: "Allow actor death" : 0
	]

	
	onplayerdeath(choices) : "On player death" : 0 : "What should this entity do if the player dies" =
	[
		0 : "Do Nothing"
		1 : "Cancel Script and return to AI"
	]
]

@PointClass base(Targetname) sphere(m_flRadius) color(255 0 255) iconsprite("editor/aiscripted_schedule") = aiscripted_schedule :
	"Issues a command to an NPC without taking the NPC out of its AI. This does not seize control of the NPC as " +
	"a scripted_sequence does" 
[
	m_iszEntity(target_destination) : "Target NPC" : : "The name or classname of an NPC to use."
	m_flRadius(integer) : "Search Radius (0=everywhere)" : 0 : "Radius to search within for an NPC to use. 0 searches everywhere."

	graball(choices)  : "All in radius" : 0: "Whether to grab all matching NPCs in the specified radius, instead of just one"  =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(Flags) = 
	[
		4 : "Repeatable" : 1
		1024 : "Search Cyclically" : 0
		2048 : "Don't Complain" : 0
	]

	forcestate(choices) : "AI state to set" : 0 =
	[
		0 : "<None>"
		1 : "Set state to IDLE"
		2 : "Set state to ALERT"
		3 : "Set state to COMBAT"
	]
		
	schedule(choices) : "Schedule to run" : 1 =
	[
		0 : "<None>"
		1 : "Walk to Goal Entity"
		2 : "Run to Goal Entity"
		3 : "Set enemy to Goal Entity"
		4 : "Walk Goal Path"
		5 : "Run Goal Path"
		6 : "Set enemy to Goal Entity AND Run to Goal Entity"
	]
	
	interruptability(choices) : "Interruptability" : 0 =
	[
		0 : "General"
		1 : "Damage or Death"
		2 : "Death"
	]

	goalent(target_destination) : "Goal entity" : : "Provides the name of a schedule-specific goal entity (see 'Schedule to run')"

	// Inputs
	input StartSchedule(void) : "Starts the scripted schedule. This will first locate an NPC that " +
		"matches the given target, then tell the NPC to run the specified schedule."
]

@PointClass base(Targetname) iconsprite("editor/ai_relationship.vmt") sphere() = ai_relationship : 
	"AI Relationship - Sets relationships between groups of NPCs in the AI."
[
	subject(target_name_or_class) : "Subject(s)" : "" : "This is the NPC(s) whose disposition will change. May be a targetname or a classname."
	target(target_name_or_class) : "Target(s)" : "" : "This is the NPC(s) about whom the Subject(s) will change their disposition. May be a tarGetname or a classname."
	disposition(choices) : "Disposition" : 3 : "Choose the way the Subject(s) should feel about the Target(s)" =
	[
		// These MUST match the enum in the code! (basecombatcharacter.h)
		1 : "Hate"
		2 : "Fear"
		3 : "Like"
		4 : "Neutral"
	]

	radius(float) : "Radius for subject" : 0

	rank(integer) : "Disposition Priority" : 0 : "How much the Subject(s) should Like/Hate/Fear the Target(s). Higher priority = stronger feeling."

	StartActive(choices) : "Start Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	Reciprocal(choices) : "Reciprocal" : 0 : "Set this to YES to have the new relationship mirrored by Target"  =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) =
	[
		1 : "Notify subject of target's location" : 0
		2 : "Notify target of subject's location" : 0
	]
	
	// Inputs
	input ApplyRelationship(void) : "Apply relationship changes. This will change all Subject entities' relationships to all Target entities. \n\nIMPORTANT: Once you ApplyRelationships, this entity is then 'ALWAYS ON' until you send a Disable input or RevertRelationship input. During the time this entity is 'ON', any entities that spawn who match the Subject or Target names will be affected. \n\nIMPORTANT: Unpredictable results may occur when two ai_relationship entities refer to the same set or subset of target or subject entities. This situation should be avoided."

	input RevertRelationship(void) : "Revert relationship changes. This will return the relationship to what it was at the time the ApplyRelationship input was called (or when this ai_relationship was spawned if StartActive is set)."
	input RevertToDefaultRelationship(void) : "Revert relationship changes to the default relationship, which may have changed since this ai_relationship was applied. This returns control of the entity relationship to the code."
]

@PointClass color(0 0 255) base(Targetname) iconsprite("editor/choreo_scene.vmt") = logic_choreographed_scene :
	"Manages a choreographed scene of one or more actors."
[
	// Keys
	SceneFile(scene) : "Scene file"

	// Links
	target1(target_destination) : "Target 1"
	target2(target_destination) : "Target 2"
	target3(target_destination) : "Target 3"
	target4(target_destination) : "Target 4"
	target5(target_destination) : "Target 5"
	target6(target_destination) : "Target 6"
	target7(target_destination) : "Target 7"
	target8(target_destination) : "Target 8"

	busyactor(choices) : "If an Actor is talking..." : 1 : "What to do if an actor this scene needs is already talking when this scene is told to start." =
	[
		0: "Start immediately"
		1: "Wait for actor to finish"
		2: "Interrupt at next interrupt event"
		3: "Cancel at next interrupt event"
	]

	// Inputs
	input Start(void) : "Starts playback of the scene file"
	input Pause(void) : "Pauses playback of the scene file"
	input Resume(void) : "Resumes playback of the scene if it has been paused"
	input Cancel(void) : "Cancels playback of the scene"
	input CancelAtNextInterrupt(void) : "Cancels playback of the scene at the next interrupt event in the scene."
	input PitchShift(float) : "Multiplies the the pitch"

	input InterjectResponse(string) : "Finds an actor who can respond to the specified concept string while the scene continues playing"

	input StopWaitingForActor(void) : "Stop waiting on an actor to stop talking."

	// Outputs
	output OnStart(void) : "The scene has started"
	output OnCompletion(void) : "The scene has completed"
	output OnCanceled(void) : "The scene has been canceled"
	output OnTrigger1(void) : "Scene trigger 1"
	output OnTrigger2(void) : "Scene trigger 2"
	output OnTrigger3(void) : "Scene trigger 3"
	output OnTrigger4(void) : "Scene trigger 4"
	output OnTrigger5(void) : "Scene trigger 5"
	output OnTrigger6(void) : "Scene trigger 6"
	output OnTrigger7(void) : "Scene trigger 7"
	output OnTrigger8(void) : "Scene trigger 8"
	output OnTrigger9(void) : "Scene trigger 9"
	output OnTrigger10(void) : "Scene trigger 10"
	output OnTrigger11(void) : "Scene trigger 11"
	output OnTrigger12(void) : "Scene trigger 12"
	output OnTrigger13(void) : "Scene trigger 13"
	output OnTrigger14(void) : "Scene trigger 14"
	output OnTrigger15(void) : "Scene trigger 15"
	output OnTrigger16(void) : "Scene trigger 16"

	onplayerdeath(choices) : "On player death" : 0 : "What should this entity do if the player dies" =
	[
		0 : "Do Nothing"
		1 : "Cancel Script and return to AI"
	]
]


@PointClass color(0 0 255) base(Targetname) iconsprite("editor/choreo_manager.vmt") = logic_scene_list_manager :
	"Manages a list of logic_choreographed_scene entities. Store choreo scenes in them in order that they will be played by other inputs. Whenever a scene plays, the manager will remove all scenes before that one in the list. The name of another logic_scene_list_manager can be entered in a slot instead of an invididual scene, which will cause all scenes in that manager to be removed when a later scene in this list is played."
[
	scene0(target_destination) : "Scene 1" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene1(target_destination) : "Scene 2" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene2(target_destination) : "Scene 3" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene3(target_destination) : "Scene 4" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene4(target_destination) : "Scene 5" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene5(target_destination) : "Scene 6" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene6(target_destination) : "Scene 7" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene7(target_destination) : "Scene 8" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene8(target_destination) : "Scene 9" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene9(target_destination) : "Scene 10" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene10(target_destination) : "Scene 11" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene11(target_destination) : "Scene 12" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene12(target_destination) : "Scene 13" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene13(target_destination) : "Scene 14" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene14(target_destination) : "Scene 15" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."
	scene15(target_destination) : "Scene 16" : "" : "The name of a logic_choreographed_scene, or logic_scene_list_manager."

	// Inputs
	input Shutdown(void) : "Remove the manager and all scenes referenced by it (and all scenes referenced by logic_scene_list_manager's embedded in this one)."
]

@PointClass base(Targetname, Parentname) sphere(volume) iconsprite("editor/ai_sound.vmt") = ai_sound :
	"This entity makes sounds or smells that can be sensed by NPCs, butnot by the player. This can be used " +
	"to cause reactions in nearby NPCs.\n\n" +
	"Sound Types\n" +
	"  Combat: Will cause most NPCs to become alert\n" +
	"  World: Will cause most NPCs to become alert\n" +
	"  Danger: Will cause most NPCs to move away from the position of the sound\n" +
	"  Bullet Impact: \n" +
	"  Carcass: \n" +
	"  Meat: \n" +
	"  Garbage: \n" +
	"  Thumper: causes antlions to run away briefly\n" +
	"  Readiness: (Low, Medium, High) Causes player companions that can hear this sound to change readiness\n"
[
	//input InsertSound(Integer) : "THIS IS NOW OBSOLETE. Use InsertAISound"
	input EmitAISound(void) : "Make the sound."

	volume(integer) : "Volume" : 120 : "How far away this sound can be heard. This is a radius."
	duration(float) : "Duration" : "0.5" : "How long the sound persists each time you insert it."

	soundtype(choices) : "Sound Type" : 0 : "The type of sound or smell will determine the reaction of NPCs that sense it." =
	[
		0: "Select one"
		1: "Combat"
		2: "World"
		//4: "Player (Don't use)"
		8: "Danger"
		16: "Bullet Impact"
		32: "Carcass"
		64: "Meat"
		128: "Garbage"
		256: "Thumper"
		4096: "Move Away - Most NPCs will clear the radius of this sound when heard."
		16384 : "Readiness - Low"
		32768 : "Readiness - Medium"
		65536 : "Readiness - High"
	]

	soundcontext(choices) : "Additional sound context (optional)" : 0 : "Optional settings specifying such things as who can or cannot hear the sound." =
	[
		0 : "Select one"
		8388608 : "Only Combine hear"
		67108864 : "Combine cannot hear"
	]

	locationproxy(target_destination) : "Location Proxy" : "" : "The name of an entity to use as a proxy to determine the location at which to make the sound. If you specify an entity here, the sound will be made at that entity's location (!player included)" 
]

@PointClass base(Targetname,ResponseContext,EnableDisable) = ai_speechfilter : 
	"An entity that can be used to control the idle speech patterns of a set of NPCs."
[
	subject(target_destination) : "Subject(s)" : "" : "This is the NPC(s) whose speech we're filtering. May be a targetname or a classname."	

	IdleModifier(float) : "Idle modifier." : "1.0" : "Multiplier to the percentage chance that our NPC(s) will idle speak. Set to 0 to prevent all idle speech."
	NeverSayHello(choices) : "Greet Player?" : 0 : "If set to Yes, our NPC(s) won't greet the player when they first meet him." =
	[
		0 : "Yes"
		1 : "No"
	]

	input SetIdleModifier(float) : "Allows designers to change the idle modifier at runtime"
]

// point_?

@PointClass base(Targetname) iconsprite("editor-puddy/point_clientcommand") = point_clientcommand : 
	"An entity that issues commands to the client console, as if it was typed in by the player (if activator is a player, or the local player in single player)."
[
	// Inputs
	input Command(string) : "Command to execute."
]

@PointClass base(Targetname) iconsprite("editor-puddy/point_servercommand") = point_servercommand : 
	"An entity that issues commands to the server console."
[
	// Inputs
	input Command(string) : "Command to execute."
]

@PointClass base(BasePropPhysics, RenderFields) studioprop() sphere(radius) = prop_sphere : "Creates a perfect sphere."
[
	radius(float) : "Radius" : 12 : ""
]

@PointClass base(prop_physics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_respawnable :
	"This class is the same as prop_physics, except it respawns after it breaks"
[
	RespawnTime(float) : "Respawn Time" : 60 : "Ammount in seconds this prop will respawn after it breaks."
]

  //This has been disabled until it can be reimplemented, destroyed, or renamed - jdw,
  //but then ISPuddy reenable it lol.
@PointClass base(Targetname, Parentname) size(-4 -4 -4, 4 4 4) = env_splash : 
	"Can be used to create either a spash effect or a stream of falling or spurting liquid." +
	"Will create a splash decal on the collided surface the same color as the liquid"
[
	spawnrate(float) : "SpawnRate"  : "10" : "How many particles some out"
	startcolor(color255) : "StartColor" : "100 100 100" : "Color of particles when the are emitted"
	endcolor(color255) : "EndColor" : "240 110 0" : "Color that particles approach"
	speed(float) : "Speed" : 3 : "Averate speed of an emitted particles"
	speedrange(float) : "SpeedRange" : 1 : "Speed range of an emitted particles"
	widthmin(float) : "WidthMin" : 2 : "Width of smallest particle emitted"
	widthmax(float) : "WidthMax" : 8 : "Width of largest particle emitted"
	noise(float) : "Noise" : "0.1" : "Amount of directional noise in stream"
	lifetime(float) : "Lifetime" : 5 : "Lifetime of particles (in secs)"
	numdecals(integer) : "Num Decals" : 1 : "Number of decals used (keep small)"
	startactive(choices) : "Start On" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input SetSpawnRate(float) : "Sets how many particles come out"
	input SetSpeed(float) : "Sets speed of emitted particle"
	input SetNoise(float) : "Sets noise of emitted particle (0-1)"
	input SetLifetime(float) : "Sets lifetime of emitted particles (in seconds)"
	input TurnOn(void) : "Turns particles on"
	input TurnOff(void) : "Turns particles off"
]

@PointClass base(Targetname,Parentname,Angles) iconsprite("editor-puddy/env_entity_maker") = env_entity_maker : 
	"Spawns the specified entity template at its origin. If set to auto-spawn, it will spawn the template whenever there's room and the player "+
	"is looking elsewhere." 
[
	spawnflags(Flags) =
	[
		1 : "Enable AutoSpawn (will spawn whenever there's room)" : 0
		2 : "AutoSpawn: Wait for entity destruction" : 0
		4 : "AutoSpawn: Even if the player is looking" : 0
		8 : "ForceSpawn: Only if there's room" : 0
	  	16 : "ForceSpawn: Only if the player isn't looking" : 0
	]

	EntityTemplate(target_destination) : "Point_template To Spawn" : "" : "Name of the point_template to spawn here."

	PostSpawnSpeed(float) : "PostSpawn Movement Speed" : "0" : "If specified, all the entities created in the template will move this fast in the specified PostSpawn Movement Direction."
	PostSpawnDirection(angle) : "PostSpawn Movement Direction" : "0 0 0" : "If a PostSpawn Movement Speed is specified, all the entities created in the template will move in this direction."
	PostSpawnDirectionVariance(float) : "PostSpawn Direction Variance" : "0.15" : "This variance is applied to the PostSpawn Movement Direction for each spawned entity in the template. Use it to apply some randomness to the directions."
	PostSpawnInheritAngles(choices) : "PostSpawn Inherit Angles" : 0 : "If in hierarchy, is spawn direction in world space, or object local space of parent" =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input ForceSpawn(void)				: "Spawn an instance of the template at this origin and angle."
	input ForceSpawnAtEntityOrigin(target_destination) : "Spawn an instance of the template that the same origin and angle as the specified entity (specify by targetname in parameters)"

	// Outputs
	output OnEntitySpawned(void) : "Fired when an instance of the entity template has been spawned."
	output OnEntityFailedSpawn(void) : "Fired when a ForceSpawn input failed to spawn the template, either due to lack of space or being in player's view, depending on the spawnflags."
]

@PointClass base(Targetname) iconsprite("editor-puddy/entity_spawn_point") = entity_spawn_point : "A spawn location associated with a spawn manager."
[
	spawn_manager_name(string) : "Spawn Manager Name" : "" : "Name of the spawn manager entity we are associated with."
]

@PointClass base(Targetname, Parentname, RenderFields,DXLevelChoice) size(-2 -2 -2, 2 2 2) sprite() color(20 140 20) = env_glow : 
	"An entity that controls the drawing of a sprite in the world." 
[
	framerate(string) : "Framerate" : "10.0" : "Rate at which the sprite should animate, if at all."
	model(sprite) : "Sprite Name" : "sprites/glow01.spr" : "Material of the sprite to be drawn."
	scale(string) : "Scale" : "" : "Scale multiplier of the sprite."
	spawnflags(flags) =
	[
		1: "Start on" : 0
		2: "Play Once" : 0
	]

	GlowProxySize(float) : "Size of Glow Proxy Geometry." : "2.0" : "Size of the glow to be rendered for visibility testing. Must be larger than the distance from the sprite center to empty space.  So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb's radius. Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."

	HDRColorScale(float) : "HDR color scale." : "1.0" : "float value to multiply sprite color by when running in HDR mode."
	
	// Inputs
	input ColorRedValue(float) : "Sets the red color channel's value (0 - 255)."
	input ColorGreenValue(float) : "Sets the green color channel's value (0 - 255)."
	input ColorBlueValue(float) : "Sets the blue color channel's value (0 - 255)."
	input SetScale(float) : "Set the sprite's scale (0 - 8.0)."
	input HideSprite(void) : "Hide the sprite. Won't be drawn until the 'ShowSprite' input is received."
	input ShowSprite(void) : "Show the sprite."
	input ToggleSprite(void) : "Toggle the sprite between hidden and shown."
]


@PointClass base(Targetname, Parentname, Angles) size(-2 -2 -2, 2 2 2) frustum(lightfov,nearz,farz,lightcolor,-1) = env_projectedtexture : 
	"Projected texture entity."
[
	spawnflags(flags) =
	[
		1  : "Enabled"				: 1
	]

	target(target_destination)	: "target" : : "target"	
	lightfov(float)				: "FOV" : "90.0" : "FOV"
	nearz(float)				: "NearZ" : "4.0" : "Near Z for projected texture"
	farz(float)					: "FarZ" : "750.0" : "Far Z for projected texture"	
	quadraticatten(float)		: "Quadratic attenuation" : "0.0" : "Quadratic attenuation"
	linearatten(float)			: "Linear attenuation" : "100" : "Linear attenuation"
	constantatten(float)		: "Constant attenuation" : "0.0" : "Constant attenuation"
	shadowtatten(float)		: "Shadow attenuation" : "0.0" : "Shadow attenuation"
	
	enableshadows(Choices) : "Enable Shadows" : 0 : "Enables/disables shadows from this projected texture." =
	[
		0 : "No"
		1 : "Yes"
	]
	shadowquality(Choices) : "Shadow Quality" : 1 : "Quality of shadows." =
	[
		0 : "Low"
		1 : "High"
	]
	lightonlytarget(Choices) : "Light Only Target" : 0 : "Limit flashlight effect to only effect target entity." =
	[
		0 : "No"
		1 : "Yes"
	]
	lightworld(Choices) : "Light World" : 1 : "Control whether flashlight effects static world geometry." =
	[
		0 : "No"
		1 : "Yes"
	]
	lightcolor(color255)		: "Light Color" : "255 255 255 200" : "Light Color RGB-Intensity"
	colortransitiontime(float)	: "Color Transition Time" : "0.5" : "Amount of time it takes for a color change to occur."
	cameraspace(integer)		: "Camera Space" : 0 : "Angles are interpreted as being relative to camera."

	// Inputs
	input TurnOn(void)		: "Turn on the texture"
	input TurnOff(void)		: "Turn off the texture"
	input AlwaysUpdateOn(void)	: "Turn on per frame updating (for moving lights)"
	input AlwaysUpdateOff(void)	: "Turn off per frame updating (for moving lights)"
	input SetFOV(float)		: "Set FOV"
	input SpotlightTexture(string)		: "Set the spotlight texture"
	input EnableShadows(bool)		: "Set the if shadows are enabled"
	input LightColor(color255)		: "Change the light color/brightness"
	input SetNearZ(float) 	: "Sets the near Z distance."
	input SetFarZ(float) 	: "Sets the far Z distance."
]

@BaseClass color(180 10 180) = Light
[
	_light(color255) : "Brightness" : "255 255 255 200"
	_lightHDR(color255) : "BrightnessHDR" : "-1 -1 -1 1"
	_lightscaleHDR(float) : "BrightnessScaleHDR" : "1" : "Amount to scale the light by when compiling for HDR."
	style(Choices) : "Appearance" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
		12 : "Underwater light mutation"
	]
	pattern(string) : "Custom Appearance" : "" : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	_constant_attn(string)	: "Constant" : "0"
	_linear_attn(string)	: "Linear" : "0"
	_quadratic_attn(string)	: "Quadratic" : "1"
	_fifty_percent_distance(string) : "50 percent falloff distance" : "0": "Distance at which brightness should fall off to 50%. If set, overrides linear constant and quadratic paramaters."
	_zero_percent_distance(string) : "0 percent falloff distance" : "0": "Distance at which brightness should fall off to negligible (1/256)%. Must set _fifty_percent_distance to use."
	_hardfalloff(integer) : "hard falloff" : 0 : "If set, causes lights to fall to exactly zero beyond the zero percent distance. May cause unrealistic lightijng if not used carefully."
	// Inputs
	input TurnOn(void) : "Turn the light on."
	input TurnOff(void) : "The the light off."
	input Toggle(void) : "Toggle the light's current state."
	input SetPattern(string) : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	input FadeToPattern(string) : "Fades from first value in old pattern, to first value in the new given pattern. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
]

@PointClass light() iconsprite("editor/light.vmt") base(Targetname, Light) sphere(_fifty_percent_distance) sphere(_zero_percent_distance) = light_glspot :
	"Entity that can change the renderfx of all props"
[
	target(target_destination) : "Entity To Point At" : : "The name of an entity in the map that the spotlight will point at. This will override the spotlight's angles."
	_distance(integer) : "Maximum Distance" : 0 : "This is the distance that light is allowed to cast, in inches."
]

@PointClass base(Angles, Targetname) iconsprite("editor-puddy/light_env.vmt") = light_environment : 
	"Sets the color and angle of the light from the sun and sky."
[
	_light(color255) : "Brightness" : "255 255 255 200"
	_ambient(color255) : "Ambient" : "255 255 255 20"
	_lightHDR(color255) : "BrightnessHDR" : "-1 -1 -1 1"
	_lightscaleHDR(float) : "BrightnessScaleHDR" : "1" : "Amount to scale the light by when compiling for HDR."
	_ambientHDR(color255) : "AmbientHDR" : "-1 -1 -1 1"
	_AmbientScaleHDR(float) : "AmbientScaleHDR" : "1" : "Amount to scale the ambient light by when compiling for hdr."
	style(Choices) : "Appearance" : 0 =
	[
		0 : "Normal"
		10: "Fluorescent flicker"
		2 : "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5 : "Gentle pulse"
		1 : "Flicker A"
		6 : "Flicker B"
		3 : "Candle A"
		7 : "Candle B"
		8 : "Candle C"
		4 : "Fast strobe"
		9 : "Slow strobe"
		12 : "Underwater light mutation"
	]
	pattern(string) : "Custom Appearance" : "" : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	pitch(integer) : "Pitch" : 0 : "The downward pitch of the light from the sun. 0 is horizontal, -90 is straight down."
	StartDisabled(choices) : "Start Disabled" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	SunSpreadAngle(float) : "SunSpreadAngle" : 0 : "The angular extent of the sun for casting soft shadows. Higher numbers are more diffuse. 5 is a good starting value."
	// Inputs
	input TurnOn(void) : "Turn the light on."
	input TurnOff(void) : "The the light off."
	input Toggle(void) : "Toggle the light's current state."
	input SetPattern(string) : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	input FadeToPattern(string) : "Fades from first value in old pattern, to first value in the new given pattern. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
]


//-------------------------------------------------------------------------
//
// Logic Entities
//
//-------------------------------------------------------------------------

@PointClass base(Targetname,Global) iconsprite("editor/multisource") = multisource : 
	"Fires outputs when a map spawns. " +
	"If 'Remove on fire' flag is set the logic_auto is deleted after firing. " +
	"It can be set to check a global state before firing. This allows you to only fire events based on "+
	"what took place in a previous map."
[	
	globalstate(choices) : "Global State to Read" : : "If set, this specifies a global state to check before firing. The OnMapSpawn output will only fire if the global state is set." =
	[
		"" : "--- None ---"
		"is_console" : "Game is running on a console"
		"is_pc" : "Game is running on a PC"
	]
	
	// Inputs
	input Trigger(void) : "Trigger the relay, causing its OnTrigger output to fire if it is enabled."
	input Toggle(void) : "Toggle the relay between enabled and disabled."
	input CancelPending(void) : "Cancel any events fired by this relay that are currently pending in the I/O event queue."
	
	// Outputs
	output OnSpawn(void) : "Fired when the relay is spawned. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
	output OnTrigger(void) : "Fired when the relay is triggered. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
]

@PointClass iconsprite("editor/logic_auto") = logic_auto : 
	"Fires outputs when a map spawns. " +
	"If 'Remove on fire' flag is set the logic_auto is deleted after firing. " +
	"It can be set to check a global state before firing. This allows you to only fire events based on "+
	"what took place in a previous map."
[
	spawnflags(Flags) =
	[
		1 : "Remove on fire" : 1
	]
	
	globalstate(choices) : "Global State to Read" : : "If set, this specifies a global state to check before firing. The OnMapSpawn output will only fire if the global state is set." =
	[
		"" : "--- None ---"
		"is_console" : "Game is running on a console"
		"is_pc" : "Game is running on a PC"
	]
	
	// Outputs
	output OnMapSpawn(void) : "Fired when the map is loaded for any reason."
	output OnNewGame(void) : "Fired when the map is loaded to start a new game."
	output OnLoadGame(void) : "Fired when the map is loaded from a saved game."
	output OnMapTransition(void) : "Fired when the map is loaded due to a level transition."
	output OnBackgroundMap(void) : "Fired when the map is loaded as a background to the main menu."
	output OnMultiNewMap(void) : "Fired only in multiplayer, when a new map is loaded."
	output OnMultiNewRound(void) : "Fired only in multiplayer, when a new round is started. Only fired in multiplayer games that use round-based gameplay."
]

@PointClass base(Targetname,Angles,Parentname) studioprop("models/editor/camera.mdl") = point_viewcontrol : 
	"A camera entity that controls the player's view. While it's active, the player will see out of the camera." 
[
	target(target_destination) : "Entity to Look At" : : "Name of the entity that the camera should point at and track while active."
	targetattachment(string) : "Target Attachment Name" : : "If set, the camera will focus on the specified attachment on the 'Entity to Look At'."
	wait(integer) : "Hold Time" : 10 : "The amount of time the camera should control the player's view for, after which it deactivates itself. If the camera should stay active until told to deactive, set the 'Infinite Hold Time' spawnflag."
	moveto(target_destination) : "Path Corner" : : "The first path corner in a track that the camera should move along once it's activated. If not specified, the camera won't move."
	interpolatepositiontoplayer(choices) : "Interpolate Position To Player" : 0 : "Gradually interpolate player's position to here on start. (Episodic only)" =
	[
		0 : "No"
		1 : "Yes"
	]
	spawnflags(flags) =
	[
		1: "Start At Player" : 1
		2: "Follow Player" : 1
		4: "Freeze Player" : 0
		8: "Infinite Hold Time" : 0
		16:"Snap to goal angles" : 0
		32:"Make Player non-solid" : 0
		64:"Interruptable by Player" : 0
	]
	speed(string) : "Initial Speed" : "0" : "The starting speed that the camera moves at, if it's on a path track."
	acceleration(string) : "Acceleration units/sec^2" : "500" : "The speed at which the camera accelerates to path corner's desired speeds."
	deceleration(string) : "Stop Deceleration units/sec^2" : "500" : "The speed at which the camera decelerates to path corner's desired speeds."

	// Inputs
	input Enable(void) : "Enable the point_viewcontrol, and start controlling the player's view."
	input Disable(void) : "Disable the point_viewcontrol, and stop controlling the player's view."

	// Outputs
	output OnEndFollow(void) : "Fired when the point_viewcontrol deactivates, due to the Disable input being received, the Entity to Look At being destroyed, or the Hold Time expiring."
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_player_destruction") = tf_logic_player_destruction : "Activates Player Destruction Modes."
[
	prop_model_name(studio) : "Beer Model" : "models/flag/flag.mdl" : "model of prop that drops from player on death"
	prop_drop_sound(sound) : "Beer Drop Sound" : "" : "sound when player drops prop"
	prop_pickup_sound(sound) : "Beer Pickup Sound" : "" : "sound when player picks up prop"
	loser_respawn_bonus_per_bot(float) : "Loser Respawn Bonus Per Bot (percentage)" : 0 : "How much faster the losing team will respawn per bot difference."
	score_interval(float) : "Robot Scoring Interval (in seconds)" : 1 : "How often a robot should score a point while hacking."

	red_respawn_time(float) : "Red Respawn Time (in seconds)" : 10 : "Respawn times for Red"
	blue_respawn_time(float) : "Blue Respawn Time (in seconds)" : 10 : "Respawn times for Blue"
	max_points(integer) : "Max Points" : 200 : "The number of points a team must get to unlock their win condition."
	finale_length(float) : "Finale Length" : 30 : "The amount of time from after max score is reached a team will win."
	res_file(string) : "HUD Res File" : "resource/UI/HudObjectiveRobotDestruction.res" : "What res file to use for the HUD"

	input ScoreRedPoints(void) : "Score points for red."
	input ScoreBluePoints(void) : "Score points for blue."
	input EnableMaxScoreUpdating(void) : "Allow the max score to update based on player count."
	input DisableMaxScoreUpdating(void) : "Disallow the max score to update based on player count."
	input SetCountdownTimer(integer) : "Set the countdown time and start the timer."
	input SetCountdownImage(string) : "Set the countdown image."
	input SetFlagResetDelay(integer) : "Set the length of time (in seconds) before a dropped flag resets."
	input SetPointsOnPlayerDeath(integer) : "Set number of points per flag dropped upon player death."

	red_respawn_time(float) : "Red Respawn Time (in seconds)" : 10 : "Respawn times for Red"
	blue_respawn_time(float) : "Blue Respawn Time (in seconds)" : 10 : "Respawn times for Blue"
	min_points(integer) : "Min Points" : 10 : "The minimum points to win"
	points_per_player(integer) : "Point Per Player" : 5 : "How many points to increase the max points by per player"
	finale_length(float) : "Finale Length" : 30 : "The amount of time from after max score is reached a team will win."
	res_file(string) : "HUD Res File" : "resource/UI/HudObjectivePlayerDestruction.res" : "What res file to use for the HUD"
	flag_reset_delay(integer) : "Beer Reset Delay (in seconds)" : 60 : "Length of time (in seconds) before a dropped flag resets."
	heal_distance(integer) : "Heal Distance" : 450 : "The distance for the team leader's ability to heal teammates."
	
	output OnBlueHitMaxPoints(void) : "Sent when Blue hits the max points."
	output OnRedHitMaxPoints(void) : "Sent when Red hits the max points."
	output OnBlueLeaveMaxPoints(void) : "Sent when blue goes from max points to fewer."
	output OnRedLeaveMaxPoints(void) : "Sent when red goes from max points to fewer."
	output OnBlueHitZeroPoints(void) : "Sent when Blue hits 0 points."
	output OnRedHitZeroPoints(void) : "Sent when Red hits 0 points"
	output OnBlueHasPoints(void) : "Sent when Blue goes from 0 to any points"
	output OnRedHasPoints(void) : "Sent when Red goes from 0 to any points"

	output OnRedFinalePeriodEnd(void) : "Sent when the red finale period ends."
	output OnBlueFinalePeriodEnd(void) : "Sent when the blue finale period ends."

	output OnRedFirstFlagStolen(void) : "Sent when red's first flag gets stolen."
	output OnRedFlagStolen(void) : "Sent when a flag gets stolen from red."
	output OnRedLastFlagReturned(void) : "Sent when red's last stolen flag gets returned."
	output OnBlueFirstFlagStolen(void) : "Sent when blue's first flag gets stolen."
	output OnBlueFlagStolen(void) : "Sent when a flag gets stolen from blue."
	output OnBlueLastFlagReturned(void) : "Sent when blue's last stolen flag gets returned."

	output OnRedScoreChanged(float) : "Send when score changes, and is a value representing total progress from [0..1]."
	output OnBlueScoreChanged(float) : "Send when score changes, and is a value representing total progress from [0..1]."

	output OnCountdownTimerExpired(void) : "Sent when the countdown timer expires."

	input RoundActivate(void)	:	"Reactivate."
]

@PointClass base(Targetname, RobotDestruction) iconsprite("editor-puddy/tf_logic_robot_destruction") = tf_logic_robot_destruction : "Activates Robots Destruction Modes."
[
	max_robots(float) : "Max Robots" : 0 : "How many Robot"
	score_interval(float) : "Robot Scoring Interval (in seconds)" : 1 : "How often a robot should score a point while hacking."
	loser_respawn_bonus_per_bot(float) : "Loser Respawn Bonus Per Bot (percentage)" : 0 : "How much faster the losing team will respawn per bot difference."
	red_respawn_time(float) : "Red Respawn Time (in seconds)" : 10 : "Respawn times for Red"
	blue_respawn_time(float) : "Blue Respawn Time (in seconds)" : 10 : "Respawn times for Blue"
	max_points(integer) : "Max Points" : 200 : "The number of points a team must get to unlock their win condition."
	finale_length(float) : "Finale Length" : 30 : "The amount of time from after max score is reached a team will win."
	res_file(string) : "HUD Res File" : "resource/UI/HudObjectiveRobotDestruction.res" : "What res file to use for the HUD"
	
	output OnBlueHitMaxPoints(void) : "Sent when Blue hits the max points."
	output OnRedHitMaxPoints(void) : "Sent when Red hits the max points."
	output OnBlueLeaveMaxPoints(void) : "Sent when blue goes from max points to fewer."
	output OnRedLeaveMaxPoints(void) : "Sent when red goes from max points to fewer."
	output OnBlueHitZeroPoints(void) : "Sent when Blue hits 0 points."
	output OnRedHitZeroPoints(void) : "Sent when Red hits 0 points"
	output OnBlueHasPoints(void) : "Sent when Blue goes from 0 to any points"
	output OnRedHasPoints(void) : "Sent when Red goes from 0 to any points"

	output OnRedFinalePeriodEnd(void) : "Sent when the red finale period ends."
	output OnBlueFinalePeriodEnd(void) : "Sent when the blue finale period ends."

	output OnRedFirstFlagStolen(void) : "Sent when red's first flag gets stolen."
	output OnRedFlagStolen(void) : "Sent when a flag gets stolen from red."
	output OnRedLastFlagReturned(void) : "Sent when red's last stolen flag gets returned."
	output OnBlueFirstFlagStolen(void) : "Sent when blue's first flag gets stolen."
	output OnBlueFlagStolen(void) : "Sent when a flag gets stolen from blue."
	output OnBlueLastFlagReturned(void) : "Sent when blue's last stolen flag gets returned."

	input RoundActivate(void)	:	"Reactivate."
]


@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/tf_logic_medieval") = tf_logic_medieval : "Enables Medieval mode."
[
]

@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/tf_logic_hybrid_ctf_cp") = tf_logic_hybrid_ctf_cp : "Enables Attack/Defend With Intelligence mode."
[
]

@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/tf_logic_mann_vs_machine") = tf_logic_mann_vs_machine : "Activates Mann VS Machine mode."
[
]

@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/tf_logic_arena") = tf_logic_arena : "Enables Arena Mode."
[	

	CapEnableDelay(float) : "Capture Point Enable Time" : 0

// Outputs
	output OnArenaRoundStart(void)	: "Fired the moment an arena match starts"
	output OnCapEnabled(void)	: "Fired when the specified time elapses and the cap becomes enabled"

]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_multiple_escort") = tf_logic_multiple_escort : "Activates Payload Race Mode."
[
]

@PointClass base(Targetname,EnableDisable) iconsprite("editor-puddy/tf_logic_mannpower") = tf_logic_mannpower : 	"Logic specifically for Mannpower Mode."
[	
]


@PointClass base(Targetname,MiniGame) iconsprite("editor-puddy/tf_logic_minigame") = tf_logic_minigames : "Minigame mode logic."
[
]

@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_minigame") = tf_base_minigame : "Base minigame"
[
	RedSpawn(target_source) : "Red Spawn Name" : "" : "The name of the spawnpoints for RED for this minigame"
	BlueSpawn(target_source) : "Blue Spawn Name" : "" : "The name of the spawnpoints for BLUE for this minigame"
	InRandomPool(choices) : "Put in Random Pool" : 1 : "If Yes, allowed to be chosen when told to go to a random minigame" =
	[
		0 : "No"
		1 : "Yes"
	]
	MaxScore(integer) : "Max Score" : 5 : "When a team hits this score, the On<Team>HitMaxScore output will be fired"
	hud_res_file(string) : "HUD Res File" : "" : "Res file to use for this minigame"
	your_team_score_sound(sound) : "Your Team Score Sound" : "" : "Sound file to play when your team scores a point"
	enemy_team_score_sound(sound) : "Enemy Team Score Sound" : "" : "Sound file to play when the enemy team scores a point"
	ScoreType(choices) : "Scoring Type" : 0 : "What to use for scoring" =
	[
		0 : "Points"
		1 : "Players alive"
	]
	SuddenDeathTime(float) : "Sudden Death Time" : -1 : "Time til sudden death starts (-1 for sudden death)"

	// Inputs
	input ScoreTeamRed(integer) : "Give points to team RED"
	input ScoreTeamBlue(integer) : "Give points to team BLUE"
	input ReturnFromMinigame(void) : "Force players to return from the current minigame."
	input ChangeHudResFile(string) : "Change the HUD resource file."

	// Outputs
	output OnReturnFromMinigame(void) : "Sent when players return from this minigame."
	output OnTeleportToMinigame(void) : "Sent when players arrive in this minigame."
	output OnRedHitMaxScore(void) : "Sent RED hits the max score for this minigame."
	output OnBlueHitMaxScore(void) : "Sent BLUE hits the max score for this minigame."
	output OnAllRedDead(void) : "Sent when the entire RED team is dead."
	output OnAllBlueDead(void) : "Send when the entire BLUE team is dead."
	output OnSuddenDeathStart(void) : "Sent when sudden death starts."
]


@PointClass base(Targetname,tf_base_minigame) iconsprite("editor-puddy/tf_logic_minigame") = tf_halloween_minigame : "Halloween 2014 Minigame"
[
	MinigameType(choices) : "Minigame Type" : 1 : "Which minigame is this" =
	[
		1 : "Halloween Collection"
		2 : "Halloween Platforms"
		3 : "Halloween Soccer"
	]

	input KartWinAnimationRed(void) : "Play win animation for all players in kart on team RED"
	input KartWinAnimationBlue(void) : "Play win animation for all players in kart on team BLUE"
	input KartLoseAnimationRed(void) : "Play lose animation for all players in kart on team RED"
	input KartLoseAnimationBlue(void) : "Play lose animation for all players in kart on team BLUE"

	input EnableSpawnBoss(string) : "Spawn Halloween boss HHH at specified target entity"
	input DisableSpawnBoss(void) : "Stop spawning Halloween boss"
]

@SolidClass base(Targetname, Parentname) = game_zone_player : 
	"An entity used to count the number of players within a zone."
[
	// Inputs
	input CountPlayersInZone(void) : "Count the number of players in the zone, and fire the corresponding outputs."

	// Outputs
	output OnPlayerInZone(void) : "Fired whenever a count finds a player inside the zone, with the player as the activator."
	output OnPlayerOutZone(void) : "Fired whenever a count finds a player outside the zone, with the player as the activator."
	output PlayersInCount(integer) : "Fired after a count, and contains the number of players found inside the zone."
	output PlayersOutCount(integer) : "Fired after a count, and contains the number of players found outside the zone."
]


@PointClass base(Targetname,tf_halloween_minigame) iconsprite("editor-puddy/tf_logic_minigame") = tf_halloween_minigame_falling_platforms : "Halloween 2014 Falling Platform Minigame"
[
	input ChoosePlatform(void) : "Fire to get the next SAFE platform and the next platform that wont come back"

	output OutputSafePlatform(void) : "Sends the index of the SAFE platform."
	output OutputRemovePlatform(void) : "Sends the index of the platform that shouldn't come back."
]


@PointClass base(Targetname) iconsprite("editor-puddy/tf_logic_training_mode") = tf_logic_training_mode : "Training logic entity. This is used to detect a training map."
[
	nextMap(choices) : "Next Map" : "" : "Next map to load when the current one is finished." =
	[
		"" : "None"
		"tr_dustbowl" : "tr_dustbowl"
		"tr_target"   : "tr_target"
	]

	// Inputs
	input ShowTrainingMsg(string) : "Show a training message, for training mode. The parameter should be the string entry in tf_english.txt"
	input ShowTrainingObjective(string) : "Sets a training objective to show to the player."
	input ForcePlayerSpawnAsClassOutput(void) : "Force the appropriate output to fire for the player spawning as a class.  You can use this to essentially ask what class the player is."
	input KickBots(void) : "Kicks all the bots from the server."
	input ShowTrainingHUD(void) : "Makes the training objective HUD visible."
	input HideTrainingHUD(void) : "Makes the training objective HUD hidden."
	input EndTraining(string) : "Ends training mode."
	input PlaySoundOnPlayer(string) : "Play a sound on the player."
	input WaitForTimerOrKeypress(target_destination) : "Wait for the logic_timer entity to fire on its interval or for a keypress from the player."
	input SetNextMap(string) : "Set the next map for training."
	input ForcePlayerSwapToWeapon(string) : "Forces the player to switch to the weapon."

	// Outputs
	output OnPlayerSpawnAsScout(void) : "Sent when the player spawns as a Scout."
	output OnPlayerSpawnAsSniper(void) : "Sent when the player spawns as a Sniper."
	output OnPlayerSpawnAsSoldier(void) : "Sent when the player spawns as a Soldier."
	output OnPlayerSpawnAsDemoman(void) : "Sent when the player spawns as a Demoman."
	output OnPlayerSpawnAsMedic(void) : "Sent when the player spawns as a Medic."
	output OnPlayerSpawnAsHeavy(void) : "Sent when the player spawns as a Heavy."
	output OnPlayerSpawnAsPyro(void) : "Sent when the player spawns as a Pyro."
	output OnPlayerSpawnAsSpy(void) : "Sent when the player spawns as a Spy."
	output OnPlayerSpawnAsEngineer(void) : "Sent when the player spawns as an Engineer."
	output OnPlayerDied(void) : "Sent when the player dies."
	output OnBotDied(void) : "Sent when a bot player dies."
	output OnPlayerSwappedToPrimary(void) : "Sent when the player swaps to the item in his primary weapon slot."
	output OnPlayerSwappedToSecondary(void) : "Sent when the player swaps to the item in his secondary weapon slot."
	output OnPlayerSwappedToMelee(void) : "Sent when the player swaps to the item in his melee weapon slot."
	output OnPlayerSwappedToBuilding(void) : "Sent when the player swaps to the item in his building weapon slot."
	output OnPlayerSwappedToPDA(void) : "Sent when the player swaps to the item in his pda weapon slot."
	output OnBuildOutsideArea(void) : "Sent when the player builds an object outside a suggested area."
	output OnPlayerDetonateBuilding(void) : "Sent when the player manually detonates one of their buildings."
]

@PointClass base(Targetname) iconsprite("editor-puddy/bot_controller") = bot_controller :
	"An entity used to create a bot, and then issue commands to it."
[
	TeamNum(choices) : "Team" : 2 : "Team" =
	[
		2 : "RED"
		3 : "BLU"
	]
	
	bot_class(choices) : "Class" : 0 : "The class the bot will spawn as." =
	[
		0 : "Random"
		1 : "Scout"
		2 : "Sniper"
		3 : "Soldier"
		4 : "Demoman"
		5 : "Medic"
		6 : "Heavy"
		7 : "Pyro"
		8 : "Spy"
		9 : "Engineer"
	]

	bot_name(string) : "Name of the bot."

	// Inputs
	input CreateBot(void) : "Create the bot for this controller."
	input RespawnBot(void) : "Force the bot to respawn."
	input AddCommandMoveToEntity(target_destination) : "Add a command to the bot's queue, telling it to move to the specified entity."
	input AddCommandAttackEntity(target_destination) : "Add a command to the bot's queue, telling it to attack the specified entity."
	input AddCommandSwitchWeapon(integer) : "Add a command to the bot's queue, telling it to switch to the specified weapon slot."
	input AddCommandDefend(float) : "Add a command to the bot's queue, telling it to defend the position it's standing at. The parameter specifies the distance from the point that the Bot is allowed to move to fight enemies."
	input SetIgnoreHumans(integer) : "Set whether or not the Bot should ignore human players. 1 = ignore, 0 = don't ignore."
	input PreventMovement(integer) : "Set whether or not the Bot is allowed to move. 1 = prevent movement, 0 = allow movement."
	input ClearQueue(void) : "Clear the bot's command queue."
	
	// Outputs
	output OnForceRespawn(void) : "Sent when the entity respawns the players."	
]


@PointClass base(Targetname) = tf_logic_bonusround : "Bonus Round Logic" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellmeteorshower : "Meteor Spell Particle" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellfireball : "FireBall Spell Particle" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellspawnzombie : "Skeleton Spell" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_lightningorb : "Lightning orb Spell" []
@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_mechanicalarmorb : "Short Circuit orb" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_arrow.mdl") = tf_projectile_arrow : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/c_xms_festive_ornament.mdl") = tf_projectile_ball_ornament : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_balloffire : "Dragon's Fury's Flame" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/c_sd_cleaver/c_sd_cleaver.mdl") = tf_projectile_cleaver : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_energy_ball : "Cow Mangler 5000 Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_energy_ring : "Righteous Bison Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_flaregun_shell.mdl") = tf_projectile_flare : "Flare Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/c_grappling_hook/c_grappling_hook.mdl") = tf_projectile_grapplinghook : "Grappling Hook Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_repair_claw.mdl") = tf_projectile_healing_bolt : "Rescue Ranger Arrow" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/urinejar.mdl") = tf_projectile_jar : "Jarate" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/c_gascan/c_gascan.mdl") = tf_projectile_jar_gas : "Gas Passer Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/c_models/c_madmilk/c_madmilk.mdl") = tf_projectile_jar_milk : "Mad Milk Projectile" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_grenade_grenadelauncher.mdl") = tf_projectile_pipe : "Pipe Bomb" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_stickybomb.mdl") = tf_projectile_pipe_remote : "Sticky Bomb" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_rocket.mdl") = tf_projectile_rocket : "Rocket" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/buildables/sentry3_rockets.mdl") = tf_projectile_sentryrocket : "Sentry Level 3 Rockets" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellbats : "Bats spell" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellkartbats : "Bumper Car's Bats spell" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellkartorb : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellmirv : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spellpumpkin : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/props_mvm/mvm_human_skull_collide.mdl") = tf_projectile_spellspawnboss : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/props_mvm/mvm_human_skull_collide.mdl") = tf_projectile_spellspawnhorde : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/props_mvm/mvm_human_skull_collide.mdl") = tf_projectile_spellspawnzombie : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_spelltransposeteleport : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_baseball.mdl") = tf_projectile_stun_ball : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) studio("models/weapons/w_models/w_syringe_proj.mdl") = tf_projectile_syringe : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_throwable : "" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_throwable_breadmonster : "Self-Aware Beauty Mark" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_throwable_brick : "Bread that hurts people" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_throwable_repel : "Unused Balloon with no model" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = tf_projectile_mechanicalarmorb : "Short Circult Enegry Ball" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) = item_sodacan : "soda can from hl1s" []

@PointClass base(Targetname,PTeamNum,PBaseVelocity) iconsprite("editor-puddy/halloween_souls_pack") = halloween_souls_pack : "GARGOYLE SOUL" []

@PointClass base(Targetname, Studiomodel, RenderFields) studio("models/props_skybox/skybox_carrier.mdl" = entity_carrier : "Skybox Robot Carrier"
[
	model(studio) : "Model" : "models/props_skybox/skybox_carrier.mdl" : "Change the model to something other than the default model." 
]

@PointClass base(Targetname, Studiomodel, RenderFields) studio("models/props_skybox/grocket_001.mdl" = entity_rocket : "Skybox Grocket" 
[
	model(studio) : "Model" : "models/props_skybox/grocket_001.mdl" : "Change the model to something other than the default model." 
]
@PointClass base(Targetname, Studiomodel, RenderFields) studio("models/props_teaser/saucer.mdl") = entity_saucer : "Skybox Saucer"
[
	model(studio) : "Model" : "models/props_teaser/saucer.mdl" : "Change the model to something other than the default model." 
]

@PointClass base(Targetname, Studiomodel, RenderFields) studio("models/props_teaser/update_invasion_poster001.mdl") = entity_sign : "Invaison Sign" 
[
	model(studio) : "Model" : "models/props_teaser/update_invasion_poster001.mdl" : "Change the model to something other than the default model." 
]

@PointClass base(Targetname, Parentname, Angles, RenderFields) studio("models/soldier_statue/soldier_statue.mdl") = entity_soldier_statue : "Rick May Soldier Statue" 
[
	skin(integer) : "Skin" : 0 : "Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin instead of the default."
	modelscale(float) : "Model Scale" : "1.0" : "A multiplier for the size of the model."

	disableshadows(choices) : "Disable Shadows" : 0 : "Used to disable dynamic shadows on this entity." =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Skin(integer) : "Changes the model skin to the specified number."
	input DisableShadow(void) : "Turn shadow off."
	input EnableShadow(void) : "Turn shadow on."
	input AlternativeSorting(bool) : "Used to attempt to fix sorting problems when rendering. True activates, false deactivates"
	input SetModelScale(string) : "Takes two values separated by a space. The first is the target model scale. The second value is the number of seconds the change in scale will be spread over."

	// Outputs
	output OnIgnite(void) : "Fired when this object catches fire."
]

@PointClass base(Targetname, Parentname, Angles, PTeamNum) studio("models/weapons/w_models/w_arrow.mdl") = archer_proxy : "INSANE AUTOMATIC SHOOTIN ARROWS" []

@PointClass base(Targetname, Parentname, Angles) = env_movieexplosion : "cartoonic bubbles explosion" []

@PointClass base(Targetname, Parentname, Angles) = env_rockettrail : "HL2 Rocket Muzzle Flash" []

// AI 'n' hl2

//-------------------------------------------------------------------------
//
// Scripted Events
//
//-------------------------------------------------------------------------

@BaseClass base(Targetname, Parentname, Angles) color(255 0 255) sphere(m_flRadius) = BaseScripted
[
	m_iszEntity(target_destination) : "Target NPC" : : "The name or class name (such as 'npc_zombie') of an NPC to use for this script."
	m_iszIdle(string) : "Pre Action Idle Animation" : "" : "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play before the action animation if the NPC must wait for the script to be triggered. Use 'Start on Spawn' flag or MoveToPosition input to play this idle animation."
	m_iszEntry(string) : "Entry Animation" : "" : "The name of the sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play when the sequence starts, before transitioning to play the main action sequence."
	m_iszPlay(string) : "Action Animation" : "" : "The name of the main sequence (such as 'reload02') or activity (such as 'ACT_RELOAD') to play."
	m_iszPostIdle(string) : "Post Action Idle Animation" : "" : "The name of the sequence (such as 'idle01') or activity (such as 'ACT_IDLE') to play after the action animation."
	m_iszCustomMove(string) : "Custom Move Animation" : "" : "Used in conjunction with the 'Custom movement' setting for the 'Move to Position' property, specifies the sequence (such as 'crouch_run01') or activity (such as 'ACT_RUN') to use while moving to the scripted position."
	m_bLoopActionSequence(Choices) : "Loop Action Animation?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	m_bSynchPostIdles(Choices) : "Synch Post Idles?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	m_flRadius(integer) : "Search Radius (0=everywhere)" : 0 : "Radius to search within for an NPC to use. 0 searches everywhere."
	m_flRepeat(integer) : "Repeat Rate ms" : 0
	m_fMoveTo(Choices) : "Move to Position" : 1 =
	[
		0 : "No"
		1 : "Walk"
		2 : "Run"
		3 : "Custom movement"
		4 : "Instantaneous"
		5 : "No - Turn to Face"
	]
	m_iszNextScript(target_destination) : "Next Script" : : "The name of the script to run immediately after this script completes. The NPC will not return to AI between the two scripts."
	m_bIgnoreGravity(choices) : "Ignore Gravity on NPC during script" : 0 : "If this is set to 'Yes', the NPC will not be subject to gravity while playing this script." =
	[
		0 : "No"
		1 : "Yes"
	]
	m_bDisableNPCCollisions(choices) : "Disable NPC collisions during script" : 0 : "Useful for when NPCs playing scripts must interpenetrate while riding on trains, elevators, etc. This only disables collisions between the NPCs in the script and must be enabled on BOTH scripted_sequences." =
	[
		0 : "No"
		1 : "Yes"
	]


	// Inputs
	input BeginSequence(void) : "Summons an NPC to act out the scripted sequence."
	input MoveToPosition(void) : "Summons an NPC to the script location. They will play their scripted idle (or ACT_IDLE if none is specified) until BeginSequence is triggered."
	input CancelSequence(void) : "Stops the scripted sequence. If fired after a sequence starts, this input will not take effect until the NPC finishes playing the scripted action animation."

	// Outputs
	output OnBeginSequence(void) : "Fires when the action animation begins playing."
	output OnEndSequence(void) : "Fires when the action animation completes."
	output OnCancelSequence(void) : "Fires when the sequence is cancelled."
	output OnCancelFailedSequence(void) : "Fires when the sequence is cancelled without ever playing (OnCancelSequence will also fire)."
	output OnScriptEvent01(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 1 } in the QC."
	output OnScriptEvent02(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 2 } in the QC."
	output OnScriptEvent03(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 3 } in the QC."
	output OnScriptEvent04(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 4 } in the QC."
	output OnScriptEvent05(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 5 } in the QC."
	output OnScriptEvent06(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 6 } in the QC."
	output OnScriptEvent07(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 7 } in the QC."
	output OnScriptEvent08(void) : "Fires when a 'trigger' anim event occurs while playing the script. Use { event 1003 framenum 8 } in the QC."
]

@PointClass sphere() iconsprite("editor/scripted_sentence.vmt") base(Targetname) = scripted_sentence : "Scripted Sentence"
[
	spawnflags(Flags) = 
	[
		1 : "Fire Once"  : 1
		2 : "Followers Only" : 0
		4 : "Interrupt Speech" : 1
		8 : "Concurrent" : 0
		16 : "Speak to Activator" : 1
	]

	sentence(string) : "Sentence Name" : ""
	entity(string) : "Speaker Type"
	delay(string) : "Additional Sentence Time" : "0"
	radius(integer) : "Search Radius" : 512
	refire(string) : "Delay Before Refire" : "3"
	listener(string) : "Listener Type"
	volume(string) : "Volume 0-10" : "10"
	attenuation(Choices) : "Sound Radius" : 0 =
	[
		0 : "Small Radius"
		1 : "Medium Radius"
		2 : "Large  Radius"
		3 : "Play Everywhere"
	]

	// Inputs
	input BeginSentence(void) : "Starts the scripted sentence."

	// Outputs
	output OnBeginSentence(void) : "Fires when the sentence begins"
	output OnEndSentence(void) : "Fires when the sentence ends"
]

@PointClass base(Targetname, Parentname) iconsprite("editor/info_target.vmt")  = scripted_target : "Scripted Target"
[
	StartDisabled(choices) : "Start Disabled" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	m_iszEntity(npcclass) : "Target NPC"
	m_flRadius(integer) : "Search Radius (0=everywhere)" : 0 : "Radius to search within for an NPC to use. 0 searches everywhere."

	MoveSpeed(integer) : "Move Speed" : 5			// How quickly should target move between scripted targets
	PauseDuration(integer) : "Pause Duration" : 0		// How long should target pause at scripted target
	EffectDuration(integer) : "Effect Duration" : 2		// How long should any associated effect last

	target(target_destination) : "Next Target"		// Next scripted target

	// Inputs
	input Enable(void) : "Enable this entity"
	input Disable(void) : "Disable this entity"

	// Outputs
	output AtTarget(void) : "Fires when NPC reaches this target"
	output LeaveTarget(void) : "Fires when NPC leaves this target"
]

@PointClass base(Targetname) iconsprite("editor/ai_relationship.vmt") sphere() = ai_relationship : 
	"AI Relationship - Sets relationships between groups of NPCs in the AI."
[
	subject(target_name_or_class) : "Subject(s)" : "" : "This is the NPC(s) whose disposition will change. May be a targetname or a classname."
	target(target_name_or_class) : "Target(s)" : "" : "This is the NPC(s) about whom the Subject(s) will change their disposition. May be a tarGetname or a classname."
	disposition(choices) : "Disposition" : 3 : "Choose the way the Subject(s) should feel about the Target(s)" =
	[
		// These MUST match the enum in the code! (basecombatcharacter.h)
		1 : "Hate"
		2 : "Fear"
		3 : "Like"
		4 : "Neutral"
	]

	radius(float) : "Radius for subject" : 0

	rank(integer) : "Disposition Priority" : 0 : "How much the Subject(s) should Like/Hate/Fear the Target(s). Higher priority = stronger feeling."

	StartActive(choices) : "Start Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	Reciprocal(choices) : "Reciprocal" : 0 : "Set this to YES to have the new relationship mirrored by Target"  =
	[
		0 : "No"
		1 : "Yes"
	]

	spawnflags(flags) =
	[
		1 : "Notify subject of target's location" : 0
		2 : "Notify target of subject's location" : 0
	]
	
	// Inputs
	input ApplyRelationship(void) : "Apply relationship changes. This will change all Subject entities' relationships to all Target entities. \n\nIMPORTANT: Once you ApplyRelationships, this entity is then 'ALWAYS ON' until you send a Disable input or RevertRelationship input. During the time this entity is 'ON', any entities that spawn who match the Subject or Target names will be affected. \n\nIMPORTANT: Unpredictable results may occur when two ai_relationship entities refer to the same set or subset of target or subject entities. This situation should be avoided."

	input RevertRelationship(void) : "Revert relationship changes. This will return the relationship to what it was at the time the ApplyRelationship input was called (or when this ai_relationship was spawned if StartActive is set)."
	input RevertToDefaultRelationship(void) : "Revert relationship changes to the default relationship, which may have changed since this ai_relationship was applied. This returns control of the entity relationship to the code."
]

@PointClass base(Targetname) = ai_ally_manager : "AI Ally Manager"
[
	maxallies(integer) : "Maximum number of allies" : 5
	maxmedics(integer) : "Maximum number of medics" : 1

	// Inputs
	input SetMaxAllies(integer) : "Set maximum number of allies"
	input SetMaxMedics(integer) : "Set maximum number of medic allies"
	input Replenish(void) : "Replenish player allies"

	// Outputs
	output SpawnMedicAlly(void) : "Spawn Medic Ally"
	output SpawnAlly0(void) : "Spawn Ally 0"
	output SpawnAlly1(void) : "Spawn Ally 1"
	output SpawnAlly2(void) : "Spawn Ally 2"
	output SpawnAlly3(void) : "Spawn Ally 3"
	output SpawnAlly4(void) : "Spawn Ally 4"
	output SpawnAlly5(void) : "Spawn Ally 5"
	output SpawnAlly6(void) : "Spawn Ally 6"
	output SpawnAlly7(void) : "Spawn Ally 7"
	output SpawnAlly8(void) : "Spawn Ally 8"
	output SpawnAlly9(void) : "Spawn Ally 9"

	output OnZeroAllies(void) : "Fires when there are no more allies"
	output OnZeroMedicAllies(void) : "Fires when there are no more allies"
]

@BaseClass base(Targetname) = LeadGoalBase
[
	actor(target_name_or_class) : "Actor(s) to affect"
	goal(string) : "Target Entity"
	WaitPointName(target_destination) : "Point to wait at if the target's not visible"
	WaitDistance(float) : "Wait until player gets this close"
	LeadDistance(float) : "Lead Distance" : "64" : "The player is considered to be lagging if he's beyond this distance.  The Actor will consider retrieving when the player is 4x 'Lead Distance' away."
	RetrieveDistance(float) : "Retrieve Distance" : "96" : "The distance from the player that the NPC should return to when retrieving a lagging player. Must be between ('Lead Distance' + 24) and ('Lead Distance' * 4) to avoid the leader ping-ponging."
	SuccessDistance(float) : "Success Distance" : "0" : "The distance from the player (to the NPC) that the player must be within for the Lead to succeed, once the NPC has reached the goal. If set to 0, it'll use the lead distance instead (for legacy support)."
	Run(choices) : "Run instead of Walk" : "0" =
	[
		"0" : "No"
		"1" : "Yes"
	]

	Retrieve(choices) : "Retrieve player?" : 1 =
	[
		0 : "No, just idle and wait"
		1 : "Yes, move to retrieve"
	]	
	ComingBackWaitForSpeak(choices) : "Before Coming Back, Wait for speech?" : 1 =
	[
		0 : "No, come back while speaking"
		1 : "Yes, wait for speech to finish"
	]
	RetrieveWaitForSpeak(choices) : "On Retrieve, Wait for speech?" : 1 =
	[
		0 : "No, start leading while speaking"
		1 : "Yes, wait for speech to finish"
	]
	DontSpeakStart(choices) : "Speak start greeting?" : 0 =
	[
		0 : "Yes, speak the start greeting"
		1 : "No, don't speak the greeting"
	]
	LeadDuringCombat(choices) : "Lead during combat?" : 0 =
	[
		0 : "No. Stop to fight, resume leading when safe."
		1 : "Yes, lead while fighting."
	]
	GagLeader(choices) : "Gag Leader?" : 0 =
	[
		0 : "No. Speak lead concepts normally, respecting other lead speech settings."
		1 : "Yes, don't speak any lead concepts at all, overriding all other lead speech settings."
	]
	
	AttractPlayerConceptModifier(string)	: "Attract player concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_ATTRACTPLAYER' concept is spoken."
	WaitOverConceptModifier(string)		: "Player wait over concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_WAITOVER' concept is spoken."
	ArrivalConceptModifier(string)		: "Arrival concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_ARRIVAL' concept is spoken."
	PostArrivalConceptModifier(string)	: "Post-arrival concepts modifier"
	SuccessConceptModifier(string)		: "Success concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_SUCCESS' concept is spoken."
	FailureConceptModifier(string)		: "Failure concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'lead_fail' concept is spoken."
	ComingBackConceptModifier(string)	: "Coming Back concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_RETRIEVE' concept is spoken. Spoken as the NPC starts returning to the player to retrieve him."
	RetrieveConceptModifier(string)		: "Retrieve concept modifier" : "" : "Appended to the keyvalues passed into the response rules when the 'TLK_LEAD_COMINGBACK' concept is spoken. Spoken when NPC has finally reached the player to retrieve him."
	
	// Spawnflags
	spawnflags(Flags) = 
	[
		1 : "No def success" : 0
		2 : "No def failure" : 0
		4 : "Use goal facing" : 1
	]

	// Inputs
	input Activate( void )  : "Begin the leading behavior"
	input Deactivate( void )  : "Stop the leading behavior"
	
	input SetSuccess( void ) : "Notify success of leading"
	input SetFailure( void ) : "Notify failure of leading"
	
	// Outputs
	output OnArrival( void ) : "Fires when NPC reaches the lead point"
	output OnArrivalDone( void ) : "Fires when NPC has played out any arrival speech"
	output OnSuccess( void ) : "Fires when NPC achieves the goal"
	output OnFailure( void ) : "Fires when NPC fails to achieves the goal"
	output OnDone( void ) : "Fires when NPC completes behavior (any post-success or fail acting is complete)"
]

@PointClass base(LeadGoalBase) iconsprite("editor/ai_goal_lead.vmt") = ai_goal_lead : "AI Goal Lead"
[
	SearchType(choices) : "Search Type" : 0 : "How to search for the entities using the targetname." = 
	[
		0 : "Entity Name"
		1 : "Classname"
	]
]

@PointClass base(LeadGoalBase) iconsprite("editor/ai_goal_lead.vmt") = ai_goal_lead_weapon : 
	"AI Goal Lead (Weapon). A version of the ai_goal_lead entity that requires the player to have the specified weapon before the Actor(s) will lead the player to their target."
[
	WeaponName(choices) : "Weapon" : "weapon_bugbait" =
	[
		"weapon_bugbait" : "Bugbait"
		"weapon_smg1" : "SMG1"
		"weapon_ar2"  : "AR2"
	]

	MissingWeaponConceptModifier(string) : "Missing weapon concept modifier"
	
	SearchType(choices) : "Search Type" : 0 : "How to search for the entities using the targetname." = 
	[
		0 : "Entity Name"
		1 : "Classname"
	] 
]

@BaseClass base(Targetname) = FollowGoal
[
	actor(target_name_or_class) : "Actor(s) to affect"
	goal(string) : "Target Entity" : : "The name of the entity to follow. If blank, and the actor likes the player, then defaults to player"

	SearchType(choices) : "Search Type" : 0 : "How to search for the entities using the targetname." = 
	[
		0 : "Entity Name"
		1 : "Classname"
	] 

	StartActive(choices) : "Start Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	MaximumState(choices) : "Maximum state" : 1 =
	[
		1 : "Idle"
		2 : "Alert"
		3 : "Combat"
	]

	Formation(choices) : "Formation" : 0 =
	[
		0 : "Close circle"
		1 : "Wide circle"
		5 : "Medium circle"
		6 : "Sidekick"
		8 : "Vortigaunt"
	]

	// Inputs
	input Activate( void ) : "Begin the follow behavior"
	input Deactivate( void ) : "Cease the follow behavior"
]

@PointClass base(FollowGoal) iconsprite("editor/ai_goal_follow.vmt") = ai_goal_follow : "AI Goal Follow"
[
]

@PointClass base(FollowGoal) iconsprite("editor/ai_goal_follow.vmt") = ai_goal_injured_follow : "AI Goal Injured Follow"
[
]

@PointClass size( -4 -4 -4, 4 4 4 ) base(Targetname, Angles, Parentname) studio("models/pigeon.mdl") = ai_battle_line : "Battle line"
[																									  
	// Spawnflags
	spawnflags(Flags) = 
	[
		1 : "Use parent's orientation" : 0
	]

	actor(target_name_or_class) : "Actor(s) or squad to affect"

	Active(choices) : "Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	Strict(choices) : "Strict" : 1 : "Player orders can override, applies to allies only" =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Activate(void)
	input Deactivate(void)
]


@PointClass base(Targetname) iconsprite("editor/ai_goal_standoff.vmt") = ai_goal_standoff : "AI Goal Standoff"
[
	actor(target_name_or_class) : "Actor(s) to affect"
//	goal(string) : "Target Entity (self by default) [NOT IMPLEMENTED]"

	SearchType(choices) : "Search Type" : 0 : "How to search for the entities using the targetname." = 
	[
		0 : "Entity Name"
		1 : "Classname"
	] 

	StartActive(choices) : "Start Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	HintGroupChangeReaction(Choices) : "Reaction to tactical change" : 1 : "What to do if leader moves, threat is neutralized, hint group changes, etc" =
	[
		0 : "Move when ready (default AI)"
		1 : "Move when seek cover"
		2 : "Move immediately"
	]

	Aggressiveness(Choices) : "Aggressiveness" : 2 =
	[
		0 : "Very low"
		1 : "Low"
		2 : "Medium"
		3 : "High"
		4 : "Very High"
		// Custom agression disabled
		// 		100 : "Custom"
	]

	PlayerBattleline(choices) : "Player battleline" : 1 : "Player defines a battle line, applies to allies only" =
	[
		0 : "No"
		1 : "Yes"
	]

	StayAtCover(choices) : "Stay at cover location" : 0 : "When have suitable cover, don't change it (disables advancing to battle line)" =
	[
		0 : "No"
		1 : "Yes"
	]

	AbandonIfEnemyHides(choices) : "Abandon if enemies hide" : 0 : "If no enemy detected recently, stop the standoff" =
	[
		0 : "No"
		1 : "Yes"
	]

	// Custom aggression
//	CustomCoverOnReload(choices) : "Custom: Take cover to reload" : 1 =
//	[
//		0 : "No"
//		1 : "Yes"
//	]
//	CustomMinTimeShots(float) : "Custom: Min time wait to shoot"	  : 2 : "Minimum duration of time after a burst of shooting before trying again"
//	CustomMaxTimeShots(float) : "Custom: Max time wait to shoot"	  : 4 : "Minimum duration of time after a burst of shooting before trying again"
//	CustomMinShots(integer) : "Custom: Min shots in a burst"	  : 1
//	CustomMaxShots(integer) : "Custom: Max shots in a burst"	  : 4
//	CustomOddsCover(integer) : "Custom: Odds cover on damage"	  : 25 : "If damaged, the chances react by taking immediate cover"

	// Inputs
	input Activate( void ) : "Begin contesting position"
	input Deactivate( void ) : "Cease contesting position"
	input SetAggressiveness(integer) : "Set aggressiveness"
]


@PointClass base(Targetname, Parentname, Angles) iconsprite("editor/assault_rally.vmt") line(255 255 255, targetname, assaultpoint) = assault_rallypoint : 
	"(Assault) rally point"
[
	assaultpoint(target_destination)  : "Assault Point" : "" : "Location to move to as assault begins"
	assaultdelay(float) : "Assault Delay" : 0 : "How long to wait after cue is given before assault begins."
	rallysequence(string) : "Rally Sequence" : "" : "Override the NPC's wait activity by entering a sequence name."
	priority(integer) : "Priority" : 1 : "Higher priority rally points get selected first."

	forcecrouch(choices) : "Force Crouch" : 0 : "NPCs using this assault point are forced into crouching while holding it." =
	[
		0 : "No"
		1 : "Yes"
	]

	urgent(choices) : "Urgent" : 0 : "If true, NPCs will consider movement to this rally point as Urgent Navigation." =
	[
		0 : "No"
		1 : "Yes"
	]

	output OnArrival(void) : "Fires when the NPC reaches this rally point"
]

@PointClass base(Targetname, Parentname, Angles) iconsprite("editor/assault_point.vmt") line(255 255 255, targetname, nextassaultpoint) = assault_assaultpoint : 
	"(Assault) assault point"
[
	assaultgroup(string)  : "Assault Hint Group" : "" : "NPC's movements are constrained to this hint group once assault has begun"
	nextassaultpoint(target_destination) : "Next assault point (optional)"
	assaulttimeout(float) : "Assault time out" : "3.0" : "This point is cleared when no enemies are seen for this long (seconds)"
	clearoncontact(choices) : "Clear on contact with enemies" : 0 : "If you come in contact with enemies while approaching the assault point, clear our assault point" =
	[
		0 : "No"
		1 : "Yes"
	]
	allowdiversion(choices) : "Allow diversion" : 0 : "If you come in contact with enemies while approaching the assault point, divert to kill them. Resume the assault once contact is lost." =
	[
		0 : "No"
		1 : "Yes"
	]

	allowdiversionradius(float) : "Diversion Proximity" : 0 : "If Allow Diversion is set, NPC will only divert from assault to attack an enemy that is within this distance of the assault point. 0 = No limit."

	nevertimeout(choices) : "Never Timeout" : 0 : "If set, the assault never ends for NPCs assaulting this point. Useful for forcing NPCs back to a point." =
	[
		0 : "No"
		1 : "Yes"
	]

	strict(choices) : "Strict?" : 0 =
	[
		0 : "No, NPC may move from point to attack"
		1 : "Yes, NPC may not move to attack"
	]

	spawnflags(Flags) = 
	[
		1 : "Clear this point upon arrival, UNCONDITIONALLY" : 0
	]

	forcecrouch(choices) : "Force Crouch" : 0 : "NPCs using this assault point are forced into crouching while holding it." =
	[
		0 : "No"
		1 : "Yes"
	]

	urgent(choices) : "Urgent" : 0 : "If true, NPCs will consider movement to this assault point as Urgent Navigation." =
	[
		0 : "No"
		1 : "Yes"
	]

	assaulttolerance(choices) : "Attack Tolerance" : 36 : "How far this NPC may move from the assault point to try to attack an enemy." =
	[
		36 : "Tight (3ft)"
		72 : "Medium (6ft)"
		120 : "Large (10ft)"
	]


	// Inputs
	input SetClearOnContact(integer) : "Set the clear on contact flag. NPCs who spot enemies while running to the assault point, or while waiting at it, will immediately Clear it."
	input SetAllowDiversion(integer) : "Set the allow diversion flag. NPCs who spot enemies whil running to the assault point, or while waiting on it, will divert away (leave Assault mode) to deal with the enemies. Upon losing enemies, they'll go back to Assault mode, and return to this assault point."
	input SetForceClear(integer) : "Set the Force Clear flag. NPCs who are currently running to the assault point will Clear it immediately. NPCs who acquire it in the future will Clear it automatically."

	// Outputs
	output OnArrival(void) : "Fires when the NPC reaches this assault point"
	output OnAssaultClear(void) : "Fires when this assault point is cleared of enemies"
]

@PointClass base(Targetname) = ai_goal_assault : 
	"AI Goal Assault"
[
	actor(target_name_or_class) : "Actor(s) to affect" : "" : "NPC's that should perform this assault"
	rallypoint(target_destination) : "Rally Point Set" : "" : "Root name of rally points for this assault. Use an asterisk '*' after the root name to match all with the same root."

	SearchType(choices) : "Search Type" : 0 : "How to search for the entities using the targetname." = 
	[
		0 : "Entity Name"
		1 : "Classname"
	] 

	StartActive(choices) : "Start Active" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	AssaultCue(choices) : "Assault Cue" : 1 =
	[
		1 : "Entity System Input"
		2 : "Gunfire"
		3 : "Don't wait for a cue."
	]

	RallySelectMethod(choices) : "Rally Point Selection Method" : 0 = 
	[
		0 : "Priority, Distance (default)"
		1 : "Random"
	]


	// Inputs
	input Activate( void ) : "Begin the assault behavior"
	input Deactivate( void ) : "Cease the assault behavior"
	input BeginAssault( void ) : "Begin assault phase"
]


@PointClass base(Targetname) size(-8 -8 -8, 8 8 8) = ai_changetarget : "Change Target"
[
	target(target_destination) : "Target entity" : : "Name of entity whose target will be changed."
	m_iszNewTarget(string) : "New Target"

	// Inputs
	input Kill( void ) : "Removes this entity from the world"
	input Activate( void ) : "Changes the entities target"
]

@PointClass base(Targetname) sphere(Radius)  size(-8 -8 -8, 8 8 8) = ai_changehintgroup : "Change Hint Group"
[
	SearchType(choices) : "Search Type" : 0 : "How to search for the entities to change." = 
	[
		0 : "Entity Name"
		1 : "Classname"
		2 : "Old Hint Group"
	] 
	SearchName(string) : "Name to search for"
	NewHintGroup(string) : "New Hint Group"
	Radius(string) : "Search Radius" : "0.0" : "Radius to search (0 for all of map)"
	hintlimiting(choices) : "Hint Limit Nav" : 0 : "Limits NPC to using specified hint group for navigation requests, does not limit local navigation." =
	[
		0 : "No"
		1 : "Yes"
	]

	input Kill( void ) : "Removes this entity from the world"
	input Activate( void ) : "Change the Hint Group"
]


@PointClass base(Targetname) = ai_script_conditions : "AI Script Conditions"
[
	Actor(target_destination) : "Actor" : : "NPC Target"
	
	StartDisabled(choices) : "Start Disabled" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	MinimumState(choices) : "Minimum state" : 1 =
	[
		1 : "Idle"
		2 : "Alert"
		3 : "Combat"
	]

	MaximumState(choices) : "Maximum state" : 3 =
	[
		1 : "Idle"
		2 : "Alert"
		3 : "Combat"
	]
	
	ScriptStatus(choices) : "Actor is running a script?" : 2 =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]
		
	RequiredTime(float) : "Required Time"	  : 0 : "Duration of time that all the conditions must be true"
	MinTimeout(float) : "Minimum time out"  : 0 : "Minimum time before OnConditionsTimeout is fired. 0 = never expire."
	MaxTimeout(float) : "Maximum time out"  : 0 : "Maximum time before OnConditionsTimeout is fired. 0 = ignore (If you don't specify a Maximum timeout, conditions will time out at exactly Minimum Time Out. If you DO specify a Maximum time out, timeout will occur randomly between Minimum and Maximum time out values.)"
	
	ActorSeePlayer(choices) : "Actor Sees Player" : 2 =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	PlayerActorProximity(float) : "Player distance"  : 0 : "The distance the player must/must not be to the actor. Negative values for NOT, 0 for ignore."
	PlayerActorFOV(float) : "Player FOV for Actor " : 360 : "Specify angle of view cone in degrees. Negative value = NOT"
	PlayerActorFOVTrueCone(choices ) : "Play FOV to Actor is a true view cone" : 0 : "Player's view cone is evaluated as a true cone, not pie slice " = 
	[
		0 : "No - Tall pie slice"
		1 : "Yes - True view cone"
	]

	PlayerActorLOS(choices) : "Player has LOS to Actor" : 2 : "Checks that the player has clear Line of Sight to the Actor" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]


	target(target_destination) : "Target (Optional)" : : "Optional entity to include in conditions"
	ActorSeeTarget(choices)  : "Actor Sees Target" : 2 =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	ActorTargetProximity(float) : "Target distance"  : 0 : "The distance the actor must/must not be to the Target. Negative values for NOT, 0 for ignore."
	PlayerTargetProximity(float) : "Player distance from Target"  : 0 : "The distance the player must/must not be to the Target. Negative values for NOT, 0 for ignore."
	PlayerTargetFOV(float) : "Player FOV for Target" : 360 : "Specify angle of view cone in degrees. Negative value = NOT"
	PlayerTargetFOVTrueCone(choices ) : "Play FOV to Target is a true view cone" : 0 : "Player's view cone is evaluated as a true cone, not pie slice " = 
	[
		0 : "No - Tall pie slice"
		1 : "Yes - True view cone"
	]

	PlayerTargetLOS(choices) : "Player has LOS to Target" : 2 : "Checks that the player has clear Line of Sight to the Target" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]
	
	PlayerBlockingActor(choices) : "Player blocking Actor" : 2 : "Checks that the player is blocking the Actor's path" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	ActorInPVS(choices)	: "Actor in Player's PVS" : 2 : "Checks that the actor is in the player's PVS" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	ActorInVehicle(choices)	: "Actor in a vehicle" : 2 : "Checks the actor's state in a vehicle" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	PlayerInVehicle(choices)	: "Player in a vehicle" : 2 : "Checks the player's state in a vehicle" =
	[
		0 : "No"
		1 : "Yes"
		2 : "Don't care"
	]

	spawnflags(Flags) = 
	[
		1 : "Fire outputs with the Actor as Activator"	: 0
	]

	// Inputs
	input Enable(void) : "Enable this entity"
	input Disable(void) : "Disable this entity"

	// Outputs
	output OnConditionsSatisfied(void) : "Fires when AI conditions satisfied"
	output OnConditionsTimeout(void)   : "Fires when AI conditions timed out"
	output NoValidActor(void) : "Fires if/when there are no matching actors in the map."
]

@SolidClass base(Targetname, PTeamNum, EnableDisable) = func_croc : "Crocodiles live here!"
[
	filtername(filterclass) : "Filter Name" : : "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."
	// Outputs
	output OnEat(void) : "Sent when the crocs eat a player."
	output OnEatRed(void) : "Sent when the crocs eat a player on team RED."
	output OnEatBlue(void) : "Sent when the crocs eat a player on team BLU."
]

@PointClass base(Targetname,Studiomodel) studio("models/props_island/crocodile/crocodile.mdl") = entity_croc : "Crocodile" 
[
	model(studio) : "Model" : "models/props_island/crocodile/crocodile.mdl" : "Change the model to something other than the default model." 
]


@PointClass base(Targetname) iconsprite("editor/env_fade") = env_fade : 
	"An entity that controls screen fades."
[
	spawnflags(flags) =
	[
		1: "Fade From" : 0
		2: "Modulate" : 0
		4: "Only affect activator." : 0
		8: "Stay Out" : 0
	]
	duration(string) : "Duration (seconds)" : "2" : "The time that it will take to fade the screen in or out."
	holdtime(string) : "Hold Fade (seconds)" : "0" : "The time to hold the faded in/out state."
	renderamt(integer) : "Fade Alpha" : 255 : "Alpha of the fade, where 0 = fully transparent and 255 = fully opaque." 
	rendercolor(color255) : "Fade Color (R G B)" : "0 0 0"
	
	// Inputs
	input Fade(void) : "Start the screen fade."

	// Outputs
	output OnBeginFade(void) : "Fired when the fade has begun."
]

@PointClass base(Targetname, Parentname, Targetname, EnableDisable) = env_gunfire : "Gunfire Effect"
[
	target(target_destination) : "Target" : "" : "Shoot at this target. REMEMBER - this is an effect only! It does not do damage!"

	minburstsize(integer) : "Min Burst Size" : 2 : "Minimum number of rounds in a burst."
	maxburstsize(integer) : "Max Burst Size" : 7 : "Maximum number of rounds in a burst."

	minburstdelay(float) : "Min Delay Between Bursts" : 2 : "Minimum delay between bursts. (seconds)"
	maxburstdelay(float) : "Max Delay Between Bursts" : 5 : "Maximum delay between bursts. (seconds)"

	rateoffire(float) : "Rate of fire" : 10 : "Expressed as rounds per second"

	spread(choices) : "Bullet spread" : 5 : "The 'cone of inaccuracy' of the shots fired by this entity." =
	[
		1 : "1 Degree"
		5 : "5 Degrees"
		10 : "10 Degrees"
		15 : "15 Degrees"
	]

	bias(choices) : "Bullet distribution should be..." : 1 : "How to distribute bullets within the spread. Even distribution is a true scatter throughout the spread. Biased towards the outside makes the shots 'miss' the target by tending towards the outside of the spread." =
	[
		1 : "Evenly distributed"
		-1 : "Biased towards the outside"
	]

	collisions(choices) : "Collision detection" : 0 : "Whether/how to handle bullet collision detection. NOTE: If you select NONE, this entity will be very cheap to use, but all bullets will stop short at their target's position in space and there will be no impact effects. Normal collision detection does the same things NPCs do when they fire their guns (except harm anything)." =
	[
		0 : "None. Cheap for performance."
		1 : "Normal collision detection."
	]

	shootsound(choices) : "Shoot Sound" : "Weapon_AR2.NPC_Single" : "Gunfire sound to make" = 
	[
		"Weapon_AR2.NPC_Single" : "AR2"
		"Weapon_SMG1.NPC_Single" : "SMG1"
	]

	tracertype(choices) : "Tracer" : "AR2TRACER" : "Type of tracer to display" = 
	[
		"Tracer" : "Default"
		"AR2TRACER" : "AR2"
	]
]

@PointClass base(Targetname) studio("models/weapons/w_grenade.mdl") = npc_handgrenade : "Grenade that explodes immediately after it is spawned"
[
]

@PointClass base(Targetname) studio("models/weapons/w_grenade.mdl") = npc_concussiongrenade : "Grenade that explodes on contract"
[
]

@PointClass base(Targetname) = target_changegravity : "Changes the gravity of the player who activates this entity"
[
	gravity(integer) : "Gravity" : 1 : "Gravity."

	// Inputs
	input ChangeGrav(void) : "Change the activator's gravity."
	input ResetGrav(void) : "Reset the activator's gravity."
]

@SolidClass base(Targetname) = func_weight_button : "A button which activates after a specified amount of weight is applied"
[
	WeightToActivate(float) 	: "Amount of weight required before this button activates."

	//Outputs
	output OnPressed(void)		: "Fired when the button is touching enough weight."
	output OnReleased(void)		: "Fired when the button was pressed, but weight was removed."
]

@SolidClass base(Door, Origin) = func_water : 
	"A brush entity for use as a player-useable door."
[
	movedir(angle) : "Move Direction (Pitch Yaw Roll)" : "0 0 0" : "The direction the door will move, when it opens."

	filtername(filterclass) : "Block Filter Name" : : "Filter to use to determine entities that block the door. ( Half-Life: Source port only )"
]

//-------------------------------------------------------------------------
//
// Vehicles.
//
//-------------------------------------------------------------------------
@BaseClass base(Targetname, Origin, Global, Pprop_static_base) = BaseVehicle
[
	vehiclescript(string) : "Vehicle Script File" : "scripts/vehicles/jeep_test.txt"
	actionScale(float) : "Scale of action input / framerate" : "1"

	// Inputs
	input Action(float) : "Set the speed of the action animation"

	input TurnOn(void) : "Turn on: Start engine & enable throttle"
	input TurnOff(void) : "Turn off: Stop engine, disable throttle, engage brakes."

	input Lock(void) : "Prevent the player from entering or exiting the vehicle."
	input Unlock(void) : "Re-allow the player to enter or exit the vehicle."
]


@BaseClass base(BaseVehicle) = BaseDriveableVehicle
[
	VehicleLocked(choices) : "Start locked" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]	

	// Outputs
	output PlayerOn(void) : "Player entered the vehicle"
	output PlayerOff(void) : "Player exited the vehicle"
	
	output PressedAttack(void) : "Player Pressed attack key"
	output PressedAttack2(void) : "Player Pressed attack2 key"

	output AttackAxis(string) : "State of attack button [0,1]"
	output Attack2Axis(string) : "State of attack2 button [0,1]"
	
	// Inputs
	input HandBrakeOn(void) : "Turns the handbrake on"
	input HandBrakeOff(void): "Releases the handbrake"
]

@PointClass base(BaseVehicle) studioprop() = prop_vehicle :
	"Studiomodel vehicle that can be driven via inputs."
[
	// Inputs
	input Steer(float) : "Steer the vehicle +/-1"
	input Throttle(float) : "Throttle +/-1"

	spawnflags(flags) =
	[
		1 : "Always Think (Run physics every frame)" : 0
	]
]


@PointClass base(BaseDriveableVehicle) studioprop() = prop_vehicle_driveable :
	"Generic driveable studiomodel vehicle."
[
]